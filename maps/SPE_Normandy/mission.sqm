version=54;
class EditorData
{
	moveGridStep=1;
	angleGridStep=0.2617994;
	scaleGridStep=1;
	autoGroupingDist=10;
	toggles=513;
	mods[]=
	{
		"3denEnhanced"
	};
	class ItemIDProvider
	{
		nextID=402;
	};
	class LayerIndexProvider
	{
		nextID=217;
	};
	class Camera
	{
		pos[]={11836.958,118.3947,2277.8367};
		dir[]={0.548756,-0.38461012,0.74225694};
		up[]={0.22864501,0.9230783,0.30926931};
		aside[]={0.80410928,1.1525117e-008,-0.59448391};
	};
};
binarizationWanted=0;
sourceName="vn_mikeforce_indev";
addons[]=
{
	"modules_f_vietnam",
	"A3_Modules_F",
	"A3_Modules_F_Curator_Curator",
	"A3_Characters_F",
	"A3_Ui_F",
	"WW2_SPE_Core_c_UI_Gui_c",
	"objects_f_vietnam_c",
	"structures_f_vietnam_c",
	"A3_Structures_F_Heli_Civ_Constructions",
	"weapons_f_vietnam_c",
	"wheeled_f_vietnam_c",
	"A3_Structures_F_Items_Tools",
	"characters_f_vietnam_c",
	"sounds_f_vietnam_c",
	"A3_Misc_F_Helpers",
	"ww2_spe_missions_p_utilityfunctions_f_revivetoksa",
	"WW2_SPE_Core_c_System_Curator_c_ambientWarSounds",
	"ww2_spe_missions_p_utilityfunctions_f",
	"armor_f_vietnam_c",
	"WW2_SPE_Assets_c_Vehicles_Planes_c_P47",
	"WW2_SPE_Assets_c_Vehicles_Planes_c_Pylons",
	"WW2_SPE_Core_c_EditorPreviews_c",
	"WW2_SPE_Assets_c_Vehicles_Extended_HUD_c",
	"WW2_SPE_Assets_c_Vehicles_ModelConfig_c",
	"WW2_SPE_Assets_c_Vehicles_Pictures_c",
	"WW2_SPE_Assets_c_Vehicles_SimpleObjects_c",
	"WW2_SPE_Assets_c_Vehicles_TurretsConfig_c",
	"WW2_SPE_Assets_c_Vehicles_Icons_c",
	"WW2_SPE_Core_c_Core_c_Eventhandlers",
	"WW2_SPE_Assets_c_Vehicles_SoundFrameWork_c",
	"A3_Structures_F_Mil_Helipads",
	"WW2_SPE_Assets_c_Characters_Frenchs_c_FR_FFI",
	"weapons_f_vietnam_04_c",
	"WW2_SPE_Assets_c_Weapons_InfantryWeapons_c",
	"A3_Weapons_F",
	"WW2_SPE_Assets_c_Characters_Headgear_c",
	"WW2_SPE_Assets_c_Characters_Civilians_c_French_Gear",
	"WW2_SPE_Assets_c_Characters_Frenchs_c_FR_FFI_Gear",
	"WW2_SPE_Assets_c_Weapons_Recoil_c",
	"WW2_SPE_Assets_c_Weapons_Sounds_c",
	"WW2_SPE_Assets_c_Characters_Americans_c_US_Army_Gear",
	"WW2_SPE_Assets_c_Characters_Frenchs_c_FR_Late_Gear",
	"WW2_SPE_Assets_c_Characters_Germans_c_GER_Wehrmacht_Gear",
	"WW2_SPE_Core_c_Core_c",
	"WW2_SPE_Assets_c_Vehicles_WheeledAPC_c_SdKfz250"
};
class AddonsMetaData
{
	class List
	{
		items=45;
		class Item0
		{
			className="modules_f_vietnam";
			name="modules_f_vietnam";
			author="Savage Game Design";
			url="https://www.arma3.com";
		};
		class Item1
		{
			className="A3_Modules_F";
			name="Arma 3 Alpha - Scripted Modules";
			author="Bohemia Interactive";
			url="https://www.arma3.com";
		};
		class Item2
		{
			className="A3_Modules_F_Curator";
			name="Arma 3 Zeus Update - Scripted Modules";
			author="Bohemia Interactive";
			url="https://www.arma3.com";
		};
		class Item3
		{
			className="A3_Characters_F";
			name="Arma 3 Alpha - Characters and Clothing";
			author="Bohemia Interactive";
			url="https://www.arma3.com";
		};
		class Item4
		{
			className="A3_Ui_F";
			name="Arma 3 - User Interface";
			author="Bohemia Interactive";
			url="https://www.arma3.com";
		};
		class Item5
		{
			className="WW2_SPE_Core_c_UI_Gui_c";
			name="WW2_SPE_Core_c_UI_Gui_c";
		};
		class Item6
		{
			className="objects_f_vietnam_c";
			name="objects_f_vietnam_c";
			author="Savage Game Design";
			url="https://www.arma3.com";
		};
		class Item7
		{
			className="structures_f_vietnam_c";
			name="structures_f_vietnam_c";
			author="Savage Game Design";
			url="https://www.arma3.com";
		};
		class Item8
		{
			className="A3_Structures_F_Heli";
			name="Arma 3 Helicopters - Buildings and Structures";
			author="Bohemia Interactive";
			url="https://www.arma3.com";
		};
		class Item9
		{
			className="weapons_f_vietnam_c";
			name="weapons_f_vietnam_c";
			author="Savage Game Design";
			url="https://www.arma3.com";
		};
		class Item10
		{
			className="wheeled_f_vietnam_c";
			name="wheeled_f_vietnam_c";
			author="Savage Game Design";
			url="https://www.arma3.com";
		};
		class Item11
		{
			className="A3_Structures_F";
			name="Arma 3 - Buildings and Structures";
			author="Bohemia Interactive";
			url="https://www.arma3.com";
		};
		class Item12
		{
			className="characters_f_vietnam_c";
			name="characters_f_vietnam_c";
			author="Savage Game Design";
			url="https://www.arma3.com";
		};
		class Item13
		{
			className="sounds_f_vietnam_c";
			name="sounds_f_vietnam_c";
			author="Savage Game Design";
			url="https://www.arma3.com";
		};
		class Item14
		{
			className="A3_Misc_F";
			name="Arma 3 - 3D Aids and Helpers";
			author="Bohemia Interactive";
			url="https://www.arma3.com";
		};
		class Item15
		{
			className="WW2_SPE_Missions_p_UtilityFunctions_f_ReviveToksa";
			name="ww2_spe_missions_p_utilityfunctions_f_revivetoksa";
		};
		class Item16
		{
			className="WW2_SPE_Core_c_System_Curator_c_ambientWarSounds";
			name="WW2_SPE_Core_c_System_Curator_c_ambientWarSounds";
		};
		class Item17
		{
			className="WW2_SPE_Missions_p_UtilityFunctions_f";
			name="ww2_spe_missions_p_utilityfunctions_f";
		};
		class Item18
		{
			className="armor_f_vietnam_c";
			name="armor_f_vietnam_c";
			author="Savage Game Design";
			url="https://www.arma3.com";
		};
		class Item19
		{
			className="WW2_SPE_Assets_c_Vehicles_Planes_c_P47";
			name="WW2_SPE_Assets_c_Vehicles_Planes_c_P47";
		};
		class Item20
		{
			className="WW2_SPE_Assets_c_Vehicles_Planes_c_Pylons";
			name="WW2_SPE_Assets_c_Vehicles_Planes_c_Pylons";
		};
		class Item21
		{
			className="WW2_SPE_Core_c_EditorPreviews_c";
			name="WW2_SPE_Core_c_EditorPreviews_c";
		};
		class Item22
		{
			className="WW2_SPE_Assets_c_Vehicles_Extended_HUD_c";
			name="WW2_SPE_Assets_c_Vehicles_Extended_HUD_c";
		};
		class Item23
		{
			className="WW2_SPE_Assets_c_Vehicles_ModelConfig_c";
			name="WW2_SPE_Assets_c_Vehicles_ModelConfig_c";
		};
		class Item24
		{
			className="WW2_SPE_Assets_c_Vehicles_Pictures_c";
			name="WW2_SPE_Assets_c_Vehicles_Pictures_c";
		};
		class Item25
		{
			className="WW2_SPE_Assets_c_Vehicles_SimpleObjects_c";
			name="WW2_SPE_Assets_c_Vehicles_SimpleObjects_c";
		};
		class Item26
		{
			className="WW2_SPE_Assets_c_Vehicles_TurretsConfig_c";
			name="WW2_SPE_Assets_c_Vehicles_TurretsConfig_c";
		};
		class Item27
		{
			className="WW2_SPE_Assets_c_Vehicles_Icons_c";
			name="WW2_SPE_Assets_c_Vehicles_Icons_c";
		};
		class Item28
		{
			className="WW2_SPE_Core_c_Core_c_Eventhandlers";
			name="WW2_SPE_Core_c_Core_c_Eventhandlers";
		};
		class Item29
		{
			className="WW2_SPE_Assets_c_Vehicles_SoundFrameWork_c";
			name="WW2_SPE_Assets_c_Vehicles_SoundFrameWork_c";
		};
		class Item30
		{
			className="A3_Structures_F_Mil";
			name="Arma 3 - Military Buildings and Structures";
			author="Bohemia Interactive";
			url="https://www.arma3.com";
		};
		class Item31
		{
			className="WW2_SPE_Assets_c_Characters_Frenchs_c_FR_FFI";
			name="WW2_SPE_Assets_c_Characters_Frenchs_c_FR_FFI";
		};
		class Item32
		{
			className="weapons_f_vietnam_04_c";
			name="weapons_f_vietnam_04_c";
			author="Savage Game Design";
			url="https://www.arma3.com";
		};
		class Item33
		{
			className="WW2_SPE_Assets_c_Weapons_InfantryWeapons_c";
			name="WW2_SPE_Assets_c_Weapons_InfantryWeapons_c";
		};
		class Item34
		{
			className="A3_Weapons_F";
			name="Arma 3 Alpha - Weapons and Accessories";
			author="Bohemia Interactive";
			url="https://www.arma3.com";
		};
		class Item35
		{
			className="WW2_SPE_Assets_c_Characters_Headgear_c";
			name="WW2_SPE_Assets_c_Characters_Headgear_c";
		};
		class Item36
		{
			className="WW2_SPE_Assets_c_Characters_Civilians_c_French_Gear";
			name="WW2_SPE_Assets_c_Characters_Civilians_c_French_Gear";
		};
		class Item37
		{
			className="WW2_SPE_Assets_c_Characters_Frenchs_c_FR_FFI_Gear";
			name="WW2_SPE_Assets_c_Characters_Frenchs_c_FR_FFI_Gear";
		};
		class Item38
		{
			className="WW2_SPE_Assets_c_Weapons_Recoil_c";
			name="WW2_SPE_Assets_c_Weapons_Recoil_c";
		};
		class Item39
		{
			className="WW2_SPE_Assets_c_Weapons_Sounds_c";
			name="WW2_SPE_Assets_c_Weapons_Sounds_c";
			author="Heavy Ordnance Works";
		};
		class Item40
		{
			className="WW2_SPE_Assets_c_Characters_Americans_c_US_Army_Gear";
			name="WW2_SPE_Assets_c_Characters_Americans_c_US_Army_Gear";
		};
		class Item41
		{
			className="WW2_SPE_Assets_c_Characters_Frenchs_c_FR_Late_Gear";
			name="WW2_SPE_Assets_c_Characters_Frenchs_c_FR_Late_Gear";
		};
		class Item42
		{
			className="WW2_SPE_Assets_c_Characters_Germans_c_GER_Wehrmacht_Gear";
			name="WW2_SPE_Assets_c_Characters_Germans_c_GER_Wehrmacht_Gear";
		};
		class Item43
		{
			className="WW2_SPE_Core_c_Core_c";
			name="WW2_SPE_Core_c_Core_c";
		};
		class Item44
		{
			className="WW2_SPE_Assets_c_Vehicles_WheeledAPC_c_SdKfz250";
			name="WW2_SPE_Assets_c_Vehicles_WheeledAPC_c_SdKfz250";
		};
	};
};
dlcs[]=
{
	"VN",
	"Heli",
	"SPE"
};
randomSeed=12357342;
class ScenarioData
{
	author="Savage Game Design (Ported by Bro-Nation)";
};
class CustomAttributes
{
	class Category0
	{
		name="Scenario";
		class Attribute0
		{
			property="cba_settings_hasSettingsFile";
			expression="false";
			class Value
			{
				class data
				{
					singleType="BOOL";
					value=1;
				};
			};
		};
		class Attribute1
		{
			property="SPE_All_Obj_FX";
			expression="false";
			class Value
			{
				class data
				{
					singleType="BOOL";
					value=1;
				};
			};
		};
		nAttributes=2;
	};
};
class Mission
{
	appId=1175380;
	class Intel
	{
		resistanceWest=0;
		resistanceEast=1;
		timeOfChanges=1800.0002;
		startWeather=0.30000001;
		startWind=0.1;
		startWaves=0.1;
		forecastWeather=0;
		forecastWind=0.1;
		forecastWaves=0.1;
		forecastLightnings=0.1;
		year=1944;
		month=7;
		day=25;
		hour=8;
		minute=0;
		startFogDecay=0.014;
		forecastFogDecay=0.014;
	};
	class Entities
	{
		items=148;
		class Item0
		{
			dataType="Logic";
			class PositionInfo
			{
				position[]={1162.7715,40.666874,-202.7041};
				angles[]={6.2745748,0,0.0024657};
			};
			id=0;
			type="vn_module_logistics";
			atlOffset=3.8146973e-006;
		};
		class Item1
		{
			dataType="Logic";
			class PositionInfo
			{
				position[]={1028.031,40.750828,-209.13867};
				angles[]={0.057185713,0,0.0016558425};
			};
			name="vn_mf_masterarm";
			id=2;
			type="vn_module_masterarm";
			class CustomAttributes
			{
				class Attribute0
				{
					property="vn_module_masterarm_ammo_vehicles";
					expression="_this setVariable ['ammo_vehicles',_value,true];";
					class Value
					{
						class data
						{
							singleType="STRING";
							value="[""Land_vn_us_vehicleammo"", ""Land_vn_usaf_fueltank_75_01""]";
						};
					};
				};
				class Attribute1
				{
					property="vn_module_masterarm_repair_vehicles";
					expression="_this setVariable ['repair_vehicles',_value,true];";
					class Value
					{
						class data
						{
							singleType="STRING";
							value="[""Land_vn_us_vehicleammo"", ""Land_vn_usaf_fueltank_75_01""]";
						};
					};
				};
				class Attribute2
				{
					property="vn_module_masterarm_fuel_vehicles";
					expression="_this setVariable ['fuel_vehicles',_value,true];";
					class Value
					{
						class data
						{
							singleType="STRING";
							value="[""Land_vn_us_vehicleammo"", ""Land_vn_usaf_fueltank_75_01""]";
						};
					};
				};
				nAttributes=3;
			};
		};
		class Item2
		{
			dataType="Logic";
			class PositionInfo
			{
				position[]={1321.1194,40.582344,-195.19482};
				angles[]={6.2639928,0,0.041308183};
			};
			name="vn_mf_veh_asset_logic";
			id=3;
			type="Logic";
		};
		class Item3
		{
			dataType="Logic";
			class PositionInfo
			{
				position[]={1139.3262,40.627007,-202.96143};
				angles[]={6.2671237,0,0.0009765625};
			};
			init="if (isServer) then {" \n "  [] spawn {" \n "    while {isNil ""stopCuratorLoop""} do {" \n "      { _x addCuratorEditableObjects [vehicles + allUnits]} forEach allCurators;" \n "      uisleep 10;" \n "    };" \n "  };" \n "};";
			id=4;
			type="ModuleCurator_F";
			class CustomAttributes
			{
				class Attribute0
				{
					property="ModuleCurator_F_Owner";
					expression="_this setVariable ['Owner',_value,true];";
					class Value
					{
						class data
						{
							singleType="STRING";
							value="#adminLogged";
						};
					};
				};
				class Attribute1
				{
					property="ModuleCurator_F_Forced";
					expression="_this setVariable ['Forced',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=0;
						};
					};
				};
				class Attribute2
				{
					property="ModuleCurator_F_Name";
					expression="_this setVariable ['Name',_value,true];";
					class Value
					{
						class data
						{
							singleType="STRING";
							value="Zeus (Admin)";
						};
					};
				};
				class Attribute3
				{
					property="ModuleCurator_F_Addons";
					expression="_this setVariable ['Addons',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=3;
						};
					};
				};
				nAttributes=4;
			};
		};
		class Item4
		{
			dataType="Logic";
			class PositionInfo
			{
				position[]={1336.5833,41.429218,-195.3833};
				angles[]={6.2531619,0,0.054011885};
			};
			name="hc1";
			isPlayable=1;
			id=5;
			type="HeadlessClient_F";
		};
		class Item5
		{
			dataType="Logic";
			class PositionInfo
			{
				position[]={1336.511,41.326492,-198.71826};
				angles[]={6.250391,0,0.051783171};
			};
			name="hc2";
			isPlayable=1;
			id=6;
			type="HeadlessClient_F";
			atlOffset=7.6293945e-006;
		};
		class Item6
		{
			dataType="Logic";
			class PositionInfo
			{
				position[]={1339.4016,41.506046,-197.37939};
				angles[]={6.2531619,0,0.042909574};
			};
			name="hc3";
			isPlayable=1;
			id=7;
			type="HeadlessClient_F";
			atlOffset=3.8146973e-006;
		};
		class Item7
		{
			dataType="Logic";
			class PositionInfo
			{
				position[]={1190.5957,40.244549,-202.96143};
				angles[]={6.2640672,0,6.2684193};
			};
			id=9;
			type="vn_module_gesturemenu";
			atlOffset=3.8146973e-006;
			class CustomAttributes
			{
				class Attribute0
				{
					property="vn_module_gesturemenu_maxRange";
					expression="_this setVariable ['vn_module_gesturemenu_maxRange',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=25;
						};
					};
				};
				nAttributes=1;
			};
		};
		class Item8
		{
			dataType="Logic";
			class PositionInfo
			{
				position[]={1112.79,40.535225,-202.44727};
				angles[]={0.014749946,0,0.0055242786};
			};
			id=10;
			type="vn_module_whitelistedarsenal";
			class CustomAttributes
			{
				class Attribute0
				{
					property="vn_module_whitelistedarsenal_rank";
					expression="_this setVariable ['rank',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=0;
						};
					};
				};
				class Attribute1
				{
					property="vn_module_whitelistedarsenal_equipment";
					expression="_this setVariable ['equipment',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=2;
						};
					};
				};
				class Attribute2
				{
					property="vn_module_whitelistedarsenal_scope";
					expression="_this setVariable ['scope',_value,true];";
					class Value
					{
						class data
						{
							singleType="STRING";
							value="[""vn_mikeforce""]";
						};
					};
				};
				class Attribute3
				{
					property="vn_module_whitelistedarsenal_side";
					expression="_this setVariable ['side',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=1;
						};
					};
				};
				nAttributes=4;
			};
		};
		class Item9
		{
			dataType="Layer";
			name="Easter Eggs";
			id=11;
			atlOffset=-22.940001;
		};
		class Item10
		{
			dataType="Layer";
			name="Zones";
			class Entities
			{
				items=31;
				class Item0
				{
					dataType="Marker";
					position[]={6414.855,82.321762,7214.0938};
					name="zone_a_bung";
					markerType="ELLIPSE";
					type="ellipse";
					colorName="ColorRed";
					alpha=0.50280958;
					a=-600;
					b=-600;
					id=14;
					atlOffset=32.826836;
				};
				class Item1
				{
					dataType="Marker";
					position[]={10556.599,45.277042,2767.3108};
					name="zone_co_put";
					markerType="ELLIPSE";
					type="ellipse";
					colorName="ColorRed";
					alpha=0.50280958;
					a=-600;
					b=-600;
					id=15;
				};
				class Item2
				{
					dataType="Marker";
					position[]={5299.5723,71.716675,1451.7144};
					name="zone_french_fort";
					markerType="ELLIPSE";
					type="ellipse";
					colorName="ColorRed";
					alpha=0.50280958;
					a=-600;
					b=-600;
					id=16;
					atlOffset=22.78331;
				};
				class Item3
				{
					dataType="Marker";
					position[]={11130.577,45.267284,11090.855};
					name="zone_hickory_hill";
					markerType="ELLIPSE";
					type="ellipse";
					colorName="ColorRed";
					alpha=0.50280958;
					a=-600;
					b=-600;
					id=17;
					atlOffset=25.838711;
				};
				class Item4
				{
					dataType="Marker";
					position[]={10447.474,57.769497,4873.8584};
					name="zone_hill_203";
					markerType="ELLIPSE";
					type="ellipse";
					colorName="ColorRed";
					alpha=0.50280958;
					a=-600;
					b=-600;
					id=18;
					atlOffset=15.330345;
				};
				class Item5
				{
					dataType="Marker";
					position[]={10383.677,49.329937,9338.5195};
					name="zone_hill_399";
					markerType="ELLIPSE";
					type="ellipse";
					colorName="ColorRed";
					alpha=0.50280958;
					a=-600;
					b=-600;
					id=19;
					atlOffset=38.19767;
				};
				class Item6
				{
					dataType="Marker";
					position[]={7547.2397,49.766846,1006.2378};
					name="zone_hill_538";
					markerType="ELLIPSE";
					type="ellipse";
					colorName="ColorRed";
					alpha=0.50280958;
					a=-600;
					b=-600;
					id=20;
					atlOffset=-29.823166;
				};
				class Item7
				{
					dataType="Marker";
					position[]={2317.1943,54.63623,7597.6182};
					name="zone_hill_881";
					markerType="ELLIPSE";
					type="ellipse";
					colorName="ColorRed";
					alpha=0.50280958;
					a=-600;
					b=-600;
					id=21;
					atlOffset=-4.846386;
				};
				class Item8
				{
					dataType="Marker";
					position[]={8737.8477,60.893417,8265.2734};
					name="zone_hill_861";
					markerType="ELLIPSE";
					type="ellipse";
					colorName="ColorRed";
					alpha=0.50280958;
					a=-600;
					b=-600;
					id=22;
					atlOffset=8.4800682;
				};
				class Item9
				{
					dataType="Marker";
					position[]={4531.8882,33.330811,8362.3408};
					name="zone_northwest_jungle";
					markerType="ELLIPSE";
					type="ellipse";
					colorName="ColorRed";
					alpha=0.50280958;
					a=-600;
					b=-600;
					id=23;
					atlOffset=-14.770435;
				};
				class Item10
				{
					dataType="Marker";
					position[]={8156.918,20.442749,10165.049};
					name="zone_kate";
					markerType="ELLIPSE";
					type="ellipse";
					colorName="ColorRed";
					alpha=0.50280958;
					a=-600;
					b=-600;
					id=24;
					atlOffset=-28.067524;
				};
				class Item11
				{
					dataType="Marker";
					position[]={2984.7024,73.286552,1323.4351};
					name="zone_khe_sanh";
					markerType="ELLIPSE";
					type="ellipse";
					colorName="ColorRed";
					alpha=0.50280958;
					a=-600;
					b=-600;
					id=25;
					atlOffset=30.754951;
				};
				class Item12
				{
					dataType="Marker";
					position[]={4220.6182,58.080246,9902.5752};
					name="zone_khe_sanh_base";
					markerType="ELLIPSE";
					type="ellipse";
					colorName="ColorRed";
					alpha=0.50280958;
					a=-600;
					b=-600;
					id=26;
					atlOffset=24.845943;
				};
				class Item13
				{
					dataType="Marker";
					position[]={10068.253,77.555664,1030.3401};
					name="zone_koanphan";
					markerType="ELLIPSE";
					type="ellipse";
					colorName="ColorRed";
					alpha=0.50280958;
					a=-600;
					b=-600;
					id=27;
					atlOffset=-7.3478088;
				};
				class Item14
				{
					dataType="Marker";
					position[]={8437.3164,48.488281,2805.5042};
					name="zone_kok";
					markerType="ELLIPSE";
					type="ellipse";
					colorName="ColorRed";
					alpha=0.50280958;
					a=-600;
					b=-600;
					id=28;
					atlOffset=-10.494987;
				};
				class Item15
				{
					dataType="Marker";
					position[]={945.47296,73.11628,3127.9419};
					name="zone_lang_hoan_tap";
					markerType="ELLIPSE";
					type="ellipse";
					colorName="ColorRed";
					alpha=0.50280958;
					a=-600;
					b=-600;
					id=29;
					atlOffset=50.025089;
				};
				class Item16
				{
					dataType="Marker";
					position[]={6560.106,43.144165,3010.2629};
					name="zone_lang_temp";
					markerType="ELLIPSE";
					type="ellipse";
					colorName="ColorRed";
					alpha=0.50280958;
					a=-600;
					b=-600;
					id=30;
					atlOffset=-12.166767;
				};
				class Item17
				{
					dataType="Marker";
					position[]={2728.5703,38.066895,4026.5735};
					name="zone_lang_vei";
					markerType="ELLIPSE";
					type="ellipse";
					colorName="ColorRed";
					alpha=0.50280958;
					a=-600;
					b=-600;
					id=31;
					atlOffset=-12.276497;
				};
				class Item18
				{
					dataType="Marker";
					position[]={3721.7563,36.98877,11490.392};
					name="zone_mouang_nong";
					markerType="ELLIPSE";
					type="ellipse";
					colorName="ColorRed";
					alpha=0.50280958;
					a=-600;
					b=-600;
					id=32;
					atlOffset=2.0394974;
				};
				class Item19
				{
					dataType="Marker";
					position[]={7113.2529,32.493774,8666.1211};
					name="zone_mu_ta";
					markerType="ELLIPSE";
					type="ellipse";
					colorName="ColorRed";
					alpha=0.50280958;
					a=-600;
					b=-600;
					id=33;
					atlOffset=-12.212536;
				};
				class Item20
				{
					dataType="Marker";
					position[]={8159.813,53.814331,5642.2231};
					name="zone_nabo";
					markerType="ELLIPSE";
					type="ellipse";
					colorName="ColorRed";
					alpha=0.50280958;
					a=-600;
					b=-600;
					id=34;
					atlOffset=-9.5821953;
				};
				class Item21
				{
					dataType="Marker";
					position[]={8646.2617,42.858643,11499.293};
					name="zone_nam_hung";
					markerType="ELLIPSE";
					type="ellipse";
					colorName="ColorRed";
					alpha=0.50280958;
					a=-600;
					b=-600;
					id=35;
					atlOffset=8.8495178;
				};
				class Item22
				{
					dataType="Marker";
					position[]={1413.8123,52.692883,5597.3833};
					name="zone_lang_ou_hi";
					markerType="ELLIPSE";
					type="ellipse";
					colorName="ColorRed";
					alpha=0.50280958;
					a=-600;
					b=-600;
					id=36;
					atlOffset=1.1985703;
				};
				class Item23
				{
					dataType="Marker";
					position[]={5938.1714,51.447895,9854.5605};
					name="zone_ro_ro";
					markerType="ELLIPSE";
					type="ellipse";
					colorName="ColorRed";
					alpha=0.50280958;
					a=-600;
					b=-600;
					id=37;
					atlOffset=14.730934;
				};
				class Item24
				{
					dataType="Marker";
					position[]={6605.5366,29.220459,11568.336};
					name="zone_pagnouy";
					markerType="ELLIPSE";
					type="ellipse";
					colorName="ColorRed";
					alpha=0.50280958;
					a=-600;
					b=-600;
					id=38;
					atlOffset=-18.248333;
				};
				class Item25
				{
					dataType="Marker";
					position[]={1914.9877,35.95813,9733.1367};
					name="zone_pomkhoun";
					markerType="ELLIPSE";
					type="ellipse";
					colorName="ColorRed";
					alpha=0.5;
					a=-600;
					b=-600;
					id=39;
					atlOffset=-45.38031;
				};
				class Item26
				{
					dataType="Marker";
					position[]={10545.951,28.140259,6624.853};
					name="zone_river_edge";
					markerType="ELLIPSE";
					type="ellipse";
					colorName="ColorRed";
					alpha=0.50280958;
					a=-600;
					b=-600;
					id=40;
					atlOffset=-41.258034;
				};
				class Item27
				{
					dataType="Marker";
					position[]={1587.2419,50.784515,11477.479};
					name="zone_sei_na";
					markerType="ELLIPSE";
					type="ellipse";
					colorName="ColorRed";
					alpha=0.50280958;
					a=-600;
					b=-600;
					id=41;
					atlOffset=2.3254585;
				};
				class Item28
				{
					dataType="Marker";
					position[]={5478.6201,61.659912,4338.4346};
					name="zone_that";
					markerType="ELLIPSE";
					type="ellipse";
					colorName="ColorRed";
					alpha=0.50280958;
					a=-600;
					b=-600;
					id=42;
					atlOffset=0.60505295;
				};
				class Item29
				{
					dataType="Marker";
					position[]={3935.042,34.828369,2744.5212};
					name="zone_xom_bau";
					markerType="ELLIPSE";
					type="ellipse";
					colorName="ColorRed";
					alpha=0.50280958;
					a=-600;
					b=-600;
					id=43;
					atlOffset=-14.340439;
				};
				class Item30
				{
					dataType="Marker";
					position[]={3863.4507,68.640297,5872.7178};
					name="zone_xom_ta_can";
					markerType="ELLIPSE";
					type="ellipse";
					colorName="ColorRed";
					alpha=0.50280958;
					a=-600;
					b=-600;
					id=44;
					atlOffset=-0.77871704;
				};
			};
			id=13;
			atlOffset=15.136185;
		};
		class Item11
		{
			dataType="Marker";
			position[]={1224.5857,93.205688,632.37634};
			name="arsenal";
			text="@STR_vn_mf_arsenal";
			type="mil_dot";
			colorName="ColorPink";
			id=45;
			atlOffset=43.81171;
		};
		class Item12
		{
			dataType="Marker";
			position[]={1196.2188,83.831589,496.83447};
			name="arsenal_1";
			text="@STR_vn_mf_arsenal";
			type="mil_dot";
			colorName="ColorPink";
			id=46;
			atlOffset=37.010002;
		};
		class Item13
		{
			dataType="Marker";
			position[]={1354.1035,84.918045,559.0293};
			name="arsenal_2";
			text="@STR_vn_mf_arsenal";
			type="mil_dot";
			colorName="ColorPink";
			id=47;
			atlOffset=31.434116;
		};
		class Item14
		{
			dataType="Layer";
			name="Arsenals";
			class Entities
			{
				items=4;
				class Item0
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={1365.2766,53.701679,563.42053};
						angles[]={6.2798557,3.2119818,0.016666256};
					};
					side="Empty";
					flags=4;
					class Attributes
					{
						disableSimulation=1;
					};
					id=49;
					type="Land_vn_us_weapons_stack2";
					atlOffset=0.025470734;
					class CustomAttributes
					{
						class Attribute0
						{
							property="allowDamage";
							expression="_this allowdamage _value;";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=0;
								};
							};
						};
						nAttributes=1;
					};
				};
				class Item1
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={1781.6313,39.52153,152.77655};
						angles[]={6.2299027,1.1910318,6.2265792};
					};
					side="Empty";
					flags=4;
					class Attributes
					{
						disableSimulation=1;
					};
					id=50;
					type="Land_vn_us_weapons_stack2";
					atlOffset=-0.10552216;
					class CustomAttributes
					{
						class Attribute0
						{
							property="allowDamage";
							expression="_this allowdamage _value;";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=0;
								};
							};
						};
						nAttributes=1;
					};
				};
				class Item2
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={1224.1687,49.398476,632.11621};
						angles[]={6.2398791,5.8533325,0.069885373};
					};
					side="Empty";
					flags=4;
					class Attributes
					{
						disableSimulation=1;
					};
					id=51;
					type="Land_vn_us_weapons_stack2";
					atlOffset=0.082138062;
					class CustomAttributes
					{
						class Attribute0
						{
							property="allowDamage";
							expression="_this allowdamage _value;";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=0;
								};
							};
						};
						nAttributes=1;
					};
				};
				class Item3
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={1690.4169,48.674309,330.38858};
						angles[]={6.2731848,1.2962378,6.2565274};
					};
					side="Empty";
					flags=4;
					class Attributes
					{
						disableSimulation=1;
					};
					id=52;
					type="Land_vn_us_weapons_stack2";
					atlOffset=-0.010604858;
					class CustomAttributes
					{
						class Attribute0
						{
							property="allowDamage";
							expression="_this allowdamage _value;";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=0;
								};
							};
						};
						nAttributes=1;
					};
				};
			};
			id=48;
			atlOffset=-3.6301193;
		};
		class Item15
		{
			dataType="Marker";
			position[]={1196.0723,65.218155,499.104};
			name="duty_officer_acav";
			text="@STR_vn_mf_duty_officer";
			type="mil_dot";
			colorName="ColorWhite";
			angle=92.983536;
			id=53;
			atlOffset=18.670734;
		};
		class Item16
		{
			dataType="Marker";
			position[]={1226.8767,74.701553,633.19568};
			name="duty_officer_mikeforce";
			text="@STR_vn_mf_duty_officer";
			type="mil_dot";
			colorName="ColorWhite";
			angle=230.6922;
			id=54;
			atlOffset=25.150372;
		};
		class Item17
		{
			dataType="Marker";
			position[]={1363.6689,66.164841,558.76758};
			name="duty_officer_spiketeam";
			text="@STR_vn_mf_duty_officer";
			type="mil_dot";
			colorName="ColorWhite";
			angle=263.0108;
			id=55;
			atlOffset=12.511013;
		};
		class Item18
		{
			dataType="Marker";
			position[]={1496.0527,45.847229,171.24414};
			name="wreck_recovery_1";
			markerType="ELLIPSE";
			type="ellipse";
			colorName="ColorBlack";
			fillName="Horizontal";
			a=30;
			b=30;
			id=56;
		};
		class Item19
		{
			dataType="Marker";
			position[]={1207.3467,64.907028,495.09082};
			name="mf_respawn_acav";
			text="@STR_vn_mf_respawn_acav_khe_sanh";
			type="Empty";
			id=57;
			atlOffset=16.482124;
		};
		class Item20
		{
			dataType="Marker";
			position[]={1306.5426,60.587349,520};
			name="mf_respawn_spiketeam";
			text="@STR_vn_mf_respawn_spike_team_khe_sanh";
			type="Empty";
			angle=39.819992;
			id=58;
			atlOffset=6.4507828;
		};
		class Item21
		{
			dataType="Marker";
			position[]={1224.3826,56.186699,629.05115};
			name="mf_respawn_mikeforce";
			text="@STR_vn_mf_respawn_mike_force_khe_sanh";
			type="Empty";
			id=60;
			atlOffset=6.9421577;
		};
		class Item22
		{
			dataType="Marker";
			position[]={1555.5558,52.215115,408.72827};
			name="mf_respawn_greenhornets";
			text="@STR_vn_mf_respawn_green_hornets_khe_sanh";
			type="Empty";
			id=61;
		};
		class Item23
		{
			dataType="Marker";
			position[]={1539.3542,52.769882,376.34009};
			name="rearm";
			text="@STR_vn_mf_rearm";
			type="b_maint";
			id=62;
			atlOffset=1.2678947;
		};
		class Item24
		{
			dataType="Marker";
			position[]={1494.6768,45.854694,171.41699};
			name="wreck_recovery";
			text="@STR_vn_mf_wreck_recovery";
			type="b_maint";
			id=63;
		};
		class Item25
		{
			dataType="Marker";
			position[]={1519.6211,51.978622,429.60352};
			name="helicopter_spawn";
			text="@STR_vn_mf_helicopters";
			type="b_air";
			id=64;
		};
		class Item26
		{
			dataType="Marker";
			position[]={1559.8419,52.446247,408.2146};
			name="duty_officer_greenhornets";
			text="@STR_vn_mf_duty_officer";
			type="mil_dot";
			colorName="ColorWhite";
			angle=287.36862;
			id=65;
			atlOffset=3.8146973e-006;
		};
		class Item27
		{
			dataType="Marker";
			position[]={849.67841,64.78064,847.4187};
			name="supply_officer_initial_1";
			text="Initial Supply Officer 1";
			type="Empty";
			angle=313.58081;
			id=66;
			atlOffset=8.3524017;
		};
		class Item28
		{
			dataType="Marker";
			position[]={835.86798,62.707672,861.44873};
			name="supply_drop_initial_1";
			text="Initial Supply Drop 1";
			type="Empty";
			colorName="ColorOrange";
			angle=141.3416;
			id=67;
			atlOffset=8.1937599;
		};
		class Item29
		{
			dataType="Layer";
			name="Rearm Points";
			class Entities
			{
				items=14;
				class Item0
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={925.28754,56.749695,948.83844};
						angles[]={0,5.2381749,0};
					};
					side="Empty";
					flags=5;
					class Attributes
					{
						disableSimulation=1;
					};
					id=69;
					type="Land_vn_usaf_fueltank_75_01";
					class CustomAttributes
					{
						class Attribute0
						{
							property="allowDamage";
							expression="_this allowdamage _value;";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=0;
								};
							};
						};
						nAttributes=1;
					};
				};
				class Item1
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={929.41937,54.740902,943.93616};
						angles[]={6.249866,0.93193567,0};
					};
					side="Empty";
					flags=4;
					class Attributes
					{
						disableSimulation=1;
					};
					id=70;
					type="Land_vn_us_vehicleammo";
					atlOffset=0.004032135;
					class CustomAttributes
					{
						class Attribute0
						{
							property="allowDamage";
							expression="_this allowdamage _value;";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=0;
								};
							};
						};
						nAttributes=1;
					};
				};
				class Item2
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={1528.3636,55.893806,490.07394};
						angles[]={0,1.6040763,0};
					};
					side="Empty";
					flags=5;
					class Attributes
					{
						disableSimulation=1;
					};
					id=71;
					type="Land_vn_usaf_fueltank_75_01";
					class CustomAttributes
					{
						class Attribute0
						{
							property="allowDamage";
							expression="_this allowdamage _value;";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=0;
								};
							};
						};
						nAttributes=1;
					};
				};
				class Item3
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={1516.6117,51.935894,411.11154};
						angles[]={0,0.93193567,0.0066592805};
					};
					side="Empty";
					flags=4;
					class Attributes
					{
						disableSimulation=1;
					};
					id=72;
					type="Land_vn_us_vehicleammo";
					atlOffset=-0.04127121;
					class CustomAttributes
					{
						class Attribute0
						{
							property="allowDamage";
							expression="_this allowdamage _value;";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=0;
								};
							};
						};
						nAttributes=1;
					};
				};
				class Item4
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={1682.9946,50.777596,339.96976};
						angles[]={0,4.9436469,0};
					};
					side="Empty";
					flags=5;
					class Attributes
					{
						disableSimulation=1;
					};
					id=73;
					type="Land_vn_usaf_fueltank_75_01";
					class CustomAttributes
					{
						class Attribute0
						{
							property="allowDamage";
							expression="_this allowdamage _value;";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=0;
								};
							};
						};
						nAttributes=1;
					};
				};
				class Item5
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={1681.1426,48.981014,345.01514};
						angles[]={6.2631865,3.4804561,6.2598543};
					};
					side="Empty";
					flags=4;
					class Attributes
					{
						disableSimulation=1;
					};
					id=74;
					type="Land_vn_us_vehicleammo";
					atlOffset=-0.10261917;
					class CustomAttributes
					{
						class Attribute0
						{
							property="allowDamage";
							expression="_this allowdamage _value;";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=0;
								};
							};
						};
						nAttributes=1;
					};
				};
				class Item6
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={1792.1227,40.767559,148.02322};
						angles[]={0,0.091308936,0};
					};
					side="Empty";
					flags=5;
					class Attributes
					{
						disableSimulation=1;
					};
					id=75;
					type="Land_vn_usaf_fueltank_75_01";
					atlOffset=3.8146973e-006;
					class CustomAttributes
					{
						class Attribute0
						{
							property="allowDamage";
							expression="_this allowdamage _value;";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=0;
								};
							};
						};
						nAttributes=1;
					};
				};
				class Item7
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={1822.1803,38.865944,141.42697};
						angles[]={6.2731905,0.032469664,0.0066682254};
					};
					side="Empty";
					flags=4;
					class Attributes
					{
						disableSimulation=1;
					};
					id=76;
					type="Land_vn_us_vehicleammo";
					atlOffset=0.073677063;
					class CustomAttributes
					{
						class Attribute0
						{
							property="allowDamage";
							expression="_this allowdamage _value;";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=0;
								};
							};
						};
						nAttributes=1;
					};
				};
				class Item8
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={1794.8181,38.861759,144.12619};
						angles[]={6.2398791,0.032469664,6.2798557};
					};
					side="Empty";
					flags=4;
					class Attributes
					{
						disableSimulation=1;
					};
					id=77;
					type="Land_vn_us_vehicleammo";
					atlOffset=0.13368988;
					class CustomAttributes
					{
						class Attribute0
						{
							property="allowDamage";
							expression="_this allowdamage _value;";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=0;
								};
							};
						};
						nAttributes=1;
					};
				};
				class Item9
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={1216.6011,50.729019,633.37823};
						angles[]={0,4.2441587,0};
					};
					side="Empty";
					flags=5;
					class Attributes
					{
						disableSimulation=1;
					};
					id=78;
					type="Land_vn_usaf_fueltank_75_01";
					class CustomAttributes
					{
						class Attribute0
						{
							property="allowDamage";
							expression="_this allowdamage _value;";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=0;
								};
							};
						};
						nAttributes=1;
					};
				};
				class Item10
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={1239.2318,50.736141,657.41565};
						angles[]={6.1506338,0.93193567,6.2531939};
					};
					side="Empty";
					flags=4;
					class Attributes
					{
						disableSimulation=1;
					};
					id=79;
					type="Land_vn_us_vehicleammo";
					atlOffset=0.16994095;
					class CustomAttributes
					{
						class Attribute0
						{
							property="allowDamage";
							expression="_this allowdamage _value;";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=0;
								};
							};
						};
						nAttributes=1;
					};
				};
				class Item11
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={1527.5594,51.462238,370.58615};
						angles[]={0,0.93193567,0.016666256};
					};
					side="Empty";
					flags=4;
					class Attributes
					{
						disableSimulation=1;
					};
					id=80;
					type="Land_vn_us_vehicleammo";
					atlOffset=0.017913818;
					class CustomAttributes
					{
						class Attribute0
						{
							property="allowDamage";
							expression="_this allowdamage _value;";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=0;
								};
							};
						};
						nAttributes=1;
					};
				};
				class Item12
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={1514.8363,53.951481,440.07394};
						angles[]={0,4.9425664,0};
					};
					side="Empty";
					flags=5;
					class Attributes
					{
						disableSimulation=1;
					};
					id=81;
					type="Land_vn_usaf_fueltank_75_01";
					atlOffset=3.8146973e-006;
					class CustomAttributes
					{
						class Attribute0
						{
							property="allowDamage";
							expression="_this allowdamage _value;";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=0;
								};
							};
						};
						nAttributes=1;
					};
				};
				class Item13
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={1512.7455,53.706459,403.16965};
						angles[]={0,0.033125326,0};
					};
					side="Empty";
					flags=5;
					class Attributes
					{
						disableSimulation=1;
					};
					id=82;
					type="Land_vn_usaf_fueltank_75_01";
					class CustomAttributes
					{
						class Attribute0
						{
							property="allowDamage";
							expression="_this allowdamage _value;";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=0;
								};
							};
						};
						nAttributes=1;
					};
				};
			};
			id=68;
			atlOffset=-1.0800934;
		};
		class Item30
		{
			dataType="Layer";
			name="Wreck Bay";
			class Entities
			{
				items=19;
				class Item0
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={904.68451,55.180866,908.56799};
						angles[]={6.2731905,1.3891909,0.0033296358};
					};
					side="Empty";
					flags=4;
					class Attributes
					{
						createAsSimpleObject=1;
						disableSimulation=1;
					};
					id=84;
					type="Land_ToolTrolley_02_F";
					atlOffset=-3.8146973e-006;
					class CustomAttributes
					{
						class Attribute0
						{
							property="allowDamage";
							expression="_this allowdamage _value;";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=0;
								};
							};
						};
						nAttributes=1;
					};
				};
				class Item1
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={900.11713,55.459297,913.14227};
						angles[]={6.2631893,5.3985548,0.0066682254};
					};
					side="Empty";
					flags=4;
					class Attributes
					{
						createAsSimpleObject=1;
						disableSimulation=1;
					};
					id=85;
					type="Land_WeldingTrolley_01_F";
					atlOffset=-5.3405762e-005;
					class CustomAttributes
					{
						class Attribute0
						{
							property="allowDamage";
							expression="_this allowdamage _value;";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=0;
								};
							};
						};
						nAttributes=1;
					};
				};
				class Item2
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={895.7265,54.704544,916.43964};
						angles[]={6.2033553,2.1677327,0.39479128};
					};
					side="Empty";
					flags=4;
					class Attributes
					{
						disableSimulation=1;
					};
					id=86;
					type="Land_vn_usaf_fueltank_10_case_01";
					atlOffset=-3.8146973e-006;
					class CustomAttributes
					{
						class Attribute0
						{
							property="allowDamage";
							expression="_this allowdamage _value;";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=0;
								};
							};
						};
						nAttributes=1;
					};
				};
				class Item3
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={897.17767,55.32719,917.83417};
						angles[]={6.2531939,2.5430562,6.1277814};
					};
					side="Empty";
					flags=4;
					class Attributes
					{
						disableSimulation=1;
					};
					id=87;
					type="Land_vn_usaf_fueltank_10_case_01";
					atlOffset=3.8146973e-006;
					class CustomAttributes
					{
						class Attribute0
						{
							property="allowDamage";
							expression="_this allowdamage _value;";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=0;
								};
							};
						};
						nAttributes=1;
					};
				};
				class Item4
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={893.52045,56.468819,924.09393};
						angles[]={0,1.6501826,0};
					};
					side="Empty";
					flags=5;
					class Attributes
					{
						disableSimulation=1;
					};
					id=88;
					type="Land_vn_fuel_tank_stairs";
					class CustomAttributes
					{
						class Attribute0
						{
							property="allowDamage";
							expression="_this allowdamage _value;";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=0;
								};
							};
						};
						nAttributes=1;
					};
				};
				class Item5
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={927.56049,55.765133,924.98944};
					};
					side="Empty";
					flags=5;
					class Attributes
					{
						disableSimulation=1;
					};
					id=89;
					type="Land_vn_workshop_04_f";
					class CustomAttributes
					{
						class Attribute0
						{
							property="allowDamage";
							expression="_this allowdamage _value;";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=0;
								};
							};
						};
						nAttributes=1;
					};
				};
				class Item6
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={907.07025,54.721809,909.74042};
						angles[]={6.2665229,4.2622986,6.2798557};
					};
					side="Empty";
					flags=4;
					class Attributes
					{
						disableSimulation=1;
					};
					id=90;
					type="vn_b_ammobox_supply_06";
					atlOffset=0.0030097961;
					class CustomAttributes
					{
						class Attribute0
						{
							property="allowDamage";
							expression="_this allowdamage _value;";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=0;
								};
							};
						};
						nAttributes=1;
					};
				};
				class Item7
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={894.94769,54.98933,929.59589};
						angles[]={6.2731848,0.42233917,0.016662678};
					};
					side="Empty";
					flags=4;
					class Attributes
					{
						disableSimulation=1;
					};
					id=91;
					type="vn_b_ammobox_supply_06";
					atlOffset=-0.002456665;
					class CustomAttributes
					{
						class Attribute0
						{
							property="allowDamage";
							expression="_this allowdamage _value;";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=0;
								};
							};
						};
						nAttributes=1;
					};
				};
				class Item8
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={923.25677,54.472778,917.0993};
						angles[]={0.019999012,5.8389025,6.2631865};
					};
					side="Empty";
					flags=4;
					class Attributes
					{
						disableSimulation=1;
					};
					id=92;
					type="vn_b_ammobox_supply_06";
					atlOffset=-0.00012969971;
					class CustomAttributes
					{
						class Attribute0
						{
							property="allowDamage";
							expression="_this allowdamage _value;";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=0;
								};
							};
						};
						nAttributes=1;
					};
				};
				class Item9
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={899.57806,56.007042,909.77753};
						angles[]={6.2598572,4.66465,0.013332055};
					};
					side="Empty";
					flags=4;
					class Attributes
					{
						disableSimulation=1;
					};
					id=93;
					type="vn_wheeled_m54_01_wreck";
					atlOffset=-0.00017929077;
					class CustomAttributes
					{
						class Attribute0
						{
							property="allowDamage";
							expression="_this allowdamage _value;";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=0;
								};
							};
						};
						nAttributes=1;
					};
				};
				class Item10
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={921.52533,55.20388,908.06116};
						angles[]={0.033322938,5.122736,0.019999012};
					};
					side="Empty";
					flags=4;
					class Attributes
					{
						createAsSimpleObject=1;
						disableSimulation=1;
					};
					id=94;
					type="Land_ToolTrolley_01_F";
					atlOffset=-0.00037765503;
					class CustomAttributes
					{
						class Attribute0
						{
							property="allowDamage";
							expression="_this allowdamage _value;";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=0;
								};
							};
						};
						nAttributes=1;
					};
				};
				class Item11
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={921.59174,54.791607,908.06415};
						angles[]={0.033322938,4.9140701,0.019999012};
					};
					side="Empty";
					flags=4;
					class Attributes
					{
						createAsSimpleObject=1;
						disableSimulation=1;
					};
					id=95;
					type="Land_Grinder_F";
					atlOffset=-6.4849854e-005;
					class CustomAttributes
					{
						class Attribute0
						{
							property="allowDamage";
							expression="_this allowdamage _value;";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=0;
								};
							};
						};
						nAttributes=1;
					};
				};
				class Item12
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={925.91644,55.382206,910.80188};
						angles[]={0.043306526,1.6249036,0.023328418};
					};
					side="Empty";
					flags=4;
					class Attributes
					{
						createAsSimpleObject=1;
						disableSimulation=1;
					};
					id=96;
					type="Land_WeldingTrolley_01_F";
					atlOffset=-0.0008392334;
					class CustomAttributes
					{
						class Attribute0
						{
							property="allowDamage";
							expression="_this allowdamage _value;";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=0;
								};
							};
						};
						nAttributes=1;
					};
				};
				class Item13
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={924.2934,54.432125,922.54797};
						angles[]={0,0,6.276526};
					};
					side="Empty";
					flags=4;
					class Attributes
					{
						disableSimulation=1;
					};
					id=97;
					type="Land_vn_canister_ep1";
					atlOffset=1.1444092e-005;
					class CustomAttributes
					{
						class Attribute0
						{
							property="allowDamage";
							expression="_this allowdamage _value;";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=0;
								};
							};
						};
						nAttributes=1;
					};
				};
				class Item14
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={923.96771,54.479862,932.96161};
						angles[]={6.2698488,0,6.2531939};
					};
					side="Empty";
					flags=4;
					class Attributes
					{
						createAsSimpleObject=1;
						disableSimulation=1;
					};
					id=98;
					type="Land_vn_steeldrum_closed_04";
					atlOffset=-1.5258789e-005;
					class CustomAttributes
					{
						class Attribute0
						{
							property="allowDamage";
							expression="_this allowdamage _value;";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=0;
								};
							};
						};
						nAttributes=1;
					};
				};
				class Item15
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={923.09174,54.512253,933.83954};
						angles[]={6.2765174,0,6.2531958};
					};
					side="Empty";
					flags=4;
					class Attributes
					{
						createAsSimpleObject=1;
						disableSimulation=1;
					};
					id=99;
					type="Land_vn_steeldrum_closed_04";
					atlOffset=-1.5258789e-005;
					class CustomAttributes
					{
						class Attribute0
						{
							property="allowDamage";
							expression="_this allowdamage _value;";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=0;
								};
							};
						};
						nAttributes=1;
					};
				};
				class Item16
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={923.88861,54.501232,934.17548};
						angles[]={6.2665229,0,6.2631893};
					};
					side="Empty";
					flags=4;
					class Attributes
					{
						createAsSimpleObject=1;
						disableSimulation=1;
					};
					id=100;
					type="Land_vn_steeldrum_closed_04";
					atlOffset=-1.1444092e-005;
					class CustomAttributes
					{
						class Attribute0
						{
							property="allowDamage";
							expression="_this allowdamage _value;";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=0;
								};
							};
						};
						nAttributes=1;
					};
				};
				class Item17
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={915.93158,56.046066,908.70477};
						angles[]={0.016662678,6.1005411,6.276526};
					};
					side="Empty";
					flags=4;
					class Attributes
					{
						disableSimulation=1;
					};
					id=101;
					type="vn_us_komex_medium_01";
					atlOffset=-0.00022125244;
					class CustomAttributes
					{
						class Attribute0
						{
							property="allowDamage";
							expression="_this allowdamage _value;";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=0;
								};
							};
						};
						nAttributes=1;
					};
				};
				class Item18
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={912.31,56.051918,908.31561};
						angles[]={0.0066592805,6.2683897,0};
					};
					side="Empty";
					flags=4;
					class Attributes
					{
						disableSimulation=1;
					};
					id=102;
					type="vn_us_komex_medium_02";
					atlOffset=-3.0517578e-005;
					class CustomAttributes
					{
						class Attribute0
						{
							property="allowDamage";
							expression="_this allowdamage _value;";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=0;
								};
							};
						};
						nAttributes=1;
					};
				};
			};
			id=83;
			atlOffset=-0.018978119;
		};
		class Item31
		{
			dataType="Marker";
			position[]={1302.6783,53.338055,557.93646};
			name="blocked_area1";
			text="Base Block 1";
			markerType="RECTANGLE";
			type="rectangle";
			a=400;
			b=700;
			angle=323.26862;
			id=103;
		};
		class Item32
		{
			dataType="Group";
			side="West";
			class Entities
			{
				items=1;
				class Item0
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={1261.3021,51.424999,527.10187};
						angles[]={0,1.5916864,0};
					};
					side="West";
					flags=7;
					class Attributes
					{
						init="this addEventHandler [ ""HandleDamage"", { " \n "  params [""_unit"", ""_hitSelection"", ""_damage"",""_source"",""_projectile"",""_hitPartIndex"", ""_instigator"", ""_hitPoint""]; " \n " " \n "  private _damageMultiplierHead = 0.4; " \n "  private _damageMultiplierBody = 0.3; " \n "  private _damageMultiplierLimbs = 0.25; " \n "  private _damageMultiplierOverall = 0.25; " \n "  private _limitHead = 1.0; " \n "  private _limitBody = 0.25; " \n "  private _limitLimbs = 0.1; " \n "  private _limitOverall = 0.25; " \n "  private _oldDamage = 0; " \n "  if (_hitSelection isEqualTo """") then {_oldDamage = damage _unit} else {_oldDamage = _unit getHit _hitSelection}; " \n "  private _newDamage = _damage - _oldDamage max 0; " \n "  private _incomingDamage = _newDamage; " \n "  private _playerHealth = damage _unit; " \n " " \n "  if (_newDamage > 0 && !(_projectile isEqualTo """")) then { " \n "    private _damageMultiplier = _damageMultiplierBody; " \n "    private _upperLimit = _limitBody; " \n "    switch (_hitSelection) do { " \n "      case ""face_hub""; " \n "      case ""head"": { " \n "        _damageMultiplier = _damageMultiplierHead; " \n "        _upperLimit = _limitHead; " \n "      }; " \n "      case ""arms""; " \n "      case ""hands""; " \n "      case ""legs"": { " \n "        _damageMultiplier = _damageMultiplierLimbs; " \n "        _upperLimit = _limitLimbs; " \n "      }; " \n "      case """": { " \n "        _damageMultiplier = _damageMultiplierOverall; " \n "        _upperLimit = _limitOverall; " \n "      }; " \n "      default { " \n "        _damageMultiplier = _damageMultiplierBody; " \n "        _upperLimit = _limitBody; " \n "      }; " \n "    }; " \n "    _newDamage = _newDamage * _damageMultiplier; " \n "    if (_newDamage > _upperLimit) then { " \n "      _newDamage = _upperLimit; " \n "    }; " \n " " \n "    _damage = _oldDamage + _newDamage; " \n "  }; " \n " " \n "  if ( isPlayer _unit ) then { " \n "    if ( lifeState _unit == ""INCAPACITATED"" ) then { " \n "      _damage = _oldDamage; " \n "    } else { " \n "      _this set[ 2, _damage ]; " \n "      _damage = _this call bis_fnc_reviveEhHandleDamage; " \n "    }; " \n "  }; " \n "  _damage " \n "}]";
						isPlayable=1;
						class Inventory
						{
							class primaryWeapon
							{
								name="vn_m1carbine";
								class primaryMuzzleMag
								{
									name="vn_carbine_15_mag";
									ammoLeft=15;
								};
							};
							class secondaryWeapon
							{
								name="vn_m127";
								class primaryMuzzleMag
								{
									name="vn_m127_mag";
									ammoLeft=1;
								};
							};
							class handgun
							{
								name="vn_mx991";
							};
							class binocular
							{
								name="vn_m19_binocs_grey";
							};
							class uniform
							{
								typeName="vn_b_uniform_macv_01_02";
								isBackpack=0;
								class MagazineCargo
								{
									items=1;
									class Item0
									{
										name="vn_prop_food_fresh_01";
										count=24;
										ammoLeft=100;
									};
								};
								class ItemCargo
								{
									items=1;
									class Item0
									{
										name="vn_b_item_firstaidkit";
										count=8;
									};
								};
							};
							class vest
							{
								typeName="vn_b_vest_usarmy_03";
								isBackpack=0;
								class MagazineCargo
								{
									items=1;
									class Item0
									{
										name="vn_m61_grenade_mag";
										count=9;
										ammoLeft=1;
									};
								};
							};
							class backpack
							{
								typeName="vn_b_pack_03";
								isBackpack=1;
								class MagazineCargo
								{
									items=6;
									class Item0
									{
										name="vn_m129_mag";
										count=5;
										ammoLeft=1;
									};
									class Item1
									{
										name="vn_carbine_15_t_mag";
										count=12;
										ammoLeft=15;
									};
									class Item2
									{
										name="vn_m34_grenade_mag";
										count=1;
										ammoLeft=1;
									};
									class Item3
									{
										name="vn_m18_purple_mag";
										count=2;
										ammoLeft=1;
									};
									class Item4
									{
										name="vn_m18_red_mag";
										count=2;
										ammoLeft=1;
									};
									class Item5
									{
										name="vn_mine_m112_remote_mag";
										count=5;
										ammoLeft=1;
									};
								};
								class ItemCargo
								{
									items=2;
									class Item0
									{
										name="vn_b_item_firstaidkit";
										count=2;
									};
									class Item1
									{
										name="vn_b_item_trapkit";
										count=1;
									};
								};
							};
							map="vn_b_item_map";
							compass="vn_b_item_compass";
							watch="vn_b_item_watch";
							radio="vn_b_item_radio_urc10";
							headgear="vn_b_boonie_02_02";
						};
					};
					id=106;
					type="vn_b_men_sf_06";
					atlOffset=7.6293945e-006;
					class CustomAttributes
					{
						class Attribute0
						{
							property="speaker";
							expression="_this setspeaker _value;";
							class Value
							{
								class data
								{
									singleType="STRING";
									value="Male02ENG";
								};
							};
						};
						class Attribute1
						{
							property="pitch";
							expression="_this setpitch _value;";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1.04;
								};
							};
						};
						class Attribute2
						{
							property="enableStamina";
							expression="_this enablestamina _value;";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=0;
								};
							};
						};
						nAttributes=3;
					};
				};
			};
			class Attributes
			{
				init="this addEventHandler [ ""HandleDamage"", { " \n "  params [""_unit"", ""_hitSelection"", ""_damage"",""_source"",""_projectile"",""_hitPartIndex"", ""_instigator"", ""_hitPoint""]; " \n " " \n "  private _damageMultiplierHead = 0.4; " \n "  private _damageMultiplierBody = 0.3; " \n "  private _damageMultiplierLimbs = 0.35; " \n "  private _damageMultiplierOverall = 0.3; " \n "  private _limitHead = 1.0; " \n "  private _limitBody = 0.25; " \n "  private _limitLimbs = 0.1; " \n "  private _limitOverall = 0.25; " \n "  private _oldDamage = 0; " \n "  if (_hitSelection isEqualTo """") then {_oldDamage = damage _unit} else {_oldDamage = _unit getHit _hitSelection}; " \n "  private _newDamage = _damage - _oldDamage max 0; " \n "  private _incomingDamage = _newDamage; " \n "  private _playerHealth = damage _unit; " \n " " \n "  if (_newDamage > 0 && !(_projectile isEqualTo """")) then { " \n "    private _damageMultiplier = _damageMultiplierBody; " \n "    private _upperLimit = _limitBody; " \n "    switch (_hitSelection) do { " \n "      case ""face_hub""; " \n "      case ""head"": { " \n "        _damageMultiplier = _damageMultiplierHead; " \n "        _upperLimit = _limitHead; " \n "      }; " \n "      case ""arms""; " \n "      case ""hands""; " \n "      case ""legs"": { " \n "        _damageMultiplier = _damageMultiplierLimbs; " \n "        _upperLimit = _limitLimbs; " \n "      }; " \n "      case """": { " \n "        _damageMultiplier = _damageMultiplierOverall; " \n "        _upperLimit = _limitOverall; " \n "      }; " \n "      default { " \n "        _damageMultiplier = _damageMultiplierBody; " \n "        _upperLimit = _limitBody; " \n "      }; " \n "    }; " \n "    _newDamage = _newDamage * _damageMultiplier; " \n "    if (_newDamage > _upperLimit) then { " \n "      _newDamage = _upperLimit; " \n "    }; " \n " " \n "    _damage = _oldDamage + _newDamage; " \n "  }; " \n " " \n "  if ( isPlayer _unit ) then { " \n "    if ( lifeState _unit == ""INCAPACITATED"" ) then { " \n "      _damage = _oldDamage; " \n "    } else { " \n "      _this set[ 2, _damage ]; " \n "      _damage = _this call bis_fnc_reviveEhHandleDamage; " \n "    }; " \n "  }; " \n "  _damage " \n "}]";
			};
			id=105;
			atlOffset=7.6293945e-006;
		};
		class Item33
		{
			dataType="Group";
			side="West";
			class Entities
			{
				items=1;
				class Item0
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={1261.2889,51.373234,528.29596};
						angles[]={0,1.5916879,0};
					};
					side="West";
					flags=7;
					class Attributes
					{
						init="this addEventHandler [ ""HandleDamage"", { " \n "  params [""_unit"", ""_hitSelection"", ""_damage"",""_source"",""_projectile"",""_hitPartIndex"", ""_instigator"", ""_hitPoint""]; " \n " " \n "  private _damageMultiplierHead = 0.4; " \n "  private _damageMultiplierBody = 0.3; " \n "  private _damageMultiplierLimbs = 0.25; " \n "  private _damageMultiplierOverall = 0.25; " \n "  private _limitHead = 1.0; " \n "  private _limitBody = 0.25; " \n "  private _limitLimbs = 0.1; " \n "  private _limitOverall = 0.25; " \n "  private _oldDamage = 0; " \n "  if (_hitSelection isEqualTo """") then {_oldDamage = damage _unit} else {_oldDamage = _unit getHit _hitSelection}; " \n "  private _newDamage = _damage - _oldDamage max 0; " \n "  private _incomingDamage = _newDamage; " \n "  private _playerHealth = damage _unit; " \n " " \n "  if (_newDamage > 0 && !(_projectile isEqualTo """")) then { " \n "    private _damageMultiplier = _damageMultiplierBody; " \n "    private _upperLimit = _limitBody; " \n "    switch (_hitSelection) do { " \n "      case ""face_hub""; " \n "      case ""head"": { " \n "        _damageMultiplier = _damageMultiplierHead; " \n "        _upperLimit = _limitHead; " \n "      }; " \n "      case ""arms""; " \n "      case ""hands""; " \n "      case ""legs"": { " \n "        _damageMultiplier = _damageMultiplierLimbs; " \n "        _upperLimit = _limitLimbs; " \n "      }; " \n "      case """": { " \n "        _damageMultiplier = _damageMultiplierOverall; " \n "        _upperLimit = _limitOverall; " \n "      }; " \n "      default { " \n "        _damageMultiplier = _damageMultiplierBody; " \n "        _upperLimit = _limitBody; " \n "      }; " \n "    }; " \n "    _newDamage = _newDamage * _damageMultiplier; " \n "    if (_newDamage > _upperLimit) then { " \n "      _newDamage = _upperLimit; " \n "    }; " \n " " \n "    _damage = _oldDamage + _newDamage; " \n "  }; " \n " " \n "  if ( isPlayer _unit ) then { " \n "    if ( lifeState _unit == ""INCAPACITATED"" ) then { " \n "      _damage = _oldDamage; " \n "    } else { " \n "      _this set[ 2, _damage ]; " \n "      _damage = _this call bis_fnc_reviveEhHandleDamage; " \n "    }; " \n "  }; " \n "  _damage " \n "}]";
						isPlayable=1;
						class Inventory
						{
							class primaryWeapon
							{
								name="vn_m1carbine";
								class primaryMuzzleMag
								{
									name="vn_carbine_15_mag";
									ammoLeft=15;
								};
							};
							class secondaryWeapon
							{
								name="vn_m127";
								class primaryMuzzleMag
								{
									name="vn_m127_mag";
									ammoLeft=1;
								};
							};
							class handgun
							{
								name="vn_mx991";
							};
							class binocular
							{
								name="vn_m19_binocs_grey";
							};
							class uniform
							{
								typeName="vn_b_uniform_macv_01_02";
								isBackpack=0;
								class MagazineCargo
								{
									items=1;
									class Item0
									{
										name="vn_prop_food_fresh_01";
										count=24;
										ammoLeft=100;
									};
								};
								class ItemCargo
								{
									items=1;
									class Item0
									{
										name="vn_b_item_firstaidkit";
										count=8;
									};
								};
							};
							class vest
							{
								typeName="vn_b_vest_usarmy_03";
								isBackpack=0;
								class MagazineCargo
								{
									items=1;
									class Item0
									{
										name="vn_m61_grenade_mag";
										count=9;
										ammoLeft=1;
									};
								};
							};
							class backpack
							{
								typeName="vn_b_pack_03";
								isBackpack=1;
								class MagazineCargo
								{
									items=6;
									class Item0
									{
										name="vn_m129_mag";
										count=5;
										ammoLeft=1;
									};
									class Item1
									{
										name="vn_carbine_15_t_mag";
										count=12;
										ammoLeft=15;
									};
									class Item2
									{
										name="vn_m34_grenade_mag";
										count=1;
										ammoLeft=1;
									};
									class Item3
									{
										name="vn_m18_purple_mag";
										count=2;
										ammoLeft=1;
									};
									class Item4
									{
										name="vn_m18_red_mag";
										count=2;
										ammoLeft=1;
									};
									class Item5
									{
										name="vn_mine_m112_remote_mag";
										count=5;
										ammoLeft=1;
									};
								};
								class ItemCargo
								{
									items=2;
									class Item0
									{
										name="vn_b_item_firstaidkit";
										count=2;
									};
									class Item1
									{
										name="vn_b_item_trapkit";
										count=1;
									};
								};
							};
							map="vn_b_item_map";
							compass="vn_b_item_compass";
							watch="vn_b_item_watch";
							radio="vn_b_item_radio_urc10";
							headgear="vn_b_boonie_02_02";
						};
					};
					id=108;
					type="vn_b_men_sf_06";
					class CustomAttributes
					{
						class Attribute0
						{
							property="speaker";
							expression="_this setspeaker _value;";
							class Value
							{
								class data
								{
									singleType="STRING";
									value="Male02ENG";
								};
							};
						};
						class Attribute1
						{
							property="pitch";
							expression="_this setpitch _value;";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1.04;
								};
							};
						};
						class Attribute2
						{
							property="enableStamina";
							expression="_this enablestamina _value;";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=0;
								};
							};
						};
						nAttributes=3;
					};
				};
			};
			class Attributes
			{
				init="this addEventHandler [ ""HandleDamage"", { " \n "  params [""_unit"", ""_hitSelection"", ""_damage"",""_source"",""_projectile"",""_hitPartIndex"", ""_instigator"", ""_hitPoint""]; " \n " " \n "  private _damageMultiplierHead = 0.4; " \n "  private _damageMultiplierBody = 0.3; " \n "  private _damageMultiplierLimbs = 0.35; " \n "  private _damageMultiplierOverall = 0.3; " \n "  private _limitHead = 1.0; " \n "  private _limitBody = 0.25; " \n "  private _limitLimbs = 0.1; " \n "  private _limitOverall = 0.25; " \n "  private _oldDamage = 0; " \n "  if (_hitSelection isEqualTo """") then {_oldDamage = damage _unit} else {_oldDamage = _unit getHit _hitSelection}; " \n "  private _newDamage = _damage - _oldDamage max 0; " \n "  private _incomingDamage = _newDamage; " \n "  private _playerHealth = damage _unit; " \n " " \n "  if (_newDamage > 0 && !(_projectile isEqualTo """")) then { " \n "    private _damageMultiplier = _damageMultiplierBody; " \n "    private _upperLimit = _limitBody; " \n "    switch (_hitSelection) do { " \n "      case ""face_hub""; " \n "      case ""head"": { " \n "        _damageMultiplier = _damageMultiplierHead; " \n "        _upperLimit = _limitHead; " \n "      }; " \n "      case ""arms""; " \n "      case ""hands""; " \n "      case ""legs"": { " \n "        _damageMultiplier = _damageMultiplierLimbs; " \n "        _upperLimit = _limitLimbs; " \n "      }; " \n "      case """": { " \n "        _damageMultiplier = _damageMultiplierOverall; " \n "        _upperLimit = _limitOverall; " \n "      }; " \n "      default { " \n "        _damageMultiplier = _damageMultiplierBody; " \n "        _upperLimit = _limitBody; " \n "      }; " \n "    }; " \n "    _newDamage = _newDamage * _damageMultiplier; " \n "    if (_newDamage > _upperLimit) then { " \n "      _newDamage = _upperLimit; " \n "    }; " \n " " \n "    _damage = _oldDamage + _newDamage; " \n "  }; " \n " " \n "  if ( isPlayer _unit ) then { " \n "    if ( lifeState _unit == ""INCAPACITATED"" ) then { " \n "      _damage = _oldDamage; " \n "    } else { " \n "      _this set[ 2, _damage ]; " \n "      _damage = _this call bis_fnc_reviveEhHandleDamage; " \n "    }; " \n "  }; " \n "  _damage " \n "}]";
			};
			id=107;
		};
		class Item34
		{
			dataType="Group";
			side="West";
			class Entities
			{
				items=1;
				class Item0
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={1261.516,51.332783,529.66681};
						angles[]={0,1.5916864,0};
					};
					side="West";
					flags=7;
					class Attributes
					{
						init="this addEventHandler [ ""HandleDamage"", { " \n "  params [""_unit"", ""_hitSelection"", ""_damage"",""_source"",""_projectile"",""_hitPartIndex"", ""_instigator"", ""_hitPoint""]; " \n " " \n "  private _damageMultiplierHead = 0.4; " \n "  private _damageMultiplierBody = 0.3; " \n "  private _damageMultiplierLimbs = 0.25; " \n "  private _damageMultiplierOverall = 0.25; " \n "  private _limitHead = 1.0; " \n "  private _limitBody = 0.25; " \n "  private _limitLimbs = 0.1; " \n "  private _limitOverall = 0.25; " \n "  private _oldDamage = 0; " \n "  if (_hitSelection isEqualTo """") then {_oldDamage = damage _unit} else {_oldDamage = _unit getHit _hitSelection}; " \n "  private _newDamage = _damage - _oldDamage max 0; " \n "  private _incomingDamage = _newDamage; " \n "  private _playerHealth = damage _unit; " \n " " \n "  if (_newDamage > 0 && !(_projectile isEqualTo """")) then { " \n "    private _damageMultiplier = _damageMultiplierBody; " \n "    private _upperLimit = _limitBody; " \n "    switch (_hitSelection) do { " \n "      case ""face_hub""; " \n "      case ""head"": { " \n "        _damageMultiplier = _damageMultiplierHead; " \n "        _upperLimit = _limitHead; " \n "      }; " \n "      case ""arms""; " \n "      case ""hands""; " \n "      case ""legs"": { " \n "        _damageMultiplier = _damageMultiplierLimbs; " \n "        _upperLimit = _limitLimbs; " \n "      }; " \n "      case """": { " \n "        _damageMultiplier = _damageMultiplierOverall; " \n "        _upperLimit = _limitOverall; " \n "      }; " \n "      default { " \n "        _damageMultiplier = _damageMultiplierBody; " \n "        _upperLimit = _limitBody; " \n "      }; " \n "    }; " \n "    _newDamage = _newDamage * _damageMultiplier; " \n "    if (_newDamage > _upperLimit) then { " \n "      _newDamage = _upperLimit; " \n "    }; " \n " " \n "    _damage = _oldDamage + _newDamage; " \n "  }; " \n " " \n "  if ( isPlayer _unit ) then { " \n "    if ( lifeState _unit == ""INCAPACITATED"" ) then { " \n "      _damage = _oldDamage; " \n "    } else { " \n "      _this set[ 2, _damage ]; " \n "      _damage = _this call bis_fnc_reviveEhHandleDamage; " \n "    }; " \n "  }; " \n "  _damage " \n "}]";
						isPlayable=1;
						class Inventory
						{
							class primaryWeapon
							{
								name="vn_m1carbine";
								class primaryMuzzleMag
								{
									name="vn_carbine_15_mag";
									ammoLeft=15;
								};
							};
							class secondaryWeapon
							{
								name="vn_m127";
								class primaryMuzzleMag
								{
									name="vn_m127_mag";
									ammoLeft=1;
								};
							};
							class handgun
							{
								name="vn_mx991";
							};
							class binocular
							{
								name="vn_m19_binocs_grey";
							};
							class uniform
							{
								typeName="vn_b_uniform_macv_01_02";
								isBackpack=0;
								class MagazineCargo
								{
									items=1;
									class Item0
									{
										name="vn_prop_food_fresh_01";
										count=24;
										ammoLeft=100;
									};
								};
								class ItemCargo
								{
									items=1;
									class Item0
									{
										name="vn_b_item_firstaidkit";
										count=8;
									};
								};
							};
							class vest
							{
								typeName="vn_b_vest_usarmy_03";
								isBackpack=0;
								class MagazineCargo
								{
									items=1;
									class Item0
									{
										name="vn_m61_grenade_mag";
										count=9;
										ammoLeft=1;
									};
								};
							};
							class backpack
							{
								typeName="vn_b_pack_03";
								isBackpack=1;
								class MagazineCargo
								{
									items=6;
									class Item0
									{
										name="vn_m129_mag";
										count=5;
										ammoLeft=1;
									};
									class Item1
									{
										name="vn_carbine_15_t_mag";
										count=12;
										ammoLeft=15;
									};
									class Item2
									{
										name="vn_m34_grenade_mag";
										count=1;
										ammoLeft=1;
									};
									class Item3
									{
										name="vn_m18_purple_mag";
										count=2;
										ammoLeft=1;
									};
									class Item4
									{
										name="vn_m18_red_mag";
										count=2;
										ammoLeft=1;
									};
									class Item5
									{
										name="vn_mine_m112_remote_mag";
										count=5;
										ammoLeft=1;
									};
								};
								class ItemCargo
								{
									items=2;
									class Item0
									{
										name="vn_b_item_firstaidkit";
										count=2;
									};
									class Item1
									{
										name="vn_b_item_trapkit";
										count=1;
									};
								};
							};
							map="vn_b_item_map";
							compass="vn_b_item_compass";
							watch="vn_b_item_watch";
							radio="vn_b_item_radio_urc10";
							headgear="vn_b_boonie_02_02";
						};
					};
					id=110;
					type="vn_b_men_sf_06";
					atlOffset=3.8146973e-006;
					class CustomAttributes
					{
						class Attribute0
						{
							property="speaker";
							expression="_this setspeaker _value;";
							class Value
							{
								class data
								{
									singleType="STRING";
									value="Male02ENG";
								};
							};
						};
						class Attribute1
						{
							property="pitch";
							expression="_this setpitch _value;";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1.04;
								};
							};
						};
						class Attribute2
						{
							property="enableStamina";
							expression="_this enablestamina _value;";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=0;
								};
							};
						};
						nAttributes=3;
					};
				};
			};
			class Attributes
			{
				init="this addEventHandler [ ""HandleDamage"", { " \n "  params [""_unit"", ""_hitSelection"", ""_damage"",""_source"",""_projectile"",""_hitPartIndex"", ""_instigator"", ""_hitPoint""]; " \n " " \n "  private _damageMultiplierHead = 0.4; " \n "  private _damageMultiplierBody = 0.3; " \n "  private _damageMultiplierLimbs = 0.35; " \n "  private _damageMultiplierOverall = 0.3; " \n "  private _limitHead = 1.0; " \n "  private _limitBody = 0.25; " \n "  private _limitLimbs = 0.1; " \n "  private _limitOverall = 0.25; " \n "  private _oldDamage = 0; " \n "  if (_hitSelection isEqualTo """") then {_oldDamage = damage _unit} else {_oldDamage = _unit getHit _hitSelection}; " \n "  private _newDamage = _damage - _oldDamage max 0; " \n "  private _incomingDamage = _newDamage; " \n "  private _playerHealth = damage _unit; " \n " " \n "  if (_newDamage > 0 && !(_projectile isEqualTo """")) then { " \n "    private _damageMultiplier = _damageMultiplierBody; " \n "    private _upperLimit = _limitBody; " \n "    switch (_hitSelection) do { " \n "      case ""face_hub""; " \n "      case ""head"": { " \n "        _damageMultiplier = _damageMultiplierHead; " \n "        _upperLimit = _limitHead; " \n "      }; " \n "      case ""arms""; " \n "      case ""hands""; " \n "      case ""legs"": { " \n "        _damageMultiplier = _damageMultiplierLimbs; " \n "        _upperLimit = _limitLimbs; " \n "      }; " \n "      case """": { " \n "        _damageMultiplier = _damageMultiplierOverall; " \n "        _upperLimit = _limitOverall; " \n "      }; " \n "      default { " \n "        _damageMultiplier = _damageMultiplierBody; " \n "        _upperLimit = _limitBody; " \n "      }; " \n "    }; " \n "    _newDamage = _newDamage * _damageMultiplier; " \n "    if (_newDamage > _upperLimit) then { " \n "      _newDamage = _upperLimit; " \n "    }; " \n " " \n "    _damage = _oldDamage + _newDamage; " \n "  }; " \n " " \n "  if ( isPlayer _unit ) then { " \n "    if ( lifeState _unit == ""INCAPACITATED"" ) then { " \n "      _damage = _oldDamage; " \n "    } else { " \n "      _this set[ 2, _damage ]; " \n "      _damage = _this call bis_fnc_reviveEhHandleDamage; " \n "    }; " \n "  }; " \n "  _damage " \n "}]";
			};
			id=109;
			atlOffset=3.8146973e-006;
		};
		class Item35
		{
			dataType="Group";
			side="West";
			class Entities
			{
				items=1;
				class Item0
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={1261.7074,51.29319,530.95978};
						angles[]={0,1.5916864,0};
					};
					side="West";
					flags=7;
					class Attributes
					{
						init="this addEventHandler [ ""HandleDamage"", { " \n "  params [""_unit"", ""_hitSelection"", ""_damage"",""_source"",""_projectile"",""_hitPartIndex"", ""_instigator"", ""_hitPoint""]; " \n " " \n "  private _damageMultiplierHead = 0.4; " \n "  private _damageMultiplierBody = 0.3; " \n "  private _damageMultiplierLimbs = 0.25; " \n "  private _damageMultiplierOverall = 0.25; " \n "  private _limitHead = 1.0; " \n "  private _limitBody = 0.25; " \n "  private _limitLimbs = 0.1; " \n "  private _limitOverall = 0.25; " \n "  private _oldDamage = 0; " \n "  if (_hitSelection isEqualTo """") then {_oldDamage = damage _unit} else {_oldDamage = _unit getHit _hitSelection}; " \n "  private _newDamage = _damage - _oldDamage max 0; " \n "  private _incomingDamage = _newDamage; " \n "  private _playerHealth = damage _unit; " \n " " \n "  if (_newDamage > 0 && !(_projectile isEqualTo """")) then { " \n "    private _damageMultiplier = _damageMultiplierBody; " \n "    private _upperLimit = _limitBody; " \n "    switch (_hitSelection) do { " \n "      case ""face_hub""; " \n "      case ""head"": { " \n "        _damageMultiplier = _damageMultiplierHead; " \n "        _upperLimit = _limitHead; " \n "      }; " \n "      case ""arms""; " \n "      case ""hands""; " \n "      case ""legs"": { " \n "        _damageMultiplier = _damageMultiplierLimbs; " \n "        _upperLimit = _limitLimbs; " \n "      }; " \n "      case """": { " \n "        _damageMultiplier = _damageMultiplierOverall; " \n "        _upperLimit = _limitOverall; " \n "      }; " \n "      default { " \n "        _damageMultiplier = _damageMultiplierBody; " \n "        _upperLimit = _limitBody; " \n "      }; " \n "    }; " \n "    _newDamage = _newDamage * _damageMultiplier; " \n "    if (_newDamage > _upperLimit) then { " \n "      _newDamage = _upperLimit; " \n "    }; " \n " " \n "    _damage = _oldDamage + _newDamage; " \n "  }; " \n " " \n "  if ( isPlayer _unit ) then { " \n "    if ( lifeState _unit == ""INCAPACITATED"" ) then { " \n "      _damage = _oldDamage; " \n "    } else { " \n "      _this set[ 2, _damage ]; " \n "      _damage = _this call bis_fnc_reviveEhHandleDamage; " \n "    }; " \n "  }; " \n "  _damage " \n "}]";
						isPlayable=1;
						class Inventory
						{
							class primaryWeapon
							{
								name="vn_m1carbine";
								class primaryMuzzleMag
								{
									name="vn_carbine_15_mag";
									ammoLeft=15;
								};
							};
							class secondaryWeapon
							{
								name="vn_m127";
								class primaryMuzzleMag
								{
									name="vn_m127_mag";
									ammoLeft=1;
								};
							};
							class handgun
							{
								name="vn_mx991";
							};
							class binocular
							{
								name="vn_m19_binocs_grey";
							};
							class uniform
							{
								typeName="vn_b_uniform_macv_01_02";
								isBackpack=0;
								class MagazineCargo
								{
									items=1;
									class Item0
									{
										name="vn_prop_food_fresh_01";
										count=24;
										ammoLeft=100;
									};
								};
								class ItemCargo
								{
									items=1;
									class Item0
									{
										name="vn_b_item_firstaidkit";
										count=8;
									};
								};
							};
							class vest
							{
								typeName="vn_b_vest_usarmy_03";
								isBackpack=0;
								class MagazineCargo
								{
									items=1;
									class Item0
									{
										name="vn_m61_grenade_mag";
										count=9;
										ammoLeft=1;
									};
								};
							};
							class backpack
							{
								typeName="vn_b_pack_03";
								isBackpack=1;
								class MagazineCargo
								{
									items=6;
									class Item0
									{
										name="vn_m129_mag";
										count=5;
										ammoLeft=1;
									};
									class Item1
									{
										name="vn_carbine_15_t_mag";
										count=12;
										ammoLeft=15;
									};
									class Item2
									{
										name="vn_m34_grenade_mag";
										count=1;
										ammoLeft=1;
									};
									class Item3
									{
										name="vn_m18_purple_mag";
										count=2;
										ammoLeft=1;
									};
									class Item4
									{
										name="vn_m18_red_mag";
										count=2;
										ammoLeft=1;
									};
									class Item5
									{
										name="vn_mine_m112_remote_mag";
										count=5;
										ammoLeft=1;
									};
								};
								class ItemCargo
								{
									items=2;
									class Item0
									{
										name="vn_b_item_firstaidkit";
										count=2;
									};
									class Item1
									{
										name="vn_b_item_trapkit";
										count=1;
									};
								};
							};
							map="vn_b_item_map";
							compass="vn_b_item_compass";
							watch="vn_b_item_watch";
							radio="vn_b_item_radio_urc10";
							headgear="vn_b_boonie_02_02";
						};
					};
					id=112;
					type="vn_b_men_sf_06";
					atlOffset=3.8146973e-006;
					class CustomAttributes
					{
						class Attribute0
						{
							property="speaker";
							expression="_this setspeaker _value;";
							class Value
							{
								class data
								{
									singleType="STRING";
									value="Male02ENG";
								};
							};
						};
						class Attribute1
						{
							property="pitch";
							expression="_this setpitch _value;";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1.04;
								};
							};
						};
						class Attribute2
						{
							property="enableStamina";
							expression="_this enablestamina _value;";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=0;
								};
							};
						};
						nAttributes=3;
					};
				};
			};
			class Attributes
			{
				init="this addEventHandler [ ""HandleDamage"", { " \n "  params [""_unit"", ""_hitSelection"", ""_damage"",""_source"",""_projectile"",""_hitPartIndex"", ""_instigator"", ""_hitPoint""]; " \n " " \n "  private _damageMultiplierHead = 0.4; " \n "  private _damageMultiplierBody = 0.3; " \n "  private _damageMultiplierLimbs = 0.35; " \n "  private _damageMultiplierOverall = 0.3; " \n "  private _limitHead = 1.0; " \n "  private _limitBody = 0.25; " \n "  private _limitLimbs = 0.1; " \n "  private _limitOverall = 0.25; " \n "  private _oldDamage = 0; " \n "  if (_hitSelection isEqualTo """") then {_oldDamage = damage _unit} else {_oldDamage = _unit getHit _hitSelection}; " \n "  private _newDamage = _damage - _oldDamage max 0; " \n "  private _incomingDamage = _newDamage; " \n "  private _playerHealth = damage _unit; " \n " " \n "  if (_newDamage > 0 && !(_projectile isEqualTo """")) then { " \n "    private _damageMultiplier = _damageMultiplierBody; " \n "    private _upperLimit = _limitBody; " \n "    switch (_hitSelection) do { " \n "      case ""face_hub""; " \n "      case ""head"": { " \n "        _damageMultiplier = _damageMultiplierHead; " \n "        _upperLimit = _limitHead; " \n "      }; " \n "      case ""arms""; " \n "      case ""hands""; " \n "      case ""legs"": { " \n "        _damageMultiplier = _damageMultiplierLimbs; " \n "        _upperLimit = _limitLimbs; " \n "      }; " \n "      case """": { " \n "        _damageMultiplier = _damageMultiplierOverall; " \n "        _upperLimit = _limitOverall; " \n "      }; " \n "      default { " \n "        _damageMultiplier = _damageMultiplierBody; " \n "        _upperLimit = _limitBody; " \n "      }; " \n "    }; " \n "    _newDamage = _newDamage * _damageMultiplier; " \n "    if (_newDamage > _upperLimit) then { " \n "      _newDamage = _upperLimit; " \n "    }; " \n " " \n "    _damage = _oldDamage + _newDamage; " \n "  }; " \n " " \n "  if ( isPlayer _unit ) then { " \n "    if ( lifeState _unit == ""INCAPACITATED"" ) then { " \n "      _damage = _oldDamage; " \n "    } else { " \n "      _this set[ 2, _damage ]; " \n "      _damage = _this call bis_fnc_reviveEhHandleDamage; " \n "    }; " \n "  }; " \n "  _damage " \n "}]";
			};
			id=111;
			atlOffset=3.8146973e-006;
		};
		class Item36
		{
			dataType="Group";
			side="West";
			class Entities
			{
				items=1;
				class Item0
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={1261.6781,51.257854,532.04572};
						angles[]={0,1.5916864,0};
					};
					side="West";
					flags=7;
					class Attributes
					{
						init="this addEventHandler [ ""HandleDamage"", { " \n "  params [""_unit"", ""_hitSelection"", ""_damage"",""_source"",""_projectile"",""_hitPartIndex"", ""_instigator"", ""_hitPoint""]; " \n " " \n "  private _damageMultiplierHead = 0.4; " \n "  private _damageMultiplierBody = 0.3; " \n "  private _damageMultiplierLimbs = 0.25; " \n "  private _damageMultiplierOverall = 0.25; " \n "  private _limitHead = 1.0; " \n "  private _limitBody = 0.25; " \n "  private _limitLimbs = 0.1; " \n "  private _limitOverall = 0.25; " \n "  private _oldDamage = 0; " \n "  if (_hitSelection isEqualTo """") then {_oldDamage = damage _unit} else {_oldDamage = _unit getHit _hitSelection}; " \n "  private _newDamage = _damage - _oldDamage max 0; " \n "  private _incomingDamage = _newDamage; " \n "  private _playerHealth = damage _unit; " \n " " \n "  if (_newDamage > 0 && !(_projectile isEqualTo """")) then { " \n "    private _damageMultiplier = _damageMultiplierBody; " \n "    private _upperLimit = _limitBody; " \n "    switch (_hitSelection) do { " \n "      case ""face_hub""; " \n "      case ""head"": { " \n "        _damageMultiplier = _damageMultiplierHead; " \n "        _upperLimit = _limitHead; " \n "      }; " \n "      case ""arms""; " \n "      case ""hands""; " \n "      case ""legs"": { " \n "        _damageMultiplier = _damageMultiplierLimbs; " \n "        _upperLimit = _limitLimbs; " \n "      }; " \n "      case """": { " \n "        _damageMultiplier = _damageMultiplierOverall; " \n "        _upperLimit = _limitOverall; " \n "      }; " \n "      default { " \n "        _damageMultiplier = _damageMultiplierBody; " \n "        _upperLimit = _limitBody; " \n "      }; " \n "    }; " \n "    _newDamage = _newDamage * _damageMultiplier; " \n "    if (_newDamage > _upperLimit) then { " \n "      _newDamage = _upperLimit; " \n "    }; " \n " " \n "    _damage = _oldDamage + _newDamage; " \n "  }; " \n " " \n "  if ( isPlayer _unit ) then { " \n "    if ( lifeState _unit == ""INCAPACITATED"" ) then { " \n "      _damage = _oldDamage; " \n "    } else { " \n "      _this set[ 2, _damage ]; " \n "      _damage = _this call bis_fnc_reviveEhHandleDamage; " \n "    }; " \n "  }; " \n "  _damage " \n "}]";
						isPlayable=1;
						class Inventory
						{
							class primaryWeapon
							{
								name="vn_m1carbine";
								class primaryMuzzleMag
								{
									name="vn_carbine_15_mag";
									ammoLeft=15;
								};
							};
							class secondaryWeapon
							{
								name="vn_m127";
								class primaryMuzzleMag
								{
									name="vn_m127_mag";
									ammoLeft=1;
								};
							};
							class handgun
							{
								name="vn_mx991";
							};
							class binocular
							{
								name="vn_m19_binocs_grey";
							};
							class uniform
							{
								typeName="vn_b_uniform_macv_01_02";
								isBackpack=0;
								class MagazineCargo
								{
									items=1;
									class Item0
									{
										name="vn_prop_food_fresh_01";
										count=24;
										ammoLeft=100;
									};
								};
								class ItemCargo
								{
									items=1;
									class Item0
									{
										name="vn_b_item_firstaidkit";
										count=8;
									};
								};
							};
							class vest
							{
								typeName="vn_b_vest_usarmy_03";
								isBackpack=0;
								class MagazineCargo
								{
									items=1;
									class Item0
									{
										name="vn_m61_grenade_mag";
										count=9;
										ammoLeft=1;
									};
								};
							};
							class backpack
							{
								typeName="vn_b_pack_03";
								isBackpack=1;
								class MagazineCargo
								{
									items=6;
									class Item0
									{
										name="vn_m129_mag";
										count=5;
										ammoLeft=1;
									};
									class Item1
									{
										name="vn_carbine_15_t_mag";
										count=12;
										ammoLeft=15;
									};
									class Item2
									{
										name="vn_m34_grenade_mag";
										count=1;
										ammoLeft=1;
									};
									class Item3
									{
										name="vn_m18_purple_mag";
										count=2;
										ammoLeft=1;
									};
									class Item4
									{
										name="vn_m18_red_mag";
										count=2;
										ammoLeft=1;
									};
									class Item5
									{
										name="vn_mine_m112_remote_mag";
										count=5;
										ammoLeft=1;
									};
								};
								class ItemCargo
								{
									items=2;
									class Item0
									{
										name="vn_b_item_firstaidkit";
										count=2;
									};
									class Item1
									{
										name="vn_b_item_trapkit";
										count=1;
									};
								};
							};
							map="vn_b_item_map";
							compass="vn_b_item_compass";
							watch="vn_b_item_watch";
							radio="vn_b_item_radio_urc10";
							headgear="vn_b_boonie_02_02";
						};
					};
					id=114;
					type="vn_b_men_sf_06";
					atlOffset=7.6293945e-006;
					class CustomAttributes
					{
						class Attribute0
						{
							property="speaker";
							expression="_this setspeaker _value;";
							class Value
							{
								class data
								{
									singleType="STRING";
									value="Male02ENG";
								};
							};
						};
						class Attribute1
						{
							property="pitch";
							expression="_this setpitch _value;";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1.04;
								};
							};
						};
						class Attribute2
						{
							property="enableStamina";
							expression="_this enablestamina _value;";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=0;
								};
							};
						};
						nAttributes=3;
					};
				};
			};
			class Attributes
			{
				init="this addEventHandler [ ""HandleDamage"", { " \n "  params [""_unit"", ""_hitSelection"", ""_damage"",""_source"",""_projectile"",""_hitPartIndex"", ""_instigator"", ""_hitPoint""]; " \n " " \n "  private _damageMultiplierHead = 0.4; " \n "  private _damageMultiplierBody = 0.3; " \n "  private _damageMultiplierLimbs = 0.35; " \n "  private _damageMultiplierOverall = 0.3; " \n "  private _limitHead = 1.0; " \n "  private _limitBody = 0.25; " \n "  private _limitLimbs = 0.1; " \n "  private _limitOverall = 0.25; " \n "  private _oldDamage = 0; " \n "  if (_hitSelection isEqualTo """") then {_oldDamage = damage _unit} else {_oldDamage = _unit getHit _hitSelection}; " \n "  private _newDamage = _damage - _oldDamage max 0; " \n "  private _incomingDamage = _newDamage; " \n "  private _playerHealth = damage _unit; " \n " " \n "  if (_newDamage > 0 && !(_projectile isEqualTo """")) then { " \n "    private _damageMultiplier = _damageMultiplierBody; " \n "    private _upperLimit = _limitBody; " \n "    switch (_hitSelection) do { " \n "      case ""face_hub""; " \n "      case ""head"": { " \n "        _damageMultiplier = _damageMultiplierHead; " \n "        _upperLimit = _limitHead; " \n "      }; " \n "      case ""arms""; " \n "      case ""hands""; " \n "      case ""legs"": { " \n "        _damageMultiplier = _damageMultiplierLimbs; " \n "        _upperLimit = _limitLimbs; " \n "      }; " \n "      case """": { " \n "        _damageMultiplier = _damageMultiplierOverall; " \n "        _upperLimit = _limitOverall; " \n "      }; " \n "      default { " \n "        _damageMultiplier = _damageMultiplierBody; " \n "        _upperLimit = _limitBody; " \n "      }; " \n "    }; " \n "    _newDamage = _newDamage * _damageMultiplier; " \n "    if (_newDamage > _upperLimit) then { " \n "      _newDamage = _upperLimit; " \n "    }; " \n " " \n "    _damage = _oldDamage + _newDamage; " \n "  }; " \n " " \n "  if ( isPlayer _unit ) then { " \n "    if ( lifeState _unit == ""INCAPACITATED"" ) then { " \n "      _damage = _oldDamage; " \n "    } else { " \n "      _this set[ 2, _damage ]; " \n "      _damage = _this call bis_fnc_reviveEhHandleDamage; " \n "    }; " \n "  }; " \n "  _damage " \n "}]";
			};
			id=113;
			atlOffset=7.6293945e-006;
		};
		class Item37
		{
			dataType="Group";
			side="West";
			class Entities
			{
				items=1;
				class Item0
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={1261.8793,51.225792,533.40216};
						angles[]={0,1.5916864,0};
					};
					side="West";
					flags=7;
					class Attributes
					{
						init="this addEventHandler [ ""HandleDamage"", { " \n "  params [""_unit"", ""_hitSelection"", ""_damage"",""_source"",""_projectile"",""_hitPartIndex"", ""_instigator"", ""_hitPoint""]; " \n " " \n "  private _damageMultiplierHead = 0.4; " \n "  private _damageMultiplierBody = 0.3; " \n "  private _damageMultiplierLimbs = 0.25; " \n "  private _damageMultiplierOverall = 0.25; " \n "  private _limitHead = 1.0; " \n "  private _limitBody = 0.25; " \n "  private _limitLimbs = 0.1; " \n "  private _limitOverall = 0.25; " \n "  private _oldDamage = 0; " \n "  if (_hitSelection isEqualTo """") then {_oldDamage = damage _unit} else {_oldDamage = _unit getHit _hitSelection}; " \n "  private _newDamage = _damage - _oldDamage max 0; " \n "  private _incomingDamage = _newDamage; " \n "  private _playerHealth = damage _unit; " \n " " \n "  if (_newDamage > 0 && !(_projectile isEqualTo """")) then { " \n "    private _damageMultiplier = _damageMultiplierBody; " \n "    private _upperLimit = _limitBody; " \n "    switch (_hitSelection) do { " \n "      case ""face_hub""; " \n "      case ""head"": { " \n "        _damageMultiplier = _damageMultiplierHead; " \n "        _upperLimit = _limitHead; " \n "      }; " \n "      case ""arms""; " \n "      case ""hands""; " \n "      case ""legs"": { " \n "        _damageMultiplier = _damageMultiplierLimbs; " \n "        _upperLimit = _limitLimbs; " \n "      }; " \n "      case """": { " \n "        _damageMultiplier = _damageMultiplierOverall; " \n "        _upperLimit = _limitOverall; " \n "      }; " \n "      default { " \n "        _damageMultiplier = _damageMultiplierBody; " \n "        _upperLimit = _limitBody; " \n "      }; " \n "    }; " \n "    _newDamage = _newDamage * _damageMultiplier; " \n "    if (_newDamage > _upperLimit) then { " \n "      _newDamage = _upperLimit; " \n "    }; " \n " " \n "    _damage = _oldDamage + _newDamage; " \n "  }; " \n " " \n "  if ( isPlayer _unit ) then { " \n "    if ( lifeState _unit == ""INCAPACITATED"" ) then { " \n "      _damage = _oldDamage; " \n "    } else { " \n "      _this set[ 2, _damage ]; " \n "      _damage = _this call bis_fnc_reviveEhHandleDamage; " \n "    }; " \n "  }; " \n "  _damage " \n "}]";
						isPlayable=1;
						class Inventory
						{
							class primaryWeapon
							{
								name="vn_m1carbine";
								class primaryMuzzleMag
								{
									name="vn_carbine_15_mag";
									ammoLeft=15;
								};
							};
							class secondaryWeapon
							{
								name="vn_m127";
								class primaryMuzzleMag
								{
									name="vn_m127_mag";
									ammoLeft=1;
								};
							};
							class handgun
							{
								name="vn_mx991";
							};
							class binocular
							{
								name="vn_m19_binocs_grey";
							};
							class uniform
							{
								typeName="vn_b_uniform_macv_01_02";
								isBackpack=0;
								class MagazineCargo
								{
									items=1;
									class Item0
									{
										name="vn_prop_food_fresh_01";
										count=24;
										ammoLeft=100;
									};
								};
								class ItemCargo
								{
									items=1;
									class Item0
									{
										name="vn_b_item_firstaidkit";
										count=8;
									};
								};
							};
							class vest
							{
								typeName="vn_b_vest_usarmy_03";
								isBackpack=0;
								class MagazineCargo
								{
									items=1;
									class Item0
									{
										name="vn_m61_grenade_mag";
										count=9;
										ammoLeft=1;
									};
								};
							};
							class backpack
							{
								typeName="vn_b_pack_03";
								isBackpack=1;
								class MagazineCargo
								{
									items=6;
									class Item0
									{
										name="vn_m129_mag";
										count=5;
										ammoLeft=1;
									};
									class Item1
									{
										name="vn_carbine_15_t_mag";
										count=12;
										ammoLeft=15;
									};
									class Item2
									{
										name="vn_m34_grenade_mag";
										count=1;
										ammoLeft=1;
									};
									class Item3
									{
										name="vn_m18_purple_mag";
										count=2;
										ammoLeft=1;
									};
									class Item4
									{
										name="vn_m18_red_mag";
										count=2;
										ammoLeft=1;
									};
									class Item5
									{
										name="vn_mine_m112_remote_mag";
										count=5;
										ammoLeft=1;
									};
								};
								class ItemCargo
								{
									items=2;
									class Item0
									{
										name="vn_b_item_firstaidkit";
										count=2;
									};
									class Item1
									{
										name="vn_b_item_trapkit";
										count=1;
									};
								};
							};
							map="vn_b_item_map";
							compass="vn_b_item_compass";
							watch="vn_b_item_watch";
							radio="vn_b_item_radio_urc10";
							headgear="vn_b_boonie_02_02";
						};
					};
					id=116;
					type="vn_b_men_sf_06";
					class CustomAttributes
					{
						class Attribute0
						{
							property="speaker";
							expression="_this setspeaker _value;";
							class Value
							{
								class data
								{
									singleType="STRING";
									value="Male02ENG";
								};
							};
						};
						class Attribute1
						{
							property="pitch";
							expression="_this setpitch _value;";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1.04;
								};
							};
						};
						class Attribute2
						{
							property="enableStamina";
							expression="_this enablestamina _value;";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=0;
								};
							};
						};
						nAttributes=3;
					};
				};
			};
			class Attributes
			{
				init="this addEventHandler [ ""HandleDamage"", { " \n "  params [""_unit"", ""_hitSelection"", ""_damage"",""_source"",""_projectile"",""_hitPartIndex"", ""_instigator"", ""_hitPoint""]; " \n " " \n "  private _damageMultiplierHead = 0.4; " \n "  private _damageMultiplierBody = 0.3; " \n "  private _damageMultiplierLimbs = 0.35; " \n "  private _damageMultiplierOverall = 0.3; " \n "  private _limitHead = 1.0; " \n "  private _limitBody = 0.25; " \n "  private _limitLimbs = 0.1; " \n "  private _limitOverall = 0.25; " \n "  private _oldDamage = 0; " \n "  if (_hitSelection isEqualTo """") then {_oldDamage = damage _unit} else {_oldDamage = _unit getHit _hitSelection}; " \n "  private _newDamage = _damage - _oldDamage max 0; " \n "  private _incomingDamage = _newDamage; " \n "  private _playerHealth = damage _unit; " \n " " \n "  if (_newDamage > 0 && !(_projectile isEqualTo """")) then { " \n "    private _damageMultiplier = _damageMultiplierBody; " \n "    private _upperLimit = _limitBody; " \n "    switch (_hitSelection) do { " \n "      case ""face_hub""; " \n "      case ""head"": { " \n "        _damageMultiplier = _damageMultiplierHead; " \n "        _upperLimit = _limitHead; " \n "      }; " \n "      case ""arms""; " \n "      case ""hands""; " \n "      case ""legs"": { " \n "        _damageMultiplier = _damageMultiplierLimbs; " \n "        _upperLimit = _limitLimbs; " \n "      }; " \n "      case """": { " \n "        _damageMultiplier = _damageMultiplierOverall; " \n "        _upperLimit = _limitOverall; " \n "      }; " \n "      default { " \n "        _damageMultiplier = _damageMultiplierBody; " \n "        _upperLimit = _limitBody; " \n "      }; " \n "    }; " \n "    _newDamage = _newDamage * _damageMultiplier; " \n "    if (_newDamage > _upperLimit) then { " \n "      _newDamage = _upperLimit; " \n "    }; " \n " " \n "    _damage = _oldDamage + _newDamage; " \n "  }; " \n " " \n "  if ( isPlayer _unit ) then { " \n "    if ( lifeState _unit == ""INCAPACITATED"" ) then { " \n "      _damage = _oldDamage; " \n "    } else { " \n "      _this set[ 2, _damage ]; " \n "      _damage = _this call bis_fnc_reviveEhHandleDamage; " \n "    }; " \n "  }; " \n "  _damage " \n "}]";
			};
			id=115;
		};
		class Item38
		{
			dataType="Group";
			side="West";
			class Entities
			{
				items=1;
				class Item0
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={1261.9457,51.190163,534.82208};
						angles[]={0,1.5916864,0};
					};
					side="West";
					flags=7;
					class Attributes
					{
						init="this addEventHandler [ ""HandleDamage"", { " \n "  params [""_unit"", ""_hitSelection"", ""_damage"",""_source"",""_projectile"",""_hitPartIndex"", ""_instigator"", ""_hitPoint""]; " \n " " \n "  private _damageMultiplierHead = 0.4; " \n "  private _damageMultiplierBody = 0.3; " \n "  private _damageMultiplierLimbs = 0.25; " \n "  private _damageMultiplierOverall = 0.25; " \n "  private _limitHead = 1.0; " \n "  private _limitBody = 0.25; " \n "  private _limitLimbs = 0.1; " \n "  private _limitOverall = 0.25; " \n "  private _oldDamage = 0; " \n "  if (_hitSelection isEqualTo """") then {_oldDamage = damage _unit} else {_oldDamage = _unit getHit _hitSelection}; " \n "  private _newDamage = _damage - _oldDamage max 0; " \n "  private _incomingDamage = _newDamage; " \n "  private _playerHealth = damage _unit; " \n " " \n "  if (_newDamage > 0 && !(_projectile isEqualTo """")) then { " \n "    private _damageMultiplier = _damageMultiplierBody; " \n "    private _upperLimit = _limitBody; " \n "    switch (_hitSelection) do { " \n "      case ""face_hub""; " \n "      case ""head"": { " \n "        _damageMultiplier = _damageMultiplierHead; " \n "        _upperLimit = _limitHead; " \n "      }; " \n "      case ""arms""; " \n "      case ""hands""; " \n "      case ""legs"": { " \n "        _damageMultiplier = _damageMultiplierLimbs; " \n "        _upperLimit = _limitLimbs; " \n "      }; " \n "      case """": { " \n "        _damageMultiplier = _damageMultiplierOverall; " \n "        _upperLimit = _limitOverall; " \n "      }; " \n "      default { " \n "        _damageMultiplier = _damageMultiplierBody; " \n "        _upperLimit = _limitBody; " \n "      }; " \n "    }; " \n "    _newDamage = _newDamage * _damageMultiplier; " \n "    if (_newDamage > _upperLimit) then { " \n "      _newDamage = _upperLimit; " \n "    }; " \n " " \n "    _damage = _oldDamage + _newDamage; " \n "  }; " \n " " \n "  if ( isPlayer _unit ) then { " \n "    if ( lifeState _unit == ""INCAPACITATED"" ) then { " \n "      _damage = _oldDamage; " \n "    } else { " \n "      _this set[ 2, _damage ]; " \n "      _damage = _this call bis_fnc_reviveEhHandleDamage; " \n "    }; " \n "  }; " \n "  _damage " \n "}]";
						isPlayable=1;
						class Inventory
						{
							class primaryWeapon
							{
								name="vn_m1carbine";
								class primaryMuzzleMag
								{
									name="vn_carbine_15_mag";
									ammoLeft=15;
								};
							};
							class secondaryWeapon
							{
								name="vn_m127";
								class primaryMuzzleMag
								{
									name="vn_m127_mag";
									ammoLeft=1;
								};
							};
							class handgun
							{
								name="vn_mx991";
							};
							class binocular
							{
								name="vn_m19_binocs_grey";
							};
							class uniform
							{
								typeName="vn_b_uniform_macv_01_02";
								isBackpack=0;
								class MagazineCargo
								{
									items=1;
									class Item0
									{
										name="vn_prop_food_fresh_01";
										count=24;
										ammoLeft=100;
									};
								};
								class ItemCargo
								{
									items=1;
									class Item0
									{
										name="vn_b_item_firstaidkit";
										count=8;
									};
								};
							};
							class vest
							{
								typeName="vn_b_vest_usarmy_03";
								isBackpack=0;
								class MagazineCargo
								{
									items=1;
									class Item0
									{
										name="vn_m61_grenade_mag";
										count=9;
										ammoLeft=1;
									};
								};
							};
							class backpack
							{
								typeName="vn_b_pack_03";
								isBackpack=1;
								class MagazineCargo
								{
									items=6;
									class Item0
									{
										name="vn_m129_mag";
										count=5;
										ammoLeft=1;
									};
									class Item1
									{
										name="vn_carbine_15_t_mag";
										count=12;
										ammoLeft=15;
									};
									class Item2
									{
										name="vn_m34_grenade_mag";
										count=1;
										ammoLeft=1;
									};
									class Item3
									{
										name="vn_m18_purple_mag";
										count=2;
										ammoLeft=1;
									};
									class Item4
									{
										name="vn_m18_red_mag";
										count=2;
										ammoLeft=1;
									};
									class Item5
									{
										name="vn_mine_m112_remote_mag";
										count=5;
										ammoLeft=1;
									};
								};
								class ItemCargo
								{
									items=2;
									class Item0
									{
										name="vn_b_item_firstaidkit";
										count=2;
									};
									class Item1
									{
										name="vn_b_item_trapkit";
										count=1;
									};
								};
							};
							map="vn_b_item_map";
							compass="vn_b_item_compass";
							watch="vn_b_item_watch";
							radio="vn_b_item_radio_urc10";
							headgear="vn_b_boonie_02_02";
						};
					};
					id=118;
					type="vn_b_men_sf_06";
					class CustomAttributes
					{
						class Attribute0
						{
							property="speaker";
							expression="_this setspeaker _value;";
							class Value
							{
								class data
								{
									singleType="STRING";
									value="Male02ENG";
								};
							};
						};
						class Attribute1
						{
							property="pitch";
							expression="_this setpitch _value;";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1.04;
								};
							};
						};
						class Attribute2
						{
							property="enableStamina";
							expression="_this enablestamina _value;";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=0;
								};
							};
						};
						nAttributes=3;
					};
				};
			};
			class Attributes
			{
				init="this addEventHandler [ ""HandleDamage"", { " \n "  params [""_unit"", ""_hitSelection"", ""_damage"",""_source"",""_projectile"",""_hitPartIndex"", ""_instigator"", ""_hitPoint""]; " \n " " \n "  private _damageMultiplierHead = 0.4; " \n "  private _damageMultiplierBody = 0.3; " \n "  private _damageMultiplierLimbs = 0.35; " \n "  private _damageMultiplierOverall = 0.3; " \n "  private _limitHead = 1.0; " \n "  private _limitBody = 0.25; " \n "  private _limitLimbs = 0.1; " \n "  private _limitOverall = 0.25; " \n "  private _oldDamage = 0; " \n "  if (_hitSelection isEqualTo """") then {_oldDamage = damage _unit} else {_oldDamage = _unit getHit _hitSelection}; " \n "  private _newDamage = _damage - _oldDamage max 0; " \n "  private _incomingDamage = _newDamage; " \n "  private _playerHealth = damage _unit; " \n " " \n "  if (_newDamage > 0 && !(_projectile isEqualTo """")) then { " \n "    private _damageMultiplier = _damageMultiplierBody; " \n "    private _upperLimit = _limitBody; " \n "    switch (_hitSelection) do { " \n "      case ""face_hub""; " \n "      case ""head"": { " \n "        _damageMultiplier = _damageMultiplierHead; " \n "        _upperLimit = _limitHead; " \n "      }; " \n "      case ""arms""; " \n "      case ""hands""; " \n "      case ""legs"": { " \n "        _damageMultiplier = _damageMultiplierLimbs; " \n "        _upperLimit = _limitLimbs; " \n "      }; " \n "      case """": { " \n "        _damageMultiplier = _damageMultiplierOverall; " \n "        _upperLimit = _limitOverall; " \n "      }; " \n "      default { " \n "        _damageMultiplier = _damageMultiplierBody; " \n "        _upperLimit = _limitBody; " \n "      }; " \n "    }; " \n "    _newDamage = _newDamage * _damageMultiplier; " \n "    if (_newDamage > _upperLimit) then { " \n "      _newDamage = _upperLimit; " \n "    }; " \n " " \n "    _damage = _oldDamage + _newDamage; " \n "  }; " \n " " \n "  if ( isPlayer _unit ) then { " \n "    if ( lifeState _unit == ""INCAPACITATED"" ) then { " \n "      _damage = _oldDamage; " \n "    } else { " \n "      _this set[ 2, _damage ]; " \n "      _damage = _this call bis_fnc_reviveEhHandleDamage; " \n "    }; " \n "  }; " \n "  _damage " \n "}]";
			};
			id=117;
		};
		class Item39
		{
			dataType="Group";
			side="West";
			class Entities
			{
				items=1;
				class Item0
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={1262.0121,51.161018,536.242};
						angles[]={0,1.5916864,0};
					};
					side="West";
					flags=7;
					class Attributes
					{
						init="this addEventHandler [ ""HandleDamage"", { " \n "  params [""_unit"", ""_hitSelection"", ""_damage"",""_source"",""_projectile"",""_hitPartIndex"", ""_instigator"", ""_hitPoint""]; " \n " " \n "  private _damageMultiplierHead = 0.4; " \n "  private _damageMultiplierBody = 0.3; " \n "  private _damageMultiplierLimbs = 0.25; " \n "  private _damageMultiplierOverall = 0.25; " \n "  private _limitHead = 1.0; " \n "  private _limitBody = 0.25; " \n "  private _limitLimbs = 0.1; " \n "  private _limitOverall = 0.25; " \n "  private _oldDamage = 0; " \n "  if (_hitSelection isEqualTo """") then {_oldDamage = damage _unit} else {_oldDamage = _unit getHit _hitSelection}; " \n "  private _newDamage = _damage - _oldDamage max 0; " \n "  private _incomingDamage = _newDamage; " \n "  private _playerHealth = damage _unit; " \n " " \n "  if (_newDamage > 0 && !(_projectile isEqualTo """")) then { " \n "    private _damageMultiplier = _damageMultiplierBody; " \n "    private _upperLimit = _limitBody; " \n "    switch (_hitSelection) do { " \n "      case ""face_hub""; " \n "      case ""head"": { " \n "        _damageMultiplier = _damageMultiplierHead; " \n "        _upperLimit = _limitHead; " \n "      }; " \n "      case ""arms""; " \n "      case ""hands""; " \n "      case ""legs"": { " \n "        _damageMultiplier = _damageMultiplierLimbs; " \n "        _upperLimit = _limitLimbs; " \n "      }; " \n "      case """": { " \n "        _damageMultiplier = _damageMultiplierOverall; " \n "        _upperLimit = _limitOverall; " \n "      }; " \n "      default { " \n "        _damageMultiplier = _damageMultiplierBody; " \n "        _upperLimit = _limitBody; " \n "      }; " \n "    }; " \n "    _newDamage = _newDamage * _damageMultiplier; " \n "    if (_newDamage > _upperLimit) then { " \n "      _newDamage = _upperLimit; " \n "    }; " \n " " \n "    _damage = _oldDamage + _newDamage; " \n "  }; " \n " " \n "  if ( isPlayer _unit ) then { " \n "    if ( lifeState _unit == ""INCAPACITATED"" ) then { " \n "      _damage = _oldDamage; " \n "    } else { " \n "      _this set[ 2, _damage ]; " \n "      _damage = _this call bis_fnc_reviveEhHandleDamage; " \n "    }; " \n "  }; " \n "  _damage " \n "}]";
						isPlayable=1;
						class Inventory
						{
							class primaryWeapon
							{
								name="vn_m1carbine";
								class primaryMuzzleMag
								{
									name="vn_carbine_15_mag";
									ammoLeft=15;
								};
							};
							class secondaryWeapon
							{
								name="vn_m127";
								class primaryMuzzleMag
								{
									name="vn_m127_mag";
									ammoLeft=1;
								};
							};
							class handgun
							{
								name="vn_mx991";
							};
							class binocular
							{
								name="vn_m19_binocs_grey";
							};
							class uniform
							{
								typeName="vn_b_uniform_macv_01_02";
								isBackpack=0;
								class MagazineCargo
								{
									items=1;
									class Item0
									{
										name="vn_prop_food_fresh_01";
										count=24;
										ammoLeft=100;
									};
								};
								class ItemCargo
								{
									items=1;
									class Item0
									{
										name="vn_b_item_firstaidkit";
										count=8;
									};
								};
							};
							class vest
							{
								typeName="vn_b_vest_usarmy_03";
								isBackpack=0;
								class MagazineCargo
								{
									items=1;
									class Item0
									{
										name="vn_m61_grenade_mag";
										count=9;
										ammoLeft=1;
									};
								};
							};
							class backpack
							{
								typeName="vn_b_pack_03";
								isBackpack=1;
								class MagazineCargo
								{
									items=6;
									class Item0
									{
										name="vn_m129_mag";
										count=5;
										ammoLeft=1;
									};
									class Item1
									{
										name="vn_carbine_15_t_mag";
										count=12;
										ammoLeft=15;
									};
									class Item2
									{
										name="vn_m34_grenade_mag";
										count=1;
										ammoLeft=1;
									};
									class Item3
									{
										name="vn_m18_purple_mag";
										count=2;
										ammoLeft=1;
									};
									class Item4
									{
										name="vn_m18_red_mag";
										count=2;
										ammoLeft=1;
									};
									class Item5
									{
										name="vn_mine_m112_remote_mag";
										count=5;
										ammoLeft=1;
									};
								};
								class ItemCargo
								{
									items=2;
									class Item0
									{
										name="vn_b_item_firstaidkit";
										count=2;
									};
									class Item1
									{
										name="vn_b_item_trapkit";
										count=1;
									};
								};
							};
							map="vn_b_item_map";
							compass="vn_b_item_compass";
							watch="vn_b_item_watch";
							radio="vn_b_item_radio_urc10";
							headgear="vn_b_boonie_02_02";
						};
					};
					id=120;
					type="vn_b_men_sf_06";
					class CustomAttributes
					{
						class Attribute0
						{
							property="speaker";
							expression="_this setspeaker _value;";
							class Value
							{
								class data
								{
									singleType="STRING";
									value="Male02ENG";
								};
							};
						};
						class Attribute1
						{
							property="pitch";
							expression="_this setpitch _value;";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1.04;
								};
							};
						};
						class Attribute2
						{
							property="enableStamina";
							expression="_this enablestamina _value;";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=0;
								};
							};
						};
						nAttributes=3;
					};
				};
			};
			class Attributes
			{
				init="this addEventHandler [ ""HandleDamage"", { " \n "  params [""_unit"", ""_hitSelection"", ""_damage"",""_source"",""_projectile"",""_hitPartIndex"", ""_instigator"", ""_hitPoint""]; " \n " " \n "  private _damageMultiplierHead = 0.4; " \n "  private _damageMultiplierBody = 0.3; " \n "  private _damageMultiplierLimbs = 0.35; " \n "  private _damageMultiplierOverall = 0.3; " \n "  private _limitHead = 1.0; " \n "  private _limitBody = 0.25; " \n "  private _limitLimbs = 0.1; " \n "  private _limitOverall = 0.25; " \n "  private _oldDamage = 0; " \n "  if (_hitSelection isEqualTo """") then {_oldDamage = damage _unit} else {_oldDamage = _unit getHit _hitSelection}; " \n "  private _newDamage = _damage - _oldDamage max 0; " \n "  private _incomingDamage = _newDamage; " \n "  private _playerHealth = damage _unit; " \n " " \n "  if (_newDamage > 0 && !(_projectile isEqualTo """")) then { " \n "    private _damageMultiplier = _damageMultiplierBody; " \n "    private _upperLimit = _limitBody; " \n "    switch (_hitSelection) do { " \n "      case ""face_hub""; " \n "      case ""head"": { " \n "        _damageMultiplier = _damageMultiplierHead; " \n "        _upperLimit = _limitHead; " \n "      }; " \n "      case ""arms""; " \n "      case ""hands""; " \n "      case ""legs"": { " \n "        _damageMultiplier = _damageMultiplierLimbs; " \n "        _upperLimit = _limitLimbs; " \n "      }; " \n "      case """": { " \n "        _damageMultiplier = _damageMultiplierOverall; " \n "        _upperLimit = _limitOverall; " \n "      }; " \n "      default { " \n "        _damageMultiplier = _damageMultiplierBody; " \n "        _upperLimit = _limitBody; " \n "      }; " \n "    }; " \n "    _newDamage = _newDamage * _damageMultiplier; " \n "    if (_newDamage > _upperLimit) then { " \n "      _newDamage = _upperLimit; " \n "    }; " \n " " \n "    _damage = _oldDamage + _newDamage; " \n "  }; " \n " " \n "  if ( isPlayer _unit ) then { " \n "    if ( lifeState _unit == ""INCAPACITATED"" ) then { " \n "      _damage = _oldDamage; " \n "    } else { " \n "      _this set[ 2, _damage ]; " \n "      _damage = _this call bis_fnc_reviveEhHandleDamage; " \n "    }; " \n "  }; " \n "  _damage " \n "}]";
			};
			id=119;
		};
		class Item40
		{
			dataType="Group";
			side="West";
			class Entities
			{
				items=1;
				class Item0
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={1262.14,51.140278,537.62384};
						angles[]={0,1.5916864,0};
					};
					side="West";
					flags=7;
					class Attributes
					{
						init="this addEventHandler [ ""HandleDamage"", { " \n "  params [""_unit"", ""_hitSelection"", ""_damage"",""_source"",""_projectile"",""_hitPartIndex"", ""_instigator"", ""_hitPoint""]; " \n " " \n "  private _damageMultiplierHead = 0.4; " \n "  private _damageMultiplierBody = 0.3; " \n "  private _damageMultiplierLimbs = 0.25; " \n "  private _damageMultiplierOverall = 0.25; " \n "  private _limitHead = 1.0; " \n "  private _limitBody = 0.25; " \n "  private _limitLimbs = 0.1; " \n "  private _limitOverall = 0.25; " \n "  private _oldDamage = 0; " \n "  if (_hitSelection isEqualTo """") then {_oldDamage = damage _unit} else {_oldDamage = _unit getHit _hitSelection}; " \n "  private _newDamage = _damage - _oldDamage max 0; " \n "  private _incomingDamage = _newDamage; " \n "  private _playerHealth = damage _unit; " \n " " \n "  if (_newDamage > 0 && !(_projectile isEqualTo """")) then { " \n "    private _damageMultiplier = _damageMultiplierBody; " \n "    private _upperLimit = _limitBody; " \n "    switch (_hitSelection) do { " \n "      case ""face_hub""; " \n "      case ""head"": { " \n "        _damageMultiplier = _damageMultiplierHead; " \n "        _upperLimit = _limitHead; " \n "      }; " \n "      case ""arms""; " \n "      case ""hands""; " \n "      case ""legs"": { " \n "        _damageMultiplier = _damageMultiplierLimbs; " \n "        _upperLimit = _limitLimbs; " \n "      }; " \n "      case """": { " \n "        _damageMultiplier = _damageMultiplierOverall; " \n "        _upperLimit = _limitOverall; " \n "      }; " \n "      default { " \n "        _damageMultiplier = _damageMultiplierBody; " \n "        _upperLimit = _limitBody; " \n "      }; " \n "    }; " \n "    _newDamage = _newDamage * _damageMultiplier; " \n "    if (_newDamage > _upperLimit) then { " \n "      _newDamage = _upperLimit; " \n "    }; " \n " " \n "    _damage = _oldDamage + _newDamage; " \n "  }; " \n " " \n "  if ( isPlayer _unit ) then { " \n "    if ( lifeState _unit == ""INCAPACITATED"" ) then { " \n "      _damage = _oldDamage; " \n "    } else { " \n "      _this set[ 2, _damage ]; " \n "      _damage = _this call bis_fnc_reviveEhHandleDamage; " \n "    }; " \n "  }; " \n "  _damage " \n "}]";
						isPlayable=1;
						class Inventory
						{
							class primaryWeapon
							{
								name="vn_m1carbine";
								class primaryMuzzleMag
								{
									name="vn_carbine_15_mag";
									ammoLeft=15;
								};
							};
							class secondaryWeapon
							{
								name="vn_m127";
								class primaryMuzzleMag
								{
									name="vn_m127_mag";
									ammoLeft=1;
								};
							};
							class handgun
							{
								name="vn_mx991";
							};
							class binocular
							{
								name="vn_m19_binocs_grey";
							};
							class uniform
							{
								typeName="vn_b_uniform_macv_01_02";
								isBackpack=0;
								class MagazineCargo
								{
									items=1;
									class Item0
									{
										name="vn_prop_food_fresh_01";
										count=24;
										ammoLeft=100;
									};
								};
								class ItemCargo
								{
									items=1;
									class Item0
									{
										name="vn_b_item_firstaidkit";
										count=8;
									};
								};
							};
							class vest
							{
								typeName="vn_b_vest_usarmy_03";
								isBackpack=0;
								class MagazineCargo
								{
									items=1;
									class Item0
									{
										name="vn_m61_grenade_mag";
										count=9;
										ammoLeft=1;
									};
								};
							};
							class backpack
							{
								typeName="vn_b_pack_03";
								isBackpack=1;
								class MagazineCargo
								{
									items=6;
									class Item0
									{
										name="vn_m129_mag";
										count=5;
										ammoLeft=1;
									};
									class Item1
									{
										name="vn_carbine_15_t_mag";
										count=12;
										ammoLeft=15;
									};
									class Item2
									{
										name="vn_m34_grenade_mag";
										count=1;
										ammoLeft=1;
									};
									class Item3
									{
										name="vn_m18_purple_mag";
										count=2;
										ammoLeft=1;
									};
									class Item4
									{
										name="vn_m18_red_mag";
										count=2;
										ammoLeft=1;
									};
									class Item5
									{
										name="vn_mine_m112_remote_mag";
										count=5;
										ammoLeft=1;
									};
								};
								class ItemCargo
								{
									items=2;
									class Item0
									{
										name="vn_b_item_firstaidkit";
										count=2;
									};
									class Item1
									{
										name="vn_b_item_trapkit";
										count=1;
									};
								};
							};
							map="vn_b_item_map";
							compass="vn_b_item_compass";
							watch="vn_b_item_watch";
							radio="vn_b_item_radio_urc10";
							headgear="vn_b_boonie_02_02";
						};
					};
					id=122;
					type="vn_b_men_sf_06";
					class CustomAttributes
					{
						class Attribute0
						{
							property="speaker";
							expression="_this setspeaker _value;";
							class Value
							{
								class data
								{
									singleType="STRING";
									value="Male02ENG";
								};
							};
						};
						class Attribute1
						{
							property="pitch";
							expression="_this setpitch _value;";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1.04;
								};
							};
						};
						class Attribute2
						{
							property="enableStamina";
							expression="_this enablestamina _value;";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=0;
								};
							};
						};
						nAttributes=3;
					};
				};
			};
			class Attributes
			{
				init="this addEventHandler [ ""HandleDamage"", { " \n "  params [""_unit"", ""_hitSelection"", ""_damage"",""_source"",""_projectile"",""_hitPartIndex"", ""_instigator"", ""_hitPoint""]; " \n " " \n "  private _damageMultiplierHead = 0.4; " \n "  private _damageMultiplierBody = 0.3; " \n "  private _damageMultiplierLimbs = 0.35; " \n "  private _damageMultiplierOverall = 0.3; " \n "  private _limitHead = 1.0; " \n "  private _limitBody = 0.25; " \n "  private _limitLimbs = 0.1; " \n "  private _limitOverall = 0.25; " \n "  private _oldDamage = 0; " \n "  if (_hitSelection isEqualTo """") then {_oldDamage = damage _unit} else {_oldDamage = _unit getHit _hitSelection}; " \n "  private _newDamage = _damage - _oldDamage max 0; " \n "  private _incomingDamage = _newDamage; " \n "  private _playerHealth = damage _unit; " \n " " \n "  if (_newDamage > 0 && !(_projectile isEqualTo """")) then { " \n "    private _damageMultiplier = _damageMultiplierBody; " \n "    private _upperLimit = _limitBody; " \n "    switch (_hitSelection) do { " \n "      case ""face_hub""; " \n "      case ""head"": { " \n "        _damageMultiplier = _damageMultiplierHead; " \n "        _upperLimit = _limitHead; " \n "      }; " \n "      case ""arms""; " \n "      case ""hands""; " \n "      case ""legs"": { " \n "        _damageMultiplier = _damageMultiplierLimbs; " \n "        _upperLimit = _limitLimbs; " \n "      }; " \n "      case """": { " \n "        _damageMultiplier = _damageMultiplierOverall; " \n "        _upperLimit = _limitOverall; " \n "      }; " \n "      default { " \n "        _damageMultiplier = _damageMultiplierBody; " \n "        _upperLimit = _limitBody; " \n "      }; " \n "    }; " \n "    _newDamage = _newDamage * _damageMultiplier; " \n "    if (_newDamage > _upperLimit) then { " \n "      _newDamage = _upperLimit; " \n "    }; " \n " " \n "    _damage = _oldDamage + _newDamage; " \n "  }; " \n " " \n "  if ( isPlayer _unit ) then { " \n "    if ( lifeState _unit == ""INCAPACITATED"" ) then { " \n "      _damage = _oldDamage; " \n "    } else { " \n "      _this set[ 2, _damage ]; " \n "      _damage = _this call bis_fnc_reviveEhHandleDamage; " \n "    }; " \n "  }; " \n "  _damage " \n "}]";
			};
			id=121;
		};
		class Item41
		{
			dataType="Group";
			side="West";
			class Entities
			{
				items=1;
				class Item0
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={1262.1615,51.122513,538.76691};
						angles[]={0,1.5916864,0};
					};
					side="West";
					flags=7;
					class Attributes
					{
						init="this addEventHandler [ ""HandleDamage"", { " \n "  params [""_unit"", ""_hitSelection"", ""_damage"",""_source"",""_projectile"",""_hitPartIndex"", ""_instigator"", ""_hitPoint""]; " \n " " \n "  private _damageMultiplierHead = 0.4; " \n "  private _damageMultiplierBody = 0.3; " \n "  private _damageMultiplierLimbs = 0.25; " \n "  private _damageMultiplierOverall = 0.25; " \n "  private _limitHead = 1.0; " \n "  private _limitBody = 0.25; " \n "  private _limitLimbs = 0.1; " \n "  private _limitOverall = 0.25; " \n "  private _oldDamage = 0; " \n "  if (_hitSelection isEqualTo """") then {_oldDamage = damage _unit} else {_oldDamage = _unit getHit _hitSelection}; " \n "  private _newDamage = _damage - _oldDamage max 0; " \n "  private _incomingDamage = _newDamage; " \n "  private _playerHealth = damage _unit; " \n " " \n "  if (_newDamage > 0 && !(_projectile isEqualTo """")) then { " \n "    private _damageMultiplier = _damageMultiplierBody; " \n "    private _upperLimit = _limitBody; " \n "    switch (_hitSelection) do { " \n "      case ""face_hub""; " \n "      case ""head"": { " \n "        _damageMultiplier = _damageMultiplierHead; " \n "        _upperLimit = _limitHead; " \n "      }; " \n "      case ""arms""; " \n "      case ""hands""; " \n "      case ""legs"": { " \n "        _damageMultiplier = _damageMultiplierLimbs; " \n "        _upperLimit = _limitLimbs; " \n "      }; " \n "      case """": { " \n "        _damageMultiplier = _damageMultiplierOverall; " \n "        _upperLimit = _limitOverall; " \n "      }; " \n "      default { " \n "        _damageMultiplier = _damageMultiplierBody; " \n "        _upperLimit = _limitBody; " \n "      }; " \n "    }; " \n "    _newDamage = _newDamage * _damageMultiplier; " \n "    if (_newDamage > _upperLimit) then { " \n "      _newDamage = _upperLimit; " \n "    }; " \n " " \n "    _damage = _oldDamage + _newDamage; " \n "  }; " \n " " \n "  if ( isPlayer _unit ) then { " \n "    if ( lifeState _unit == ""INCAPACITATED"" ) then { " \n "      _damage = _oldDamage; " \n "    } else { " \n "      _this set[ 2, _damage ]; " \n "      _damage = _this call bis_fnc_reviveEhHandleDamage; " \n "    }; " \n "  }; " \n "  _damage " \n "}]";
						isPlayable=1;
						class Inventory
						{
							class primaryWeapon
							{
								name="vn_m1carbine";
								class primaryMuzzleMag
								{
									name="vn_carbine_15_mag";
									ammoLeft=15;
								};
							};
							class secondaryWeapon
							{
								name="vn_m127";
								class primaryMuzzleMag
								{
									name="vn_m127_mag";
									ammoLeft=1;
								};
							};
							class handgun
							{
								name="vn_mx991";
							};
							class binocular
							{
								name="vn_m19_binocs_grey";
							};
							class uniform
							{
								typeName="vn_b_uniform_macv_01_02";
								isBackpack=0;
								class MagazineCargo
								{
									items=1;
									class Item0
									{
										name="vn_prop_food_fresh_01";
										count=24;
										ammoLeft=100;
									};
								};
								class ItemCargo
								{
									items=1;
									class Item0
									{
										name="vn_b_item_firstaidkit";
										count=8;
									};
								};
							};
							class vest
							{
								typeName="vn_b_vest_usarmy_03";
								isBackpack=0;
								class MagazineCargo
								{
									items=1;
									class Item0
									{
										name="vn_m61_grenade_mag";
										count=9;
										ammoLeft=1;
									};
								};
							};
							class backpack
							{
								typeName="vn_b_pack_03";
								isBackpack=1;
								class MagazineCargo
								{
									items=6;
									class Item0
									{
										name="vn_m129_mag";
										count=5;
										ammoLeft=1;
									};
									class Item1
									{
										name="vn_carbine_15_t_mag";
										count=12;
										ammoLeft=15;
									};
									class Item2
									{
										name="vn_m34_grenade_mag";
										count=1;
										ammoLeft=1;
									};
									class Item3
									{
										name="vn_m18_purple_mag";
										count=2;
										ammoLeft=1;
									};
									class Item4
									{
										name="vn_m18_red_mag";
										count=2;
										ammoLeft=1;
									};
									class Item5
									{
										name="vn_mine_m112_remote_mag";
										count=5;
										ammoLeft=1;
									};
								};
								class ItemCargo
								{
									items=2;
									class Item0
									{
										name="vn_b_item_firstaidkit";
										count=2;
									};
									class Item1
									{
										name="vn_b_item_trapkit";
										count=1;
									};
								};
							};
							map="vn_b_item_map";
							compass="vn_b_item_compass";
							watch="vn_b_item_watch";
							radio="vn_b_item_radio_urc10";
							headgear="vn_b_boonie_02_02";
						};
					};
					id=124;
					type="vn_b_men_sf_06";
					atlOffset=-3.8146973e-006;
					class CustomAttributes
					{
						class Attribute0
						{
							property="speaker";
							expression="_this setspeaker _value;";
							class Value
							{
								class data
								{
									singleType="STRING";
									value="Male02ENG";
								};
							};
						};
						class Attribute1
						{
							property="pitch";
							expression="_this setpitch _value;";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1.04;
								};
							};
						};
						class Attribute2
						{
							property="enableStamina";
							expression="_this enablestamina _value;";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=0;
								};
							};
						};
						nAttributes=3;
					};
				};
			};
			class Attributes
			{
				init="this addEventHandler [ ""HandleDamage"", { " \n "  params [""_unit"", ""_hitSelection"", ""_damage"",""_source"",""_projectile"",""_hitPartIndex"", ""_instigator"", ""_hitPoint""]; " \n " " \n "  private _damageMultiplierHead = 0.4; " \n "  private _damageMultiplierBody = 0.3; " \n "  private _damageMultiplierLimbs = 0.35; " \n "  private _damageMultiplierOverall = 0.3; " \n "  private _limitHead = 1.0; " \n "  private _limitBody = 0.25; " \n "  private _limitLimbs = 0.1; " \n "  private _limitOverall = 0.25; " \n "  private _oldDamage = 0; " \n "  if (_hitSelection isEqualTo """") then {_oldDamage = damage _unit} else {_oldDamage = _unit getHit _hitSelection}; " \n "  private _newDamage = _damage - _oldDamage max 0; " \n "  private _incomingDamage = _newDamage; " \n "  private _playerHealth = damage _unit; " \n " " \n "  if (_newDamage > 0 && !(_projectile isEqualTo """")) then { " \n "    private _damageMultiplier = _damageMultiplierBody; " \n "    private _upperLimit = _limitBody; " \n "    switch (_hitSelection) do { " \n "      case ""face_hub""; " \n "      case ""head"": { " \n "        _damageMultiplier = _damageMultiplierHead; " \n "        _upperLimit = _limitHead; " \n "      }; " \n "      case ""arms""; " \n "      case ""hands""; " \n "      case ""legs"": { " \n "        _damageMultiplier = _damageMultiplierLimbs; " \n "        _upperLimit = _limitLimbs; " \n "      }; " \n "      case """": { " \n "        _damageMultiplier = _damageMultiplierOverall; " \n "        _upperLimit = _limitOverall; " \n "      }; " \n "      default { " \n "        _damageMultiplier = _damageMultiplierBody; " \n "        _upperLimit = _limitBody; " \n "      }; " \n "    }; " \n "    _newDamage = _newDamage * _damageMultiplier; " \n "    if (_newDamage > _upperLimit) then { " \n "      _newDamage = _upperLimit; " \n "    }; " \n " " \n "    _damage = _oldDamage + _newDamage; " \n "  }; " \n " " \n "  if ( isPlayer _unit ) then { " \n "    if ( lifeState _unit == ""INCAPACITATED"" ) then { " \n "      _damage = _oldDamage; " \n "    } else { " \n "      _this set[ 2, _damage ]; " \n "      _damage = _this call bis_fnc_reviveEhHandleDamage; " \n "    }; " \n "  }; " \n "  _damage " \n "}]";
			};
			id=123;
			atlOffset=-3.8146973e-006;
		};
		class Item42
		{
			dataType="Group";
			side="West";
			class Entities
			{
				items=1;
				class Item0
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={1263.1869,51.554474,526.85431};
						angles[]={0,1.5916864,0};
					};
					side="West";
					flags=7;
					class Attributes
					{
						init="this addEventHandler [ ""HandleDamage"", { " \n "  params [""_unit"", ""_hitSelection"", ""_damage"",""_source"",""_projectile"",""_hitPartIndex"", ""_instigator"", ""_hitPoint""]; " \n " " \n "  private _damageMultiplierHead = 0.4; " \n "  private _damageMultiplierBody = 0.3; " \n "  private _damageMultiplierLimbs = 0.25; " \n "  private _damageMultiplierOverall = 0.25; " \n "  private _limitHead = 1.0; " \n "  private _limitBody = 0.25; " \n "  private _limitLimbs = 0.1; " \n "  private _limitOverall = 0.25; " \n "  private _oldDamage = 0; " \n "  if (_hitSelection isEqualTo """") then {_oldDamage = damage _unit} else {_oldDamage = _unit getHit _hitSelection}; " \n "  private _newDamage = _damage - _oldDamage max 0; " \n "  private _incomingDamage = _newDamage; " \n "  private _playerHealth = damage _unit; " \n " " \n "  if (_newDamage > 0 && !(_projectile isEqualTo """")) then { " \n "    private _damageMultiplier = _damageMultiplierBody; " \n "    private _upperLimit = _limitBody; " \n "    switch (_hitSelection) do { " \n "      case ""face_hub""; " \n "      case ""head"": { " \n "        _damageMultiplier = _damageMultiplierHead; " \n "        _upperLimit = _limitHead; " \n "      }; " \n "      case ""arms""; " \n "      case ""hands""; " \n "      case ""legs"": { " \n "        _damageMultiplier = _damageMultiplierLimbs; " \n "        _upperLimit = _limitLimbs; " \n "      }; " \n "      case """": { " \n "        _damageMultiplier = _damageMultiplierOverall; " \n "        _upperLimit = _limitOverall; " \n "      }; " \n "      default { " \n "        _damageMultiplier = _damageMultiplierBody; " \n "        _upperLimit = _limitBody; " \n "      }; " \n "    }; " \n "    _newDamage = _newDamage * _damageMultiplier; " \n "    if (_newDamage > _upperLimit) then { " \n "      _newDamage = _upperLimit; " \n "    }; " \n " " \n "    _damage = _oldDamage + _newDamage; " \n "  }; " \n " " \n "  if ( isPlayer _unit ) then { " \n "    if ( lifeState _unit == ""INCAPACITATED"" ) then { " \n "      _damage = _oldDamage; " \n "    } else { " \n "      _this set[ 2, _damage ]; " \n "      _damage = _this call bis_fnc_reviveEhHandleDamage; " \n "    }; " \n "  }; " \n "  _damage " \n "}]";
						isPlayable=1;
						class Inventory
						{
							class primaryWeapon
							{
								name="vn_m1carbine";
								class primaryMuzzleMag
								{
									name="vn_carbine_15_mag";
									ammoLeft=15;
								};
							};
							class secondaryWeapon
							{
								name="vn_m127";
								class primaryMuzzleMag
								{
									name="vn_m127_mag";
									ammoLeft=1;
								};
							};
							class handgun
							{
								name="vn_mx991";
							};
							class binocular
							{
								name="vn_m19_binocs_grey";
							};
							class uniform
							{
								typeName="vn_b_uniform_macv_01_02";
								isBackpack=0;
								class MagazineCargo
								{
									items=1;
									class Item0
									{
										name="vn_prop_food_fresh_01";
										count=24;
										ammoLeft=100;
									};
								};
								class ItemCargo
								{
									items=1;
									class Item0
									{
										name="vn_b_item_firstaidkit";
										count=8;
									};
								};
							};
							class vest
							{
								typeName="vn_b_vest_usarmy_03";
								isBackpack=0;
								class MagazineCargo
								{
									items=1;
									class Item0
									{
										name="vn_m61_grenade_mag";
										count=9;
										ammoLeft=1;
									};
								};
							};
							class backpack
							{
								typeName="vn_b_pack_03";
								isBackpack=1;
								class MagazineCargo
								{
									items=6;
									class Item0
									{
										name="vn_m129_mag";
										count=5;
										ammoLeft=1;
									};
									class Item1
									{
										name="vn_carbine_15_t_mag";
										count=12;
										ammoLeft=15;
									};
									class Item2
									{
										name="vn_m34_grenade_mag";
										count=1;
										ammoLeft=1;
									};
									class Item3
									{
										name="vn_m18_purple_mag";
										count=2;
										ammoLeft=1;
									};
									class Item4
									{
										name="vn_m18_red_mag";
										count=2;
										ammoLeft=1;
									};
									class Item5
									{
										name="vn_mine_m112_remote_mag";
										count=5;
										ammoLeft=1;
									};
								};
								class ItemCargo
								{
									items=2;
									class Item0
									{
										name="vn_b_item_firstaidkit";
										count=2;
									};
									class Item1
									{
										name="vn_b_item_trapkit";
										count=1;
									};
								};
							};
							map="vn_b_item_map";
							compass="vn_b_item_compass";
							watch="vn_b_item_watch";
							radio="vn_b_item_radio_urc10";
							headgear="vn_b_boonie_02_02";
						};
					};
					id=126;
					type="vn_b_men_sf_06";
					atlOffset=7.6293945e-006;
					class CustomAttributes
					{
						class Attribute0
						{
							property="speaker";
							expression="_this setspeaker _value;";
							class Value
							{
								class data
								{
									singleType="STRING";
									value="Male02ENG";
								};
							};
						};
						class Attribute1
						{
							property="pitch";
							expression="_this setpitch _value;";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1.04;
								};
							};
						};
						class Attribute2
						{
							property="enableStamina";
							expression="_this enablestamina _value;";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=0;
								};
							};
						};
						nAttributes=3;
					};
				};
			};
			class Attributes
			{
				init="this addEventHandler [ ""HandleDamage"", { " \n "  params [""_unit"", ""_hitSelection"", ""_damage"",""_source"",""_projectile"",""_hitPartIndex"", ""_instigator"", ""_hitPoint""]; " \n " " \n "  private _damageMultiplierHead = 0.4; " \n "  private _damageMultiplierBody = 0.3; " \n "  private _damageMultiplierLimbs = 0.35; " \n "  private _damageMultiplierOverall = 0.3; " \n "  private _limitHead = 1.0; " \n "  private _limitBody = 0.25; " \n "  private _limitLimbs = 0.1; " \n "  private _limitOverall = 0.25; " \n "  private _oldDamage = 0; " \n "  if (_hitSelection isEqualTo """") then {_oldDamage = damage _unit} else {_oldDamage = _unit getHit _hitSelection}; " \n "  private _newDamage = _damage - _oldDamage max 0; " \n "  private _incomingDamage = _newDamage; " \n "  private _playerHealth = damage _unit; " \n " " \n "  if (_newDamage > 0 && !(_projectile isEqualTo """")) then { " \n "    private _damageMultiplier = _damageMultiplierBody; " \n "    private _upperLimit = _limitBody; " \n "    switch (_hitSelection) do { " \n "      case ""face_hub""; " \n "      case ""head"": { " \n "        _damageMultiplier = _damageMultiplierHead; " \n "        _upperLimit = _limitHead; " \n "      }; " \n "      case ""arms""; " \n "      case ""hands""; " \n "      case ""legs"": { " \n "        _damageMultiplier = _damageMultiplierLimbs; " \n "        _upperLimit = _limitLimbs; " \n "      }; " \n "      case """": { " \n "        _damageMultiplier = _damageMultiplierOverall; " \n "        _upperLimit = _limitOverall; " \n "      }; " \n "      default { " \n "        _damageMultiplier = _damageMultiplierBody; " \n "        _upperLimit = _limitBody; " \n "      }; " \n "    }; " \n "    _newDamage = _newDamage * _damageMultiplier; " \n "    if (_newDamage > _upperLimit) then { " \n "      _newDamage = _upperLimit; " \n "    }; " \n " " \n "    _damage = _oldDamage + _newDamage; " \n "  }; " \n " " \n "  if ( isPlayer _unit ) then { " \n "    if ( lifeState _unit == ""INCAPACITATED"" ) then { " \n "      _damage = _oldDamage; " \n "    } else { " \n "      _this set[ 2, _damage ]; " \n "      _damage = _this call bis_fnc_reviveEhHandleDamage; " \n "    }; " \n "  }; " \n "  _damage " \n "}]";
			};
			id=125;
			atlOffset=7.6293945e-006;
		};
		class Item43
		{
			dataType="Group";
			side="West";
			class Entities
			{
				items=1;
				class Item0
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={1263.1742,51.502556,528.04816};
						angles[]={0,1.5916864,0};
					};
					side="West";
					flags=7;
					class Attributes
					{
						init="this addEventHandler [ ""HandleDamage"", { " \n "  params [""_unit"", ""_hitSelection"", ""_damage"",""_source"",""_projectile"",""_hitPartIndex"", ""_instigator"", ""_hitPoint""]; " \n " " \n "  private _damageMultiplierHead = 0.4; " \n "  private _damageMultiplierBody = 0.3; " \n "  private _damageMultiplierLimbs = 0.25; " \n "  private _damageMultiplierOverall = 0.25; " \n "  private _limitHead = 1.0; " \n "  private _limitBody = 0.25; " \n "  private _limitLimbs = 0.1; " \n "  private _limitOverall = 0.25; " \n "  private _oldDamage = 0; " \n "  if (_hitSelection isEqualTo """") then {_oldDamage = damage _unit} else {_oldDamage = _unit getHit _hitSelection}; " \n "  private _newDamage = _damage - _oldDamage max 0; " \n "  private _incomingDamage = _newDamage; " \n "  private _playerHealth = damage _unit; " \n " " \n "  if (_newDamage > 0 && !(_projectile isEqualTo """")) then { " \n "    private _damageMultiplier = _damageMultiplierBody; " \n "    private _upperLimit = _limitBody; " \n "    switch (_hitSelection) do { " \n "      case ""face_hub""; " \n "      case ""head"": { " \n "        _damageMultiplier = _damageMultiplierHead; " \n "        _upperLimit = _limitHead; " \n "      }; " \n "      case ""arms""; " \n "      case ""hands""; " \n "      case ""legs"": { " \n "        _damageMultiplier = _damageMultiplierLimbs; " \n "        _upperLimit = _limitLimbs; " \n "      }; " \n "      case """": { " \n "        _damageMultiplier = _damageMultiplierOverall; " \n "        _upperLimit = _limitOverall; " \n "      }; " \n "      default { " \n "        _damageMultiplier = _damageMultiplierBody; " \n "        _upperLimit = _limitBody; " \n "      }; " \n "    }; " \n "    _newDamage = _newDamage * _damageMultiplier; " \n "    if (_newDamage > _upperLimit) then { " \n "      _newDamage = _upperLimit; " \n "    }; " \n " " \n "    _damage = _oldDamage + _newDamage; " \n "  }; " \n " " \n "  if ( isPlayer _unit ) then { " \n "    if ( lifeState _unit == ""INCAPACITATED"" ) then { " \n "      _damage = _oldDamage; " \n "    } else { " \n "      _this set[ 2, _damage ]; " \n "      _damage = _this call bis_fnc_reviveEhHandleDamage; " \n "    }; " \n "  }; " \n "  _damage " \n "}]";
						isPlayable=1;
						class Inventory
						{
							class primaryWeapon
							{
								name="vn_m1carbine";
								class primaryMuzzleMag
								{
									name="vn_carbine_15_mag";
									ammoLeft=15;
								};
							};
							class secondaryWeapon
							{
								name="vn_m127";
								class primaryMuzzleMag
								{
									name="vn_m127_mag";
									ammoLeft=1;
								};
							};
							class handgun
							{
								name="vn_mx991";
							};
							class binocular
							{
								name="vn_m19_binocs_grey";
							};
							class uniform
							{
								typeName="vn_b_uniform_macv_01_02";
								isBackpack=0;
								class MagazineCargo
								{
									items=1;
									class Item0
									{
										name="vn_prop_food_fresh_01";
										count=24;
										ammoLeft=100;
									};
								};
								class ItemCargo
								{
									items=1;
									class Item0
									{
										name="vn_b_item_firstaidkit";
										count=8;
									};
								};
							};
							class vest
							{
								typeName="vn_b_vest_usarmy_03";
								isBackpack=0;
								class MagazineCargo
								{
									items=1;
									class Item0
									{
										name="vn_m61_grenade_mag";
										count=9;
										ammoLeft=1;
									};
								};
							};
							class backpack
							{
								typeName="vn_b_pack_03";
								isBackpack=1;
								class MagazineCargo
								{
									items=6;
									class Item0
									{
										name="vn_m129_mag";
										count=5;
										ammoLeft=1;
									};
									class Item1
									{
										name="vn_carbine_15_t_mag";
										count=12;
										ammoLeft=15;
									};
									class Item2
									{
										name="vn_m34_grenade_mag";
										count=1;
										ammoLeft=1;
									};
									class Item3
									{
										name="vn_m18_purple_mag";
										count=2;
										ammoLeft=1;
									};
									class Item4
									{
										name="vn_m18_red_mag";
										count=2;
										ammoLeft=1;
									};
									class Item5
									{
										name="vn_mine_m112_remote_mag";
										count=5;
										ammoLeft=1;
									};
								};
								class ItemCargo
								{
									items=2;
									class Item0
									{
										name="vn_b_item_firstaidkit";
										count=2;
									};
									class Item1
									{
										name="vn_b_item_trapkit";
										count=1;
									};
								};
							};
							map="vn_b_item_map";
							compass="vn_b_item_compass";
							watch="vn_b_item_watch";
							radio="vn_b_item_radio_urc10";
							headgear="vn_b_boonie_02_02";
						};
					};
					id=128;
					type="vn_b_men_sf_06";
					atlOffset=7.6293945e-006;
					class CustomAttributes
					{
						class Attribute0
						{
							property="speaker";
							expression="_this setspeaker _value;";
							class Value
							{
								class data
								{
									singleType="STRING";
									value="Male02ENG";
								};
							};
						};
						class Attribute1
						{
							property="pitch";
							expression="_this setpitch _value;";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1.04;
								};
							};
						};
						class Attribute2
						{
							property="enableStamina";
							expression="_this enablestamina _value;";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=0;
								};
							};
						};
						nAttributes=3;
					};
				};
			};
			class Attributes
			{
				init="this addEventHandler [ ""HandleDamage"", { " \n "  params [""_unit"", ""_hitSelection"", ""_damage"",""_source"",""_projectile"",""_hitPartIndex"", ""_instigator"", ""_hitPoint""]; " \n " " \n "  private _damageMultiplierHead = 0.4; " \n "  private _damageMultiplierBody = 0.3; " \n "  private _damageMultiplierLimbs = 0.35; " \n "  private _damageMultiplierOverall = 0.3; " \n "  private _limitHead = 1.0; " \n "  private _limitBody = 0.25; " \n "  private _limitLimbs = 0.1; " \n "  private _limitOverall = 0.25; " \n "  private _oldDamage = 0; " \n "  if (_hitSelection isEqualTo """") then {_oldDamage = damage _unit} else {_oldDamage = _unit getHit _hitSelection}; " \n "  private _newDamage = _damage - _oldDamage max 0; " \n "  private _incomingDamage = _newDamage; " \n "  private _playerHealth = damage _unit; " \n " " \n "  if (_newDamage > 0 && !(_projectile isEqualTo """")) then { " \n "    private _damageMultiplier = _damageMultiplierBody; " \n "    private _upperLimit = _limitBody; " \n "    switch (_hitSelection) do { " \n "      case ""face_hub""; " \n "      case ""head"": { " \n "        _damageMultiplier = _damageMultiplierHead; " \n "        _upperLimit = _limitHead; " \n "      }; " \n "      case ""arms""; " \n "      case ""hands""; " \n "      case ""legs"": { " \n "        _damageMultiplier = _damageMultiplierLimbs; " \n "        _upperLimit = _limitLimbs; " \n "      }; " \n "      case """": { " \n "        _damageMultiplier = _damageMultiplierOverall; " \n "        _upperLimit = _limitOverall; " \n "      }; " \n "      default { " \n "        _damageMultiplier = _damageMultiplierBody; " \n "        _upperLimit = _limitBody; " \n "      }; " \n "    }; " \n "    _newDamage = _newDamage * _damageMultiplier; " \n "    if (_newDamage > _upperLimit) then { " \n "      _newDamage = _upperLimit; " \n "    }; " \n " " \n "    _damage = _oldDamage + _newDamage; " \n "  }; " \n " " \n "  if ( isPlayer _unit ) then { " \n "    if ( lifeState _unit == ""INCAPACITATED"" ) then { " \n "      _damage = _oldDamage; " \n "    } else { " \n "      _this set[ 2, _damage ]; " \n "      _damage = _this call bis_fnc_reviveEhHandleDamage; " \n "    }; " \n "  }; " \n "  _damage " \n "}]";
			};
			id=127;
			atlOffset=7.6293945e-006;
		};
		class Item44
		{
			dataType="Group";
			side="West";
			class Entities
			{
				items=1;
				class Item0
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={1263.4008,51.462044,529.41974};
						angles[]={0,1.5916864,0};
					};
					side="West";
					flags=7;
					class Attributes
					{
						init="this addEventHandler [ ""HandleDamage"", { " \n "  params [""_unit"", ""_hitSelection"", ""_damage"",""_source"",""_projectile"",""_hitPartIndex"", ""_instigator"", ""_hitPoint""]; " \n " " \n "  private _damageMultiplierHead = 0.4; " \n "  private _damageMultiplierBody = 0.3; " \n "  private _damageMultiplierLimbs = 0.25; " \n "  private _damageMultiplierOverall = 0.25; " \n "  private _limitHead = 1.0; " \n "  private _limitBody = 0.25; " \n "  private _limitLimbs = 0.1; " \n "  private _limitOverall = 0.25; " \n "  private _oldDamage = 0; " \n "  if (_hitSelection isEqualTo """") then {_oldDamage = damage _unit} else {_oldDamage = _unit getHit _hitSelection}; " \n "  private _newDamage = _damage - _oldDamage max 0; " \n "  private _incomingDamage = _newDamage; " \n "  private _playerHealth = damage _unit; " \n " " \n "  if (_newDamage > 0 && !(_projectile isEqualTo """")) then { " \n "    private _damageMultiplier = _damageMultiplierBody; " \n "    private _upperLimit = _limitBody; " \n "    switch (_hitSelection) do { " \n "      case ""face_hub""; " \n "      case ""head"": { " \n "        _damageMultiplier = _damageMultiplierHead; " \n "        _upperLimit = _limitHead; " \n "      }; " \n "      case ""arms""; " \n "      case ""hands""; " \n "      case ""legs"": { " \n "        _damageMultiplier = _damageMultiplierLimbs; " \n "        _upperLimit = _limitLimbs; " \n "      }; " \n "      case """": { " \n "        _damageMultiplier = _damageMultiplierOverall; " \n "        _upperLimit = _limitOverall; " \n "      }; " \n "      default { " \n "        _damageMultiplier = _damageMultiplierBody; " \n "        _upperLimit = _limitBody; " \n "      }; " \n "    }; " \n "    _newDamage = _newDamage * _damageMultiplier; " \n "    if (_newDamage > _upperLimit) then { " \n "      _newDamage = _upperLimit; " \n "    }; " \n " " \n "    _damage = _oldDamage + _newDamage; " \n "  }; " \n " " \n "  if ( isPlayer _unit ) then { " \n "    if ( lifeState _unit == ""INCAPACITATED"" ) then { " \n "      _damage = _oldDamage; " \n "    } else { " \n "      _this set[ 2, _damage ]; " \n "      _damage = _this call bis_fnc_reviveEhHandleDamage; " \n "    }; " \n "  }; " \n "  _damage " \n "}]";
						isPlayable=1;
						class Inventory
						{
							class primaryWeapon
							{
								name="vn_m1carbine";
								class primaryMuzzleMag
								{
									name="vn_carbine_15_mag";
									ammoLeft=15;
								};
							};
							class secondaryWeapon
							{
								name="vn_m127";
								class primaryMuzzleMag
								{
									name="vn_m127_mag";
									ammoLeft=1;
								};
							};
							class handgun
							{
								name="vn_mx991";
							};
							class binocular
							{
								name="vn_m19_binocs_grey";
							};
							class uniform
							{
								typeName="vn_b_uniform_macv_01_02";
								isBackpack=0;
								class MagazineCargo
								{
									items=1;
									class Item0
									{
										name="vn_prop_food_fresh_01";
										count=24;
										ammoLeft=100;
									};
								};
								class ItemCargo
								{
									items=1;
									class Item0
									{
										name="vn_b_item_firstaidkit";
										count=8;
									};
								};
							};
							class vest
							{
								typeName="vn_b_vest_usarmy_03";
								isBackpack=0;
								class MagazineCargo
								{
									items=1;
									class Item0
									{
										name="vn_m61_grenade_mag";
										count=9;
										ammoLeft=1;
									};
								};
							};
							class backpack
							{
								typeName="vn_b_pack_03";
								isBackpack=1;
								class MagazineCargo
								{
									items=6;
									class Item0
									{
										name="vn_m129_mag";
										count=5;
										ammoLeft=1;
									};
									class Item1
									{
										name="vn_carbine_15_t_mag";
										count=12;
										ammoLeft=15;
									};
									class Item2
									{
										name="vn_m34_grenade_mag";
										count=1;
										ammoLeft=1;
									};
									class Item3
									{
										name="vn_m18_purple_mag";
										count=2;
										ammoLeft=1;
									};
									class Item4
									{
										name="vn_m18_red_mag";
										count=2;
										ammoLeft=1;
									};
									class Item5
									{
										name="vn_mine_m112_remote_mag";
										count=5;
										ammoLeft=1;
									};
								};
								class ItemCargo
								{
									items=2;
									class Item0
									{
										name="vn_b_item_firstaidkit";
										count=2;
									};
									class Item1
									{
										name="vn_b_item_trapkit";
										count=1;
									};
								};
							};
							map="vn_b_item_map";
							compass="vn_b_item_compass";
							watch="vn_b_item_watch";
							radio="vn_b_item_radio_urc10";
							headgear="vn_b_boonie_02_02";
						};
					};
					id=130;
					type="vn_b_men_sf_06";
					atlOffset=7.6293945e-006;
					class CustomAttributes
					{
						class Attribute0
						{
							property="speaker";
							expression="_this setspeaker _value;";
							class Value
							{
								class data
								{
									singleType="STRING";
									value="Male02ENG";
								};
							};
						};
						class Attribute1
						{
							property="pitch";
							expression="_this setpitch _value;";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1.04;
								};
							};
						};
						class Attribute2
						{
							property="enableStamina";
							expression="_this enablestamina _value;";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=0;
								};
							};
						};
						nAttributes=3;
					};
				};
			};
			class Attributes
			{
				init="this addEventHandler [ ""HandleDamage"", { " \n "  params [""_unit"", ""_hitSelection"", ""_damage"",""_source"",""_projectile"",""_hitPartIndex"", ""_instigator"", ""_hitPoint""]; " \n " " \n "  private _damageMultiplierHead = 0.4; " \n "  private _damageMultiplierBody = 0.3; " \n "  private _damageMultiplierLimbs = 0.35; " \n "  private _damageMultiplierOverall = 0.3; " \n "  private _limitHead = 1.0; " \n "  private _limitBody = 0.25; " \n "  private _limitLimbs = 0.1; " \n "  private _limitOverall = 0.25; " \n "  private _oldDamage = 0; " \n "  if (_hitSelection isEqualTo """") then {_oldDamage = damage _unit} else {_oldDamage = _unit getHit _hitSelection}; " \n "  private _newDamage = _damage - _oldDamage max 0; " \n "  private _incomingDamage = _newDamage; " \n "  private _playerHealth = damage _unit; " \n " " \n "  if (_newDamage > 0 && !(_projectile isEqualTo """")) then { " \n "    private _damageMultiplier = _damageMultiplierBody; " \n "    private _upperLimit = _limitBody; " \n "    switch (_hitSelection) do { " \n "      case ""face_hub""; " \n "      case ""head"": { " \n "        _damageMultiplier = _damageMultiplierHead; " \n "        _upperLimit = _limitHead; " \n "      }; " \n "      case ""arms""; " \n "      case ""hands""; " \n "      case ""legs"": { " \n "        _damageMultiplier = _damageMultiplierLimbs; " \n "        _upperLimit = _limitLimbs; " \n "      }; " \n "      case """": { " \n "        _damageMultiplier = _damageMultiplierOverall; " \n "        _upperLimit = _limitOverall; " \n "      }; " \n "      default { " \n "        _damageMultiplier = _damageMultiplierBody; " \n "        _upperLimit = _limitBody; " \n "      }; " \n "    }; " \n "    _newDamage = _newDamage * _damageMultiplier; " \n "    if (_newDamage > _upperLimit) then { " \n "      _newDamage = _upperLimit; " \n "    }; " \n " " \n "    _damage = _oldDamage + _newDamage; " \n "  }; " \n " " \n "  if ( isPlayer _unit ) then { " \n "    if ( lifeState _unit == ""INCAPACITATED"" ) then { " \n "      _damage = _oldDamage; " \n "    } else { " \n "      _this set[ 2, _damage ]; " \n "      _damage = _this call bis_fnc_reviveEhHandleDamage; " \n "    }; " \n "  }; " \n "  _damage " \n "}]";
			};
			id=129;
			atlOffset=7.6293945e-006;
		};
		class Item45
		{
			dataType="Group";
			side="West";
			class Entities
			{
				items=1;
				class Item0
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={1263.5922,51.422455,530.71222};
						angles[]={0,1.5916864,0};
					};
					side="West";
					flags=7;
					class Attributes
					{
						init="this addEventHandler [ ""HandleDamage"", { " \n "  params [""_unit"", ""_hitSelection"", ""_damage"",""_source"",""_projectile"",""_hitPartIndex"", ""_instigator"", ""_hitPoint""]; " \n " " \n "  private _damageMultiplierHead = 0.4; " \n "  private _damageMultiplierBody = 0.3; " \n "  private _damageMultiplierLimbs = 0.25; " \n "  private _damageMultiplierOverall = 0.25; " \n "  private _limitHead = 1.0; " \n "  private _limitBody = 0.25; " \n "  private _limitLimbs = 0.1; " \n "  private _limitOverall = 0.25; " \n "  private _oldDamage = 0; " \n "  if (_hitSelection isEqualTo """") then {_oldDamage = damage _unit} else {_oldDamage = _unit getHit _hitSelection}; " \n "  private _newDamage = _damage - _oldDamage max 0; " \n "  private _incomingDamage = _newDamage; " \n "  private _playerHealth = damage _unit; " \n " " \n "  if (_newDamage > 0 && !(_projectile isEqualTo """")) then { " \n "    private _damageMultiplier = _damageMultiplierBody; " \n "    private _upperLimit = _limitBody; " \n "    switch (_hitSelection) do { " \n "      case ""face_hub""; " \n "      case ""head"": { " \n "        _damageMultiplier = _damageMultiplierHead; " \n "        _upperLimit = _limitHead; " \n "      }; " \n "      case ""arms""; " \n "      case ""hands""; " \n "      case ""legs"": { " \n "        _damageMultiplier = _damageMultiplierLimbs; " \n "        _upperLimit = _limitLimbs; " \n "      }; " \n "      case """": { " \n "        _damageMultiplier = _damageMultiplierOverall; " \n "        _upperLimit = _limitOverall; " \n "      }; " \n "      default { " \n "        _damageMultiplier = _damageMultiplierBody; " \n "        _upperLimit = _limitBody; " \n "      }; " \n "    }; " \n "    _newDamage = _newDamage * _damageMultiplier; " \n "    if (_newDamage > _upperLimit) then { " \n "      _newDamage = _upperLimit; " \n "    }; " \n " " \n "    _damage = _oldDamage + _newDamage; " \n "  }; " \n " " \n "  if ( isPlayer _unit ) then { " \n "    if ( lifeState _unit == ""INCAPACITATED"" ) then { " \n "      _damage = _oldDamage; " \n "    } else { " \n "      _this set[ 2, _damage ]; " \n "      _damage = _this call bis_fnc_reviveEhHandleDamage; " \n "    }; " \n "  }; " \n "  _damage " \n "}]";
						isPlayable=1;
						class Inventory
						{
							class primaryWeapon
							{
								name="vn_m1carbine";
								class primaryMuzzleMag
								{
									name="vn_carbine_15_mag";
									ammoLeft=15;
								};
							};
							class secondaryWeapon
							{
								name="vn_m127";
								class primaryMuzzleMag
								{
									name="vn_m127_mag";
									ammoLeft=1;
								};
							};
							class handgun
							{
								name="vn_mx991";
							};
							class binocular
							{
								name="vn_m19_binocs_grey";
							};
							class uniform
							{
								typeName="vn_b_uniform_macv_01_02";
								isBackpack=0;
								class MagazineCargo
								{
									items=1;
									class Item0
									{
										name="vn_prop_food_fresh_01";
										count=24;
										ammoLeft=100;
									};
								};
								class ItemCargo
								{
									items=1;
									class Item0
									{
										name="vn_b_item_firstaidkit";
										count=8;
									};
								};
							};
							class vest
							{
								typeName="vn_b_vest_usarmy_03";
								isBackpack=0;
								class MagazineCargo
								{
									items=1;
									class Item0
									{
										name="vn_m61_grenade_mag";
										count=9;
										ammoLeft=1;
									};
								};
							};
							class backpack
							{
								typeName="vn_b_pack_03";
								isBackpack=1;
								class MagazineCargo
								{
									items=6;
									class Item0
									{
										name="vn_m129_mag";
										count=5;
										ammoLeft=1;
									};
									class Item1
									{
										name="vn_carbine_15_t_mag";
										count=12;
										ammoLeft=15;
									};
									class Item2
									{
										name="vn_m34_grenade_mag";
										count=1;
										ammoLeft=1;
									};
									class Item3
									{
										name="vn_m18_purple_mag";
										count=2;
										ammoLeft=1;
									};
									class Item4
									{
										name="vn_m18_red_mag";
										count=2;
										ammoLeft=1;
									};
									class Item5
									{
										name="vn_mine_m112_remote_mag";
										count=5;
										ammoLeft=1;
									};
								};
								class ItemCargo
								{
									items=2;
									class Item0
									{
										name="vn_b_item_firstaidkit";
										count=2;
									};
									class Item1
									{
										name="vn_b_item_trapkit";
										count=1;
									};
								};
							};
							map="vn_b_item_map";
							compass="vn_b_item_compass";
							watch="vn_b_item_watch";
							radio="vn_b_item_radio_urc10";
							headgear="vn_b_boonie_02_02";
						};
					};
					id=132;
					type="vn_b_men_sf_06";
					atlOffset=7.6293945e-006;
					class CustomAttributes
					{
						class Attribute0
						{
							property="speaker";
							expression="_this setspeaker _value;";
							class Value
							{
								class data
								{
									singleType="STRING";
									value="Male02ENG";
								};
							};
						};
						class Attribute1
						{
							property="pitch";
							expression="_this setpitch _value;";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1.04;
								};
							};
						};
						class Attribute2
						{
							property="enableStamina";
							expression="_this enablestamina _value;";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=0;
								};
							};
						};
						nAttributes=3;
					};
				};
			};
			class Attributes
			{
				init="this addEventHandler [ ""HandleDamage"", { " \n "  params [""_unit"", ""_hitSelection"", ""_damage"",""_source"",""_projectile"",""_hitPartIndex"", ""_instigator"", ""_hitPoint""]; " \n " " \n "  private _damageMultiplierHead = 0.4; " \n "  private _damageMultiplierBody = 0.3; " \n "  private _damageMultiplierLimbs = 0.35; " \n "  private _damageMultiplierOverall = 0.3; " \n "  private _limitHead = 1.0; " \n "  private _limitBody = 0.25; " \n "  private _limitLimbs = 0.1; " \n "  private _limitOverall = 0.25; " \n "  private _oldDamage = 0; " \n "  if (_hitSelection isEqualTo """") then {_oldDamage = damage _unit} else {_oldDamage = _unit getHit _hitSelection}; " \n "  private _newDamage = _damage - _oldDamage max 0; " \n "  private _incomingDamage = _newDamage; " \n "  private _playerHealth = damage _unit; " \n " " \n "  if (_newDamage > 0 && !(_projectile isEqualTo """")) then { " \n "    private _damageMultiplier = _damageMultiplierBody; " \n "    private _upperLimit = _limitBody; " \n "    switch (_hitSelection) do { " \n "      case ""face_hub""; " \n "      case ""head"": { " \n "        _damageMultiplier = _damageMultiplierHead; " \n "        _upperLimit = _limitHead; " \n "      }; " \n "      case ""arms""; " \n "      case ""hands""; " \n "      case ""legs"": { " \n "        _damageMultiplier = _damageMultiplierLimbs; " \n "        _upperLimit = _limitLimbs; " \n "      }; " \n "      case """": { " \n "        _damageMultiplier = _damageMultiplierOverall; " \n "        _upperLimit = _limitOverall; " \n "      }; " \n "      default { " \n "        _damageMultiplier = _damageMultiplierBody; " \n "        _upperLimit = _limitBody; " \n "      }; " \n "    }; " \n "    _newDamage = _newDamage * _damageMultiplier; " \n "    if (_newDamage > _upperLimit) then { " \n "      _newDamage = _upperLimit; " \n "    }; " \n " " \n "    _damage = _oldDamage + _newDamage; " \n "  }; " \n " " \n "  if ( isPlayer _unit ) then { " \n "    if ( lifeState _unit == ""INCAPACITATED"" ) then { " \n "      _damage = _oldDamage; " \n "    } else { " \n "      _this set[ 2, _damage ]; " \n "      _damage = _this call bis_fnc_reviveEhHandleDamage; " \n "    }; " \n "  }; " \n "  _damage " \n "}]";
			};
			id=131;
			atlOffset=7.6293945e-006;
		};
		class Item46
		{
			dataType="Group";
			side="West";
			class Entities
			{
				items=1;
				class Item0
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={1263.5629,51.382156,531.79816};
						angles[]={0,1.5916864,0};
					};
					side="West";
					flags=7;
					class Attributes
					{
						init="this addEventHandler [ ""HandleDamage"", { " \n "  params [""_unit"", ""_hitSelection"", ""_damage"",""_source"",""_projectile"",""_hitPartIndex"", ""_instigator"", ""_hitPoint""]; " \n " " \n "  private _damageMultiplierHead = 0.4; " \n "  private _damageMultiplierBody = 0.3; " \n "  private _damageMultiplierLimbs = 0.25; " \n "  private _damageMultiplierOverall = 0.25; " \n "  private _limitHead = 1.0; " \n "  private _limitBody = 0.25; " \n "  private _limitLimbs = 0.1; " \n "  private _limitOverall = 0.25; " \n "  private _oldDamage = 0; " \n "  if (_hitSelection isEqualTo """") then {_oldDamage = damage _unit} else {_oldDamage = _unit getHit _hitSelection}; " \n "  private _newDamage = _damage - _oldDamage max 0; " \n "  private _incomingDamage = _newDamage; " \n "  private _playerHealth = damage _unit; " \n " " \n "  if (_newDamage > 0 && !(_projectile isEqualTo """")) then { " \n "    private _damageMultiplier = _damageMultiplierBody; " \n "    private _upperLimit = _limitBody; " \n "    switch (_hitSelection) do { " \n "      case ""face_hub""; " \n "      case ""head"": { " \n "        _damageMultiplier = _damageMultiplierHead; " \n "        _upperLimit = _limitHead; " \n "      }; " \n "      case ""arms""; " \n "      case ""hands""; " \n "      case ""legs"": { " \n "        _damageMultiplier = _damageMultiplierLimbs; " \n "        _upperLimit = _limitLimbs; " \n "      }; " \n "      case """": { " \n "        _damageMultiplier = _damageMultiplierOverall; " \n "        _upperLimit = _limitOverall; " \n "      }; " \n "      default { " \n "        _damageMultiplier = _damageMultiplierBody; " \n "        _upperLimit = _limitBody; " \n "      }; " \n "    }; " \n "    _newDamage = _newDamage * _damageMultiplier; " \n "    if (_newDamage > _upperLimit) then { " \n "      _newDamage = _upperLimit; " \n "    }; " \n " " \n "    _damage = _oldDamage + _newDamage; " \n "  }; " \n " " \n "  if ( isPlayer _unit ) then { " \n "    if ( lifeState _unit == ""INCAPACITATED"" ) then { " \n "      _damage = _oldDamage; " \n "    } else { " \n "      _this set[ 2, _damage ]; " \n "      _damage = _this call bis_fnc_reviveEhHandleDamage; " \n "    }; " \n "  }; " \n "  _damage " \n "}]";
						isPlayable=1;
						class Inventory
						{
							class primaryWeapon
							{
								name="vn_m1carbine";
								class primaryMuzzleMag
								{
									name="vn_carbine_15_mag";
									ammoLeft=15;
								};
							};
							class secondaryWeapon
							{
								name="vn_m127";
								class primaryMuzzleMag
								{
									name="vn_m127_mag";
									ammoLeft=1;
								};
							};
							class handgun
							{
								name="vn_mx991";
							};
							class binocular
							{
								name="vn_m19_binocs_grey";
							};
							class uniform
							{
								typeName="vn_b_uniform_macv_01_02";
								isBackpack=0;
								class MagazineCargo
								{
									items=1;
									class Item0
									{
										name="vn_prop_food_fresh_01";
										count=24;
										ammoLeft=100;
									};
								};
								class ItemCargo
								{
									items=1;
									class Item0
									{
										name="vn_b_item_firstaidkit";
										count=8;
									};
								};
							};
							class vest
							{
								typeName="vn_b_vest_usarmy_03";
								isBackpack=0;
								class MagazineCargo
								{
									items=1;
									class Item0
									{
										name="vn_m61_grenade_mag";
										count=9;
										ammoLeft=1;
									};
								};
							};
							class backpack
							{
								typeName="vn_b_pack_03";
								isBackpack=1;
								class MagazineCargo
								{
									items=6;
									class Item0
									{
										name="vn_m129_mag";
										count=5;
										ammoLeft=1;
									};
									class Item1
									{
										name="vn_carbine_15_t_mag";
										count=12;
										ammoLeft=15;
									};
									class Item2
									{
										name="vn_m34_grenade_mag";
										count=1;
										ammoLeft=1;
									};
									class Item3
									{
										name="vn_m18_purple_mag";
										count=2;
										ammoLeft=1;
									};
									class Item4
									{
										name="vn_m18_red_mag";
										count=2;
										ammoLeft=1;
									};
									class Item5
									{
										name="vn_mine_m112_remote_mag";
										count=5;
										ammoLeft=1;
									};
								};
								class ItemCargo
								{
									items=2;
									class Item0
									{
										name="vn_b_item_firstaidkit";
										count=2;
									};
									class Item1
									{
										name="vn_b_item_trapkit";
										count=1;
									};
								};
							};
							map="vn_b_item_map";
							compass="vn_b_item_compass";
							watch="vn_b_item_watch";
							radio="vn_b_item_radio_urc10";
							headgear="vn_b_boonie_02_02";
						};
					};
					id=134;
					type="vn_b_men_sf_06";
					atlOffset=7.6293945e-006;
					class CustomAttributes
					{
						class Attribute0
						{
							property="speaker";
							expression="_this setspeaker _value;";
							class Value
							{
								class data
								{
									singleType="STRING";
									value="Male02ENG";
								};
							};
						};
						class Attribute1
						{
							property="pitch";
							expression="_this setpitch _value;";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1.04;
								};
							};
						};
						class Attribute2
						{
							property="enableStamina";
							expression="_this enablestamina _value;";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=0;
								};
							};
						};
						nAttributes=3;
					};
				};
			};
			class Attributes
			{
				init="this addEventHandler [ ""HandleDamage"", { " \n "  params [""_unit"", ""_hitSelection"", ""_damage"",""_source"",""_projectile"",""_hitPartIndex"", ""_instigator"", ""_hitPoint""]; " \n " " \n "  private _damageMultiplierHead = 0.4; " \n "  private _damageMultiplierBody = 0.3; " \n "  private _damageMultiplierLimbs = 0.35; " \n "  private _damageMultiplierOverall = 0.3; " \n "  private _limitHead = 1.0; " \n "  private _limitBody = 0.25; " \n "  private _limitLimbs = 0.1; " \n "  private _limitOverall = 0.25; " \n "  private _oldDamage = 0; " \n "  if (_hitSelection isEqualTo """") then {_oldDamage = damage _unit} else {_oldDamage = _unit getHit _hitSelection}; " \n "  private _newDamage = _damage - _oldDamage max 0; " \n "  private _incomingDamage = _newDamage; " \n "  private _playerHealth = damage _unit; " \n " " \n "  if (_newDamage > 0 && !(_projectile isEqualTo """")) then { " \n "    private _damageMultiplier = _damageMultiplierBody; " \n "    private _upperLimit = _limitBody; " \n "    switch (_hitSelection) do { " \n "      case ""face_hub""; " \n "      case ""head"": { " \n "        _damageMultiplier = _damageMultiplierHead; " \n "        _upperLimit = _limitHead; " \n "      }; " \n "      case ""arms""; " \n "      case ""hands""; " \n "      case ""legs"": { " \n "        _damageMultiplier = _damageMultiplierLimbs; " \n "        _upperLimit = _limitLimbs; " \n "      }; " \n "      case """": { " \n "        _damageMultiplier = _damageMultiplierOverall; " \n "        _upperLimit = _limitOverall; " \n "      }; " \n "      default { " \n "        _damageMultiplier = _damageMultiplierBody; " \n "        _upperLimit = _limitBody; " \n "      }; " \n "    }; " \n "    _newDamage = _newDamage * _damageMultiplier; " \n "    if (_newDamage > _upperLimit) then { " \n "      _newDamage = _upperLimit; " \n "    }; " \n " " \n "    _damage = _oldDamage + _newDamage; " \n "  }; " \n " " \n "  if ( isPlayer _unit ) then { " \n "    if ( lifeState _unit == ""INCAPACITATED"" ) then { " \n "      _damage = _oldDamage; " \n "    } else { " \n "      _this set[ 2, _damage ]; " \n "      _damage = _this call bis_fnc_reviveEhHandleDamage; " \n "    }; " \n "  }; " \n "  _damage " \n "}]";
			};
			id=133;
			atlOffset=7.6293945e-006;
		};
		class Item47
		{
			dataType="Group";
			side="West";
			class Entities
			{
				items=1;
				class Item0
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={1263.764,51.349659,533.15509};
						angles[]={0,1.5916864,0};
					};
					side="West";
					flags=7;
					class Attributes
					{
						init="this addEventHandler [ ""HandleDamage"", { " \n "  params [""_unit"", ""_hitSelection"", ""_damage"",""_source"",""_projectile"",""_hitPartIndex"", ""_instigator"", ""_hitPoint""]; " \n " " \n "  private _damageMultiplierHead = 0.4; " \n "  private _damageMultiplierBody = 0.3; " \n "  private _damageMultiplierLimbs = 0.25; " \n "  private _damageMultiplierOverall = 0.25; " \n "  private _limitHead = 1.0; " \n "  private _limitBody = 0.25; " \n "  private _limitLimbs = 0.1; " \n "  private _limitOverall = 0.25; " \n "  private _oldDamage = 0; " \n "  if (_hitSelection isEqualTo """") then {_oldDamage = damage _unit} else {_oldDamage = _unit getHit _hitSelection}; " \n "  private _newDamage = _damage - _oldDamage max 0; " \n "  private _incomingDamage = _newDamage; " \n "  private _playerHealth = damage _unit; " \n " " \n "  if (_newDamage > 0 && !(_projectile isEqualTo """")) then { " \n "    private _damageMultiplier = _damageMultiplierBody; " \n "    private _upperLimit = _limitBody; " \n "    switch (_hitSelection) do { " \n "      case ""face_hub""; " \n "      case ""head"": { " \n "        _damageMultiplier = _damageMultiplierHead; " \n "        _upperLimit = _limitHead; " \n "      }; " \n "      case ""arms""; " \n "      case ""hands""; " \n "      case ""legs"": { " \n "        _damageMultiplier = _damageMultiplierLimbs; " \n "        _upperLimit = _limitLimbs; " \n "      }; " \n "      case """": { " \n "        _damageMultiplier = _damageMultiplierOverall; " \n "        _upperLimit = _limitOverall; " \n "      }; " \n "      default { " \n "        _damageMultiplier = _damageMultiplierBody; " \n "        _upperLimit = _limitBody; " \n "      }; " \n "    }; " \n "    _newDamage = _newDamage * _damageMultiplier; " \n "    if (_newDamage > _upperLimit) then { " \n "      _newDamage = _upperLimit; " \n "    }; " \n " " \n "    _damage = _oldDamage + _newDamage; " \n "  }; " \n " " \n "  if ( isPlayer _unit ) then { " \n "    if ( lifeState _unit == ""INCAPACITATED"" ) then { " \n "      _damage = _oldDamage; " \n "    } else { " \n "      _this set[ 2, _damage ]; " \n "      _damage = _this call bis_fnc_reviveEhHandleDamage; " \n "    }; " \n "  }; " \n "  _damage " \n "}]";
						isPlayable=1;
						class Inventory
						{
							class primaryWeapon
							{
								name="vn_m1carbine";
								class primaryMuzzleMag
								{
									name="vn_carbine_15_mag";
									ammoLeft=15;
								};
							};
							class secondaryWeapon
							{
								name="vn_m127";
								class primaryMuzzleMag
								{
									name="vn_m127_mag";
									ammoLeft=1;
								};
							};
							class handgun
							{
								name="vn_mx991";
							};
							class binocular
							{
								name="vn_m19_binocs_grey";
							};
							class uniform
							{
								typeName="vn_b_uniform_macv_01_02";
								isBackpack=0;
								class MagazineCargo
								{
									items=1;
									class Item0
									{
										name="vn_prop_food_fresh_01";
										count=24;
										ammoLeft=100;
									};
								};
								class ItemCargo
								{
									items=1;
									class Item0
									{
										name="vn_b_item_firstaidkit";
										count=8;
									};
								};
							};
							class vest
							{
								typeName="vn_b_vest_usarmy_03";
								isBackpack=0;
								class MagazineCargo
								{
									items=1;
									class Item0
									{
										name="vn_m61_grenade_mag";
										count=9;
										ammoLeft=1;
									};
								};
							};
							class backpack
							{
								typeName="vn_b_pack_03";
								isBackpack=1;
								class MagazineCargo
								{
									items=6;
									class Item0
									{
										name="vn_m129_mag";
										count=5;
										ammoLeft=1;
									};
									class Item1
									{
										name="vn_carbine_15_t_mag";
										count=12;
										ammoLeft=15;
									};
									class Item2
									{
										name="vn_m34_grenade_mag";
										count=1;
										ammoLeft=1;
									};
									class Item3
									{
										name="vn_m18_purple_mag";
										count=2;
										ammoLeft=1;
									};
									class Item4
									{
										name="vn_m18_red_mag";
										count=2;
										ammoLeft=1;
									};
									class Item5
									{
										name="vn_mine_m112_remote_mag";
										count=5;
										ammoLeft=1;
									};
								};
								class ItemCargo
								{
									items=2;
									class Item0
									{
										name="vn_b_item_firstaidkit";
										count=2;
									};
									class Item1
									{
										name="vn_b_item_trapkit";
										count=1;
									};
								};
							};
							map="vn_b_item_map";
							compass="vn_b_item_compass";
							watch="vn_b_item_watch";
							radio="vn_b_item_radio_urc10";
							headgear="vn_b_boonie_02_02";
						};
					};
					id=136;
					type="vn_b_men_sf_06";
					class CustomAttributes
					{
						class Attribute0
						{
							property="speaker";
							expression="_this setspeaker _value;";
							class Value
							{
								class data
								{
									singleType="STRING";
									value="Male02ENG";
								};
							};
						};
						class Attribute1
						{
							property="pitch";
							expression="_this setpitch _value;";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1.04;
								};
							};
						};
						class Attribute2
						{
							property="enableStamina";
							expression="_this enablestamina _value;";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=0;
								};
							};
						};
						nAttributes=3;
					};
				};
			};
			class Attributes
			{
				init="this addEventHandler [ ""HandleDamage"", { " \n "  params [""_unit"", ""_hitSelection"", ""_damage"",""_source"",""_projectile"",""_hitPartIndex"", ""_instigator"", ""_hitPoint""]; " \n " " \n "  private _damageMultiplierHead = 0.4; " \n "  private _damageMultiplierBody = 0.3; " \n "  private _damageMultiplierLimbs = 0.35; " \n "  private _damageMultiplierOverall = 0.3; " \n "  private _limitHead = 1.0; " \n "  private _limitBody = 0.25; " \n "  private _limitLimbs = 0.1; " \n "  private _limitOverall = 0.25; " \n "  private _oldDamage = 0; " \n "  if (_hitSelection isEqualTo """") then {_oldDamage = damage _unit} else {_oldDamage = _unit getHit _hitSelection}; " \n "  private _newDamage = _damage - _oldDamage max 0; " \n "  private _incomingDamage = _newDamage; " \n "  private _playerHealth = damage _unit; " \n " " \n "  if (_newDamage > 0 && !(_projectile isEqualTo """")) then { " \n "    private _damageMultiplier = _damageMultiplierBody; " \n "    private _upperLimit = _limitBody; " \n "    switch (_hitSelection) do { " \n "      case ""face_hub""; " \n "      case ""head"": { " \n "        _damageMultiplier = _damageMultiplierHead; " \n "        _upperLimit = _limitHead; " \n "      }; " \n "      case ""arms""; " \n "      case ""hands""; " \n "      case ""legs"": { " \n "        _damageMultiplier = _damageMultiplierLimbs; " \n "        _upperLimit = _limitLimbs; " \n "      }; " \n "      case """": { " \n "        _damageMultiplier = _damageMultiplierOverall; " \n "        _upperLimit = _limitOverall; " \n "      }; " \n "      default { " \n "        _damageMultiplier = _damageMultiplierBody; " \n "        _upperLimit = _limitBody; " \n "      }; " \n "    }; " \n "    _newDamage = _newDamage * _damageMultiplier; " \n "    if (_newDamage > _upperLimit) then { " \n "      _newDamage = _upperLimit; " \n "    }; " \n " " \n "    _damage = _oldDamage + _newDamage; " \n "  }; " \n " " \n "  if ( isPlayer _unit ) then { " \n "    if ( lifeState _unit == ""INCAPACITATED"" ) then { " \n "      _damage = _oldDamage; " \n "    } else { " \n "      _this set[ 2, _damage ]; " \n "      _damage = _this call bis_fnc_reviveEhHandleDamage; " \n "    }; " \n "  }; " \n "  _damage " \n "}]";
			};
			id=135;
		};
		class Item48
		{
			dataType="Group";
			side="West";
			class Entities
			{
				items=1;
				class Item0
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={1263.8304,51.311798,534.57452};
						angles[]={0,1.5916864,0};
					};
					side="West";
					flags=7;
					class Attributes
					{
						init="this addEventHandler [ ""HandleDamage"", { " \n "  params [""_unit"", ""_hitSelection"", ""_damage"",""_source"",""_projectile"",""_hitPartIndex"", ""_instigator"", ""_hitPoint""]; " \n " " \n "  private _damageMultiplierHead = 0.4; " \n "  private _damageMultiplierBody = 0.3; " \n "  private _damageMultiplierLimbs = 0.25; " \n "  private _damageMultiplierOverall = 0.25; " \n "  private _limitHead = 1.0; " \n "  private _limitBody = 0.25; " \n "  private _limitLimbs = 0.1; " \n "  private _limitOverall = 0.25; " \n "  private _oldDamage = 0; " \n "  if (_hitSelection isEqualTo """") then {_oldDamage = damage _unit} else {_oldDamage = _unit getHit _hitSelection}; " \n "  private _newDamage = _damage - _oldDamage max 0; " \n "  private _incomingDamage = _newDamage; " \n "  private _playerHealth = damage _unit; " \n " " \n "  if (_newDamage > 0 && !(_projectile isEqualTo """")) then { " \n "    private _damageMultiplier = _damageMultiplierBody; " \n "    private _upperLimit = _limitBody; " \n "    switch (_hitSelection) do { " \n "      case ""face_hub""; " \n "      case ""head"": { " \n "        _damageMultiplier = _damageMultiplierHead; " \n "        _upperLimit = _limitHead; " \n "      }; " \n "      case ""arms""; " \n "      case ""hands""; " \n "      case ""legs"": { " \n "        _damageMultiplier = _damageMultiplierLimbs; " \n "        _upperLimit = _limitLimbs; " \n "      }; " \n "      case """": { " \n "        _damageMultiplier = _damageMultiplierOverall; " \n "        _upperLimit = _limitOverall; " \n "      }; " \n "      default { " \n "        _damageMultiplier = _damageMultiplierBody; " \n "        _upperLimit = _limitBody; " \n "      }; " \n "    }; " \n "    _newDamage = _newDamage * _damageMultiplier; " \n "    if (_newDamage > _upperLimit) then { " \n "      _newDamage = _upperLimit; " \n "    }; " \n " " \n "    _damage = _oldDamage + _newDamage; " \n "  }; " \n " " \n "  if ( isPlayer _unit ) then { " \n "    if ( lifeState _unit == ""INCAPACITATED"" ) then { " \n "      _damage = _oldDamage; " \n "    } else { " \n "      _this set[ 2, _damage ]; " \n "      _damage = _this call bis_fnc_reviveEhHandleDamage; " \n "    }; " \n "  }; " \n "  _damage " \n "}]";
						isPlayable=1;
						class Inventory
						{
							class primaryWeapon
							{
								name="vn_m1carbine";
								class primaryMuzzleMag
								{
									name="vn_carbine_15_mag";
									ammoLeft=15;
								};
							};
							class secondaryWeapon
							{
								name="vn_m127";
								class primaryMuzzleMag
								{
									name="vn_m127_mag";
									ammoLeft=1;
								};
							};
							class handgun
							{
								name="vn_mx991";
							};
							class binocular
							{
								name="vn_m19_binocs_grey";
							};
							class uniform
							{
								typeName="vn_b_uniform_macv_01_02";
								isBackpack=0;
								class MagazineCargo
								{
									items=1;
									class Item0
									{
										name="vn_prop_food_fresh_01";
										count=24;
										ammoLeft=100;
									};
								};
								class ItemCargo
								{
									items=1;
									class Item0
									{
										name="vn_b_item_firstaidkit";
										count=8;
									};
								};
							};
							class vest
							{
								typeName="vn_b_vest_usarmy_03";
								isBackpack=0;
								class MagazineCargo
								{
									items=1;
									class Item0
									{
										name="vn_m61_grenade_mag";
										count=9;
										ammoLeft=1;
									};
								};
							};
							class backpack
							{
								typeName="vn_b_pack_03";
								isBackpack=1;
								class MagazineCargo
								{
									items=6;
									class Item0
									{
										name="vn_m129_mag";
										count=5;
										ammoLeft=1;
									};
									class Item1
									{
										name="vn_carbine_15_t_mag";
										count=12;
										ammoLeft=15;
									};
									class Item2
									{
										name="vn_m34_grenade_mag";
										count=1;
										ammoLeft=1;
									};
									class Item3
									{
										name="vn_m18_purple_mag";
										count=2;
										ammoLeft=1;
									};
									class Item4
									{
										name="vn_m18_red_mag";
										count=2;
										ammoLeft=1;
									};
									class Item5
									{
										name="vn_mine_m112_remote_mag";
										count=5;
										ammoLeft=1;
									};
								};
								class ItemCargo
								{
									items=2;
									class Item0
									{
										name="vn_b_item_firstaidkit";
										count=2;
									};
									class Item1
									{
										name="vn_b_item_trapkit";
										count=1;
									};
								};
							};
							map="vn_b_item_map";
							compass="vn_b_item_compass";
							watch="vn_b_item_watch";
							radio="vn_b_item_radio_urc10";
							headgear="vn_b_boonie_02_02";
						};
					};
					id=138;
					type="vn_b_men_sf_06";
					atlOffset=3.8146973e-006;
					class CustomAttributes
					{
						class Attribute0
						{
							property="speaker";
							expression="_this setspeaker _value;";
							class Value
							{
								class data
								{
									singleType="STRING";
									value="Male02ENG";
								};
							};
						};
						class Attribute1
						{
							property="pitch";
							expression="_this setpitch _value;";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1.04;
								};
							};
						};
						class Attribute2
						{
							property="enableStamina";
							expression="_this enablestamina _value;";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=0;
								};
							};
						};
						nAttributes=3;
					};
				};
			};
			class Attributes
			{
				init="this addEventHandler [ ""HandleDamage"", { " \n "  params [""_unit"", ""_hitSelection"", ""_damage"",""_source"",""_projectile"",""_hitPartIndex"", ""_instigator"", ""_hitPoint""]; " \n " " \n "  private _damageMultiplierHead = 0.4; " \n "  private _damageMultiplierBody = 0.3; " \n "  private _damageMultiplierLimbs = 0.35; " \n "  private _damageMultiplierOverall = 0.3; " \n "  private _limitHead = 1.0; " \n "  private _limitBody = 0.25; " \n "  private _limitLimbs = 0.1; " \n "  private _limitOverall = 0.25; " \n "  private _oldDamage = 0; " \n "  if (_hitSelection isEqualTo """") then {_oldDamage = damage _unit} else {_oldDamage = _unit getHit _hitSelection}; " \n "  private _newDamage = _damage - _oldDamage max 0; " \n "  private _incomingDamage = _newDamage; " \n "  private _playerHealth = damage _unit; " \n " " \n "  if (_newDamage > 0 && !(_projectile isEqualTo """")) then { " \n "    private _damageMultiplier = _damageMultiplierBody; " \n "    private _upperLimit = _limitBody; " \n "    switch (_hitSelection) do { " \n "      case ""face_hub""; " \n "      case ""head"": { " \n "        _damageMultiplier = _damageMultiplierHead; " \n "        _upperLimit = _limitHead; " \n "      }; " \n "      case ""arms""; " \n "      case ""hands""; " \n "      case ""legs"": { " \n "        _damageMultiplier = _damageMultiplierLimbs; " \n "        _upperLimit = _limitLimbs; " \n "      }; " \n "      case """": { " \n "        _damageMultiplier = _damageMultiplierOverall; " \n "        _upperLimit = _limitOverall; " \n "      }; " \n "      default { " \n "        _damageMultiplier = _damageMultiplierBody; " \n "        _upperLimit = _limitBody; " \n "      }; " \n "    }; " \n "    _newDamage = _newDamage * _damageMultiplier; " \n "    if (_newDamage > _upperLimit) then { " \n "      _newDamage = _upperLimit; " \n "    }; " \n " " \n "    _damage = _oldDamage + _newDamage; " \n "  }; " \n " " \n "  if ( isPlayer _unit ) then { " \n "    if ( lifeState _unit == ""INCAPACITATED"" ) then { " \n "      _damage = _oldDamage; " \n "    } else { " \n "      _this set[ 2, _damage ]; " \n "      _damage = _this call bis_fnc_reviveEhHandleDamage; " \n "    }; " \n "  }; " \n "  _damage " \n "}]";
			};
			id=137;
			atlOffset=3.8146973e-006;
		};
		class Item49
		{
			dataType="Group";
			side="West";
			class Entities
			{
				items=1;
				class Item0
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={1263.8969,51.282856,535.99493};
						angles[]={0,1.5916864,0};
					};
					side="West";
					flags=7;
					class Attributes
					{
						init="this addEventHandler [ ""HandleDamage"", { " \n "  params [""_unit"", ""_hitSelection"", ""_damage"",""_source"",""_projectile"",""_hitPartIndex"", ""_instigator"", ""_hitPoint""]; " \n " " \n "  private _damageMultiplierHead = 0.4; " \n "  private _damageMultiplierBody = 0.3; " \n "  private _damageMultiplierLimbs = 0.25; " \n "  private _damageMultiplierOverall = 0.25; " \n "  private _limitHead = 1.0; " \n "  private _limitBody = 0.25; " \n "  private _limitLimbs = 0.1; " \n "  private _limitOverall = 0.25; " \n "  private _oldDamage = 0; " \n "  if (_hitSelection isEqualTo """") then {_oldDamage = damage _unit} else {_oldDamage = _unit getHit _hitSelection}; " \n "  private _newDamage = _damage - _oldDamage max 0; " \n "  private _incomingDamage = _newDamage; " \n "  private _playerHealth = damage _unit; " \n " " \n "  if (_newDamage > 0 && !(_projectile isEqualTo """")) then { " \n "    private _damageMultiplier = _damageMultiplierBody; " \n "    private _upperLimit = _limitBody; " \n "    switch (_hitSelection) do { " \n "      case ""face_hub""; " \n "      case ""head"": { " \n "        _damageMultiplier = _damageMultiplierHead; " \n "        _upperLimit = _limitHead; " \n "      }; " \n "      case ""arms""; " \n "      case ""hands""; " \n "      case ""legs"": { " \n "        _damageMultiplier = _damageMultiplierLimbs; " \n "        _upperLimit = _limitLimbs; " \n "      }; " \n "      case """": { " \n "        _damageMultiplier = _damageMultiplierOverall; " \n "        _upperLimit = _limitOverall; " \n "      }; " \n "      default { " \n "        _damageMultiplier = _damageMultiplierBody; " \n "        _upperLimit = _limitBody; " \n "      }; " \n "    }; " \n "    _newDamage = _newDamage * _damageMultiplier; " \n "    if (_newDamage > _upperLimit) then { " \n "      _newDamage = _upperLimit; " \n "    }; " \n " " \n "    _damage = _oldDamage + _newDamage; " \n "  }; " \n " " \n "  if ( isPlayer _unit ) then { " \n "    if ( lifeState _unit == ""INCAPACITATED"" ) then { " \n "      _damage = _oldDamage; " \n "    } else { " \n "      _this set[ 2, _damage ]; " \n "      _damage = _this call bis_fnc_reviveEhHandleDamage; " \n "    }; " \n "  }; " \n "  _damage " \n "}]";
						isPlayable=1;
						class Inventory
						{
							class primaryWeapon
							{
								name="vn_m1carbine";
								class primaryMuzzleMag
								{
									name="vn_carbine_15_mag";
									ammoLeft=15;
								};
							};
							class secondaryWeapon
							{
								name="vn_m127";
								class primaryMuzzleMag
								{
									name="vn_m127_mag";
									ammoLeft=1;
								};
							};
							class handgun
							{
								name="vn_mx991";
							};
							class binocular
							{
								name="vn_m19_binocs_grey";
							};
							class uniform
							{
								typeName="vn_b_uniform_macv_01_02";
								isBackpack=0;
								class MagazineCargo
								{
									items=1;
									class Item0
									{
										name="vn_prop_food_fresh_01";
										count=24;
										ammoLeft=100;
									};
								};
								class ItemCargo
								{
									items=1;
									class Item0
									{
										name="vn_b_item_firstaidkit";
										count=8;
									};
								};
							};
							class vest
							{
								typeName="vn_b_vest_usarmy_03";
								isBackpack=0;
								class MagazineCargo
								{
									items=1;
									class Item0
									{
										name="vn_m61_grenade_mag";
										count=9;
										ammoLeft=1;
									};
								};
							};
							class backpack
							{
								typeName="vn_b_pack_03";
								isBackpack=1;
								class MagazineCargo
								{
									items=6;
									class Item0
									{
										name="vn_m129_mag";
										count=5;
										ammoLeft=1;
									};
									class Item1
									{
										name="vn_carbine_15_t_mag";
										count=12;
										ammoLeft=15;
									};
									class Item2
									{
										name="vn_m34_grenade_mag";
										count=1;
										ammoLeft=1;
									};
									class Item3
									{
										name="vn_m18_purple_mag";
										count=2;
										ammoLeft=1;
									};
									class Item4
									{
										name="vn_m18_red_mag";
										count=2;
										ammoLeft=1;
									};
									class Item5
									{
										name="vn_mine_m112_remote_mag";
										count=5;
										ammoLeft=1;
									};
								};
								class ItemCargo
								{
									items=2;
									class Item0
									{
										name="vn_b_item_firstaidkit";
										count=2;
									};
									class Item1
									{
										name="vn_b_item_trapkit";
										count=1;
									};
								};
							};
							map="vn_b_item_map";
							compass="vn_b_item_compass";
							watch="vn_b_item_watch";
							radio="vn_b_item_radio_urc10";
							headgear="vn_b_boonie_02_02";
						};
					};
					id=140;
					type="vn_b_men_sf_06";
					class CustomAttributes
					{
						class Attribute0
						{
							property="speaker";
							expression="_this setspeaker _value;";
							class Value
							{
								class data
								{
									singleType="STRING";
									value="Male02ENG";
								};
							};
						};
						class Attribute1
						{
							property="pitch";
							expression="_this setpitch _value;";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1.04;
								};
							};
						};
						class Attribute2
						{
							property="enableStamina";
							expression="_this enablestamina _value;";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=0;
								};
							};
						};
						nAttributes=3;
					};
				};
			};
			class Attributes
			{
				init="this addEventHandler [ ""HandleDamage"", { " \n "  params [""_unit"", ""_hitSelection"", ""_damage"",""_source"",""_projectile"",""_hitPartIndex"", ""_instigator"", ""_hitPoint""]; " \n " " \n "  private _damageMultiplierHead = 0.4; " \n "  private _damageMultiplierBody = 0.3; " \n "  private _damageMultiplierLimbs = 0.35; " \n "  private _damageMultiplierOverall = 0.3; " \n "  private _limitHead = 1.0; " \n "  private _limitBody = 0.25; " \n "  private _limitLimbs = 0.1; " \n "  private _limitOverall = 0.25; " \n "  private _oldDamage = 0; " \n "  if (_hitSelection isEqualTo """") then {_oldDamage = damage _unit} else {_oldDamage = _unit getHit _hitSelection}; " \n "  private _newDamage = _damage - _oldDamage max 0; " \n "  private _incomingDamage = _newDamage; " \n "  private _playerHealth = damage _unit; " \n " " \n "  if (_newDamage > 0 && !(_projectile isEqualTo """")) then { " \n "    private _damageMultiplier = _damageMultiplierBody; " \n "    private _upperLimit = _limitBody; " \n "    switch (_hitSelection) do { " \n "      case ""face_hub""; " \n "      case ""head"": { " \n "        _damageMultiplier = _damageMultiplierHead; " \n "        _upperLimit = _limitHead; " \n "      }; " \n "      case ""arms""; " \n "      case ""hands""; " \n "      case ""legs"": { " \n "        _damageMultiplier = _damageMultiplierLimbs; " \n "        _upperLimit = _limitLimbs; " \n "      }; " \n "      case """": { " \n "        _damageMultiplier = _damageMultiplierOverall; " \n "        _upperLimit = _limitOverall; " \n "      }; " \n "      default { " \n "        _damageMultiplier = _damageMultiplierBody; " \n "        _upperLimit = _limitBody; " \n "      }; " \n "    }; " \n "    _newDamage = _newDamage * _damageMultiplier; " \n "    if (_newDamage > _upperLimit) then { " \n "      _newDamage = _upperLimit; " \n "    }; " \n " " \n "    _damage = _oldDamage + _newDamage; " \n "  }; " \n " " \n "  if ( isPlayer _unit ) then { " \n "    if ( lifeState _unit == ""INCAPACITATED"" ) then { " \n "      _damage = _oldDamage; " \n "    } else { " \n "      _this set[ 2, _damage ]; " \n "      _damage = _this call bis_fnc_reviveEhHandleDamage; " \n "    }; " \n "  }; " \n "  _damage " \n "}]";
			};
			id=139;
		};
		class Item50
		{
			dataType="Group";
			side="West";
			class Entities
			{
				items=1;
				class Item0
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={1264.0248,51.260899,537.37677};
						angles[]={0,1.5916864,0};
					};
					side="West";
					flags=7;
					class Attributes
					{
						init="this addEventHandler [ ""HandleDamage"", { " \n "  params [""_unit"", ""_hitSelection"", ""_damage"",""_source"",""_projectile"",""_hitPartIndex"", ""_instigator"", ""_hitPoint""]; " \n " " \n "  private _damageMultiplierHead = 0.4; " \n "  private _damageMultiplierBody = 0.3; " \n "  private _damageMultiplierLimbs = 0.25; " \n "  private _damageMultiplierOverall = 0.25; " \n "  private _limitHead = 1.0; " \n "  private _limitBody = 0.25; " \n "  private _limitLimbs = 0.1; " \n "  private _limitOverall = 0.25; " \n "  private _oldDamage = 0; " \n "  if (_hitSelection isEqualTo """") then {_oldDamage = damage _unit} else {_oldDamage = _unit getHit _hitSelection}; " \n "  private _newDamage = _damage - _oldDamage max 0; " \n "  private _incomingDamage = _newDamage; " \n "  private _playerHealth = damage _unit; " \n " " \n "  if (_newDamage > 0 && !(_projectile isEqualTo """")) then { " \n "    private _damageMultiplier = _damageMultiplierBody; " \n "    private _upperLimit = _limitBody; " \n "    switch (_hitSelection) do { " \n "      case ""face_hub""; " \n "      case ""head"": { " \n "        _damageMultiplier = _damageMultiplierHead; " \n "        _upperLimit = _limitHead; " \n "      }; " \n "      case ""arms""; " \n "      case ""hands""; " \n "      case ""legs"": { " \n "        _damageMultiplier = _damageMultiplierLimbs; " \n "        _upperLimit = _limitLimbs; " \n "      }; " \n "      case """": { " \n "        _damageMultiplier = _damageMultiplierOverall; " \n "        _upperLimit = _limitOverall; " \n "      }; " \n "      default { " \n "        _damageMultiplier = _damageMultiplierBody; " \n "        _upperLimit = _limitBody; " \n "      }; " \n "    }; " \n "    _newDamage = _newDamage * _damageMultiplier; " \n "    if (_newDamage > _upperLimit) then { " \n "      _newDamage = _upperLimit; " \n "    }; " \n " " \n "    _damage = _oldDamage + _newDamage; " \n "  }; " \n " " \n "  if ( isPlayer _unit ) then { " \n "    if ( lifeState _unit == ""INCAPACITATED"" ) then { " \n "      _damage = _oldDamage; " \n "    } else { " \n "      _this set[ 2, _damage ]; " \n "      _damage = _this call bis_fnc_reviveEhHandleDamage; " \n "    }; " \n "  }; " \n "  _damage " \n "}]";
						isPlayable=1;
						class Inventory
						{
							class primaryWeapon
							{
								name="vn_m1carbine";
								class primaryMuzzleMag
								{
									name="vn_carbine_15_mag";
									ammoLeft=15;
								};
							};
							class secondaryWeapon
							{
								name="vn_m127";
								class primaryMuzzleMag
								{
									name="vn_m127_mag";
									ammoLeft=1;
								};
							};
							class handgun
							{
								name="vn_mx991";
							};
							class binocular
							{
								name="vn_m19_binocs_grey";
							};
							class uniform
							{
								typeName="vn_b_uniform_macv_01_02";
								isBackpack=0;
								class MagazineCargo
								{
									items=1;
									class Item0
									{
										name="vn_prop_food_fresh_01";
										count=24;
										ammoLeft=100;
									};
								};
								class ItemCargo
								{
									items=1;
									class Item0
									{
										name="vn_b_item_firstaidkit";
										count=8;
									};
								};
							};
							class vest
							{
								typeName="vn_b_vest_usarmy_03";
								isBackpack=0;
								class MagazineCargo
								{
									items=1;
									class Item0
									{
										name="vn_m61_grenade_mag";
										count=9;
										ammoLeft=1;
									};
								};
							};
							class backpack
							{
								typeName="vn_b_pack_03";
								isBackpack=1;
								class MagazineCargo
								{
									items=6;
									class Item0
									{
										name="vn_m129_mag";
										count=5;
										ammoLeft=1;
									};
									class Item1
									{
										name="vn_carbine_15_t_mag";
										count=12;
										ammoLeft=15;
									};
									class Item2
									{
										name="vn_m34_grenade_mag";
										count=1;
										ammoLeft=1;
									};
									class Item3
									{
										name="vn_m18_purple_mag";
										count=2;
										ammoLeft=1;
									};
									class Item4
									{
										name="vn_m18_red_mag";
										count=2;
										ammoLeft=1;
									};
									class Item5
									{
										name="vn_mine_m112_remote_mag";
										count=5;
										ammoLeft=1;
									};
								};
								class ItemCargo
								{
									items=2;
									class Item0
									{
										name="vn_b_item_firstaidkit";
										count=2;
									};
									class Item1
									{
										name="vn_b_item_trapkit";
										count=1;
									};
								};
							};
							map="vn_b_item_map";
							compass="vn_b_item_compass";
							watch="vn_b_item_watch";
							radio="vn_b_item_radio_urc10";
							headgear="vn_b_boonie_02_02";
						};
					};
					id=142;
					type="vn_b_men_sf_06";
					class CustomAttributes
					{
						class Attribute0
						{
							property="speaker";
							expression="_this setspeaker _value;";
							class Value
							{
								class data
								{
									singleType="STRING";
									value="Male02ENG";
								};
							};
						};
						class Attribute1
						{
							property="pitch";
							expression="_this setpitch _value;";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1.04;
								};
							};
						};
						class Attribute2
						{
							property="enableStamina";
							expression="_this enablestamina _value;";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=0;
								};
							};
						};
						nAttributes=3;
					};
				};
			};
			class Attributes
			{
				init="this addEventHandler [ ""HandleDamage"", { " \n "  params [""_unit"", ""_hitSelection"", ""_damage"",""_source"",""_projectile"",""_hitPartIndex"", ""_instigator"", ""_hitPoint""]; " \n " " \n "  private _damageMultiplierHead = 0.4; " \n "  private _damageMultiplierBody = 0.3; " \n "  private _damageMultiplierLimbs = 0.35; " \n "  private _damageMultiplierOverall = 0.3; " \n "  private _limitHead = 1.0; " \n "  private _limitBody = 0.25; " \n "  private _limitLimbs = 0.1; " \n "  private _limitOverall = 0.25; " \n "  private _oldDamage = 0; " \n "  if (_hitSelection isEqualTo """") then {_oldDamage = damage _unit} else {_oldDamage = _unit getHit _hitSelection}; " \n "  private _newDamage = _damage - _oldDamage max 0; " \n "  private _incomingDamage = _newDamage; " \n "  private _playerHealth = damage _unit; " \n " " \n "  if (_newDamage > 0 && !(_projectile isEqualTo """")) then { " \n "    private _damageMultiplier = _damageMultiplierBody; " \n "    private _upperLimit = _limitBody; " \n "    switch (_hitSelection) do { " \n "      case ""face_hub""; " \n "      case ""head"": { " \n "        _damageMultiplier = _damageMultiplierHead; " \n "        _upperLimit = _limitHead; " \n "      }; " \n "      case ""arms""; " \n "      case ""hands""; " \n "      case ""legs"": { " \n "        _damageMultiplier = _damageMultiplierLimbs; " \n "        _upperLimit = _limitLimbs; " \n "      }; " \n "      case """": { " \n "        _damageMultiplier = _damageMultiplierOverall; " \n "        _upperLimit = _limitOverall; " \n "      }; " \n "      default { " \n "        _damageMultiplier = _damageMultiplierBody; " \n "        _upperLimit = _limitBody; " \n "      }; " \n "    }; " \n "    _newDamage = _newDamage * _damageMultiplier; " \n "    if (_newDamage > _upperLimit) then { " \n "      _newDamage = _upperLimit; " \n "    }; " \n " " \n "    _damage = _oldDamage + _newDamage; " \n "  }; " \n " " \n "  if ( isPlayer _unit ) then { " \n "    if ( lifeState _unit == ""INCAPACITATED"" ) then { " \n "      _damage = _oldDamage; " \n "    } else { " \n "      _this set[ 2, _damage ]; " \n "      _damage = _this call bis_fnc_reviveEhHandleDamage; " \n "    }; " \n "  }; " \n "  _damage " \n "}]";
			};
			id=141;
		};
		class Item51
		{
			dataType="Group";
			side="West";
			class Entities
			{
				items=1;
				class Item0
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={1264.0463,51.24321,538.51935};
						angles[]={0,1.5916864,0};
					};
					side="West";
					flags=7;
					class Attributes
					{
						init="this addEventHandler [ ""HandleDamage"", { " \n "  params [""_unit"", ""_hitSelection"", ""_damage"",""_source"",""_projectile"",""_hitPartIndex"", ""_instigator"", ""_hitPoint""]; " \n " " \n "  private _damageMultiplierHead = 0.4; " \n "  private _damageMultiplierBody = 0.3; " \n "  private _damageMultiplierLimbs = 0.25; " \n "  private _damageMultiplierOverall = 0.25; " \n "  private _limitHead = 1.0; " \n "  private _limitBody = 0.25; " \n "  private _limitLimbs = 0.1; " \n "  private _limitOverall = 0.25; " \n "  private _oldDamage = 0; " \n "  if (_hitSelection isEqualTo """") then {_oldDamage = damage _unit} else {_oldDamage = _unit getHit _hitSelection}; " \n "  private _newDamage = _damage - _oldDamage max 0; " \n "  private _incomingDamage = _newDamage; " \n "  private _playerHealth = damage _unit; " \n " " \n "  if (_newDamage > 0 && !(_projectile isEqualTo """")) then { " \n "    private _damageMultiplier = _damageMultiplierBody; " \n "    private _upperLimit = _limitBody; " \n "    switch (_hitSelection) do { " \n "      case ""face_hub""; " \n "      case ""head"": { " \n "        _damageMultiplier = _damageMultiplierHead; " \n "        _upperLimit = _limitHead; " \n "      }; " \n "      case ""arms""; " \n "      case ""hands""; " \n "      case ""legs"": { " \n "        _damageMultiplier = _damageMultiplierLimbs; " \n "        _upperLimit = _limitLimbs; " \n "      }; " \n "      case """": { " \n "        _damageMultiplier = _damageMultiplierOverall; " \n "        _upperLimit = _limitOverall; " \n "      }; " \n "      default { " \n "        _damageMultiplier = _damageMultiplierBody; " \n "        _upperLimit = _limitBody; " \n "      }; " \n "    }; " \n "    _newDamage = _newDamage * _damageMultiplier; " \n "    if (_newDamage > _upperLimit) then { " \n "      _newDamage = _upperLimit; " \n "    }; " \n " " \n "    _damage = _oldDamage + _newDamage; " \n "  }; " \n " " \n "  if ( isPlayer _unit ) then { " \n "    if ( lifeState _unit == ""INCAPACITATED"" ) then { " \n "      _damage = _oldDamage; " \n "    } else { " \n "      _this set[ 2, _damage ]; " \n "      _damage = _this call bis_fnc_reviveEhHandleDamage; " \n "    }; " \n "  }; " \n "  _damage " \n "}]";
						isPlayable=1;
						class Inventory
						{
							class primaryWeapon
							{
								name="vn_m1carbine";
								class primaryMuzzleMag
								{
									name="vn_carbine_15_mag";
									ammoLeft=15;
								};
							};
							class secondaryWeapon
							{
								name="vn_m127";
								class primaryMuzzleMag
								{
									name="vn_m127_mag";
									ammoLeft=1;
								};
							};
							class handgun
							{
								name="vn_mx991";
							};
							class binocular
							{
								name="vn_m19_binocs_grey";
							};
							class uniform
							{
								typeName="vn_b_uniform_macv_01_02";
								isBackpack=0;
								class MagazineCargo
								{
									items=1;
									class Item0
									{
										name="vn_prop_food_fresh_01";
										count=24;
										ammoLeft=100;
									};
								};
								class ItemCargo
								{
									items=1;
									class Item0
									{
										name="vn_b_item_firstaidkit";
										count=8;
									};
								};
							};
							class vest
							{
								typeName="vn_b_vest_usarmy_03";
								isBackpack=0;
								class MagazineCargo
								{
									items=1;
									class Item0
									{
										name="vn_m61_grenade_mag";
										count=9;
										ammoLeft=1;
									};
								};
							};
							class backpack
							{
								typeName="vn_b_pack_03";
								isBackpack=1;
								class MagazineCargo
								{
									items=6;
									class Item0
									{
										name="vn_m129_mag";
										count=5;
										ammoLeft=1;
									};
									class Item1
									{
										name="vn_carbine_15_t_mag";
										count=12;
										ammoLeft=15;
									};
									class Item2
									{
										name="vn_m34_grenade_mag";
										count=1;
										ammoLeft=1;
									};
									class Item3
									{
										name="vn_m18_purple_mag";
										count=2;
										ammoLeft=1;
									};
									class Item4
									{
										name="vn_m18_red_mag";
										count=2;
										ammoLeft=1;
									};
									class Item5
									{
										name="vn_mine_m112_remote_mag";
										count=5;
										ammoLeft=1;
									};
								};
								class ItemCargo
								{
									items=2;
									class Item0
									{
										name="vn_b_item_firstaidkit";
										count=2;
									};
									class Item1
									{
										name="vn_b_item_trapkit";
										count=1;
									};
								};
							};
							map="vn_b_item_map";
							compass="vn_b_item_compass";
							watch="vn_b_item_watch";
							radio="vn_b_item_radio_urc10";
							headgear="vn_b_boonie_02_02";
						};
					};
					id=144;
					type="vn_b_men_sf_06";
					class CustomAttributes
					{
						class Attribute0
						{
							property="speaker";
							expression="_this setspeaker _value;";
							class Value
							{
								class data
								{
									singleType="STRING";
									value="Male02ENG";
								};
							};
						};
						class Attribute1
						{
							property="pitch";
							expression="_this setpitch _value;";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1.04;
								};
							};
						};
						class Attribute2
						{
							property="enableStamina";
							expression="_this enablestamina _value;";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=0;
								};
							};
						};
						nAttributes=3;
					};
				};
			};
			class Attributes
			{
				init="this addEventHandler [ ""HandleDamage"", { " \n "  params [""_unit"", ""_hitSelection"", ""_damage"",""_source"",""_projectile"",""_hitPartIndex"", ""_instigator"", ""_hitPoint""]; " \n " " \n "  private _damageMultiplierHead = 0.4; " \n "  private _damageMultiplierBody = 0.3; " \n "  private _damageMultiplierLimbs = 0.35; " \n "  private _damageMultiplierOverall = 0.3; " \n "  private _limitHead = 1.0; " \n "  private _limitBody = 0.25; " \n "  private _limitLimbs = 0.1; " \n "  private _limitOverall = 0.25; " \n "  private _oldDamage = 0; " \n "  if (_hitSelection isEqualTo """") then {_oldDamage = damage _unit} else {_oldDamage = _unit getHit _hitSelection}; " \n "  private _newDamage = _damage - _oldDamage max 0; " \n "  private _incomingDamage = _newDamage; " \n "  private _playerHealth = damage _unit; " \n " " \n "  if (_newDamage > 0 && !(_projectile isEqualTo """")) then { " \n "    private _damageMultiplier = _damageMultiplierBody; " \n "    private _upperLimit = _limitBody; " \n "    switch (_hitSelection) do { " \n "      case ""face_hub""; " \n "      case ""head"": { " \n "        _damageMultiplier = _damageMultiplierHead; " \n "        _upperLimit = _limitHead; " \n "      }; " \n "      case ""arms""; " \n "      case ""hands""; " \n "      case ""legs"": { " \n "        _damageMultiplier = _damageMultiplierLimbs; " \n "        _upperLimit = _limitLimbs; " \n "      }; " \n "      case """": { " \n "        _damageMultiplier = _damageMultiplierOverall; " \n "        _upperLimit = _limitOverall; " \n "      }; " \n "      default { " \n "        _damageMultiplier = _damageMultiplierBody; " \n "        _upperLimit = _limitBody; " \n "      }; " \n "    }; " \n "    _newDamage = _newDamage * _damageMultiplier; " \n "    if (_newDamage > _upperLimit) then { " \n "      _newDamage = _upperLimit; " \n "    }; " \n " " \n "    _damage = _oldDamage + _newDamage; " \n "  }; " \n " " \n "  if ( isPlayer _unit ) then { " \n "    if ( lifeState _unit == ""INCAPACITATED"" ) then { " \n "      _damage = _oldDamage; " \n "    } else { " \n "      _this set[ 2, _damage ]; " \n "      _damage = _this call bis_fnc_reviveEhHandleDamage; " \n "    }; " \n "  }; " \n "  _damage " \n "}]";
			};
			id=143;
		};
		class Item52
		{
			dataType="Group";
			side="West";
			class Entities
			{
				items=1;
				class Item0
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={1265.1996,51.687153,526.63995};
						angles[]={0,1.5916864,0};
					};
					side="West";
					flags=7;
					class Attributes
					{
						init="this addEventHandler [ ""HandleDamage"", { " \n "  params [""_unit"", ""_hitSelection"", ""_damage"",""_source"",""_projectile"",""_hitPartIndex"", ""_instigator"", ""_hitPoint""]; " \n " " \n "  private _damageMultiplierHead = 0.4; " \n "  private _damageMultiplierBody = 0.3; " \n "  private _damageMultiplierLimbs = 0.25; " \n "  private _damageMultiplierOverall = 0.25; " \n "  private _limitHead = 1.0; " \n "  private _limitBody = 0.25; " \n "  private _limitLimbs = 0.1; " \n "  private _limitOverall = 0.25; " \n "  private _oldDamage = 0; " \n "  if (_hitSelection isEqualTo """") then {_oldDamage = damage _unit} else {_oldDamage = _unit getHit _hitSelection}; " \n "  private _newDamage = _damage - _oldDamage max 0; " \n "  private _incomingDamage = _newDamage; " \n "  private _playerHealth = damage _unit; " \n " " \n "  if (_newDamage > 0 && !(_projectile isEqualTo """")) then { " \n "    private _damageMultiplier = _damageMultiplierBody; " \n "    private _upperLimit = _limitBody; " \n "    switch (_hitSelection) do { " \n "      case ""face_hub""; " \n "      case ""head"": { " \n "        _damageMultiplier = _damageMultiplierHead; " \n "        _upperLimit = _limitHead; " \n "      }; " \n "      case ""arms""; " \n "      case ""hands""; " \n "      case ""legs"": { " \n "        _damageMultiplier = _damageMultiplierLimbs; " \n "        _upperLimit = _limitLimbs; " \n "      }; " \n "      case """": { " \n "        _damageMultiplier = _damageMultiplierOverall; " \n "        _upperLimit = _limitOverall; " \n "      }; " \n "      default { " \n "        _damageMultiplier = _damageMultiplierBody; " \n "        _upperLimit = _limitBody; " \n "      }; " \n "    }; " \n "    _newDamage = _newDamage * _damageMultiplier; " \n "    if (_newDamage > _upperLimit) then { " \n "      _newDamage = _upperLimit; " \n "    }; " \n " " \n "    _damage = _oldDamage + _newDamage; " \n "  }; " \n " " \n "  if ( isPlayer _unit ) then { " \n "    if ( lifeState _unit == ""INCAPACITATED"" ) then { " \n "      _damage = _oldDamage; " \n "    } else { " \n "      _this set[ 2, _damage ]; " \n "      _damage = _this call bis_fnc_reviveEhHandleDamage; " \n "    }; " \n "  }; " \n "  _damage " \n "}]";
						isPlayable=1;
						class Inventory
						{
							class primaryWeapon
							{
								name="vn_m1carbine";
								class primaryMuzzleMag
								{
									name="vn_carbine_15_mag";
									ammoLeft=15;
								};
							};
							class secondaryWeapon
							{
								name="vn_m127";
								class primaryMuzzleMag
								{
									name="vn_m127_mag";
									ammoLeft=1;
								};
							};
							class handgun
							{
								name="vn_mx991";
							};
							class binocular
							{
								name="vn_m19_binocs_grey";
							};
							class uniform
							{
								typeName="vn_b_uniform_macv_01_02";
								isBackpack=0;
								class MagazineCargo
								{
									items=1;
									class Item0
									{
										name="vn_prop_food_fresh_01";
										count=24;
										ammoLeft=100;
									};
								};
								class ItemCargo
								{
									items=1;
									class Item0
									{
										name="vn_b_item_firstaidkit";
										count=8;
									};
								};
							};
							class vest
							{
								typeName="vn_b_vest_usarmy_03";
								isBackpack=0;
								class MagazineCargo
								{
									items=1;
									class Item0
									{
										name="vn_m61_grenade_mag";
										count=9;
										ammoLeft=1;
									};
								};
							};
							class backpack
							{
								typeName="vn_b_pack_03";
								isBackpack=1;
								class MagazineCargo
								{
									items=6;
									class Item0
									{
										name="vn_m129_mag";
										count=5;
										ammoLeft=1;
									};
									class Item1
									{
										name="vn_carbine_15_t_mag";
										count=12;
										ammoLeft=15;
									};
									class Item2
									{
										name="vn_m34_grenade_mag";
										count=1;
										ammoLeft=1;
									};
									class Item3
									{
										name="vn_m18_purple_mag";
										count=2;
										ammoLeft=1;
									};
									class Item4
									{
										name="vn_m18_red_mag";
										count=2;
										ammoLeft=1;
									};
									class Item5
									{
										name="vn_mine_m112_remote_mag";
										count=5;
										ammoLeft=1;
									};
								};
								class ItemCargo
								{
									items=2;
									class Item0
									{
										name="vn_b_item_firstaidkit";
										count=2;
									};
									class Item1
									{
										name="vn_b_item_trapkit";
										count=1;
									};
								};
							};
							map="vn_b_item_map";
							compass="vn_b_item_compass";
							watch="vn_b_item_watch";
							radio="vn_b_item_radio_urc10";
							headgear="vn_b_boonie_02_02";
						};
					};
					id=146;
					type="vn_b_men_sf_06";
					atlOffset=3.8146973e-006;
					class CustomAttributes
					{
						class Attribute0
						{
							property="speaker";
							expression="_this setspeaker _value;";
							class Value
							{
								class data
								{
									singleType="STRING";
									value="Male02ENG";
								};
							};
						};
						class Attribute1
						{
							property="pitch";
							expression="_this setpitch _value;";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1.04;
								};
							};
						};
						class Attribute2
						{
							property="enableStamina";
							expression="_this enablestamina _value;";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=0;
								};
							};
						};
						nAttributes=3;
					};
				};
			};
			class Attributes
			{
				init="this addEventHandler [ ""HandleDamage"", { " \n "  params [""_unit"", ""_hitSelection"", ""_damage"",""_source"",""_projectile"",""_hitPartIndex"", ""_instigator"", ""_hitPoint""]; " \n " " \n "  private _damageMultiplierHead = 0.4; " \n "  private _damageMultiplierBody = 0.3; " \n "  private _damageMultiplierLimbs = 0.35; " \n "  private _damageMultiplierOverall = 0.3; " \n "  private _limitHead = 1.0; " \n "  private _limitBody = 0.25; " \n "  private _limitLimbs = 0.1; " \n "  private _limitOverall = 0.25; " \n "  private _oldDamage = 0; " \n "  if (_hitSelection isEqualTo """") then {_oldDamage = damage _unit} else {_oldDamage = _unit getHit _hitSelection}; " \n "  private _newDamage = _damage - _oldDamage max 0; " \n "  private _incomingDamage = _newDamage; " \n "  private _playerHealth = damage _unit; " \n " " \n "  if (_newDamage > 0 && !(_projectile isEqualTo """")) then { " \n "    private _damageMultiplier = _damageMultiplierBody; " \n "    private _upperLimit = _limitBody; " \n "    switch (_hitSelection) do { " \n "      case ""face_hub""; " \n "      case ""head"": { " \n "        _damageMultiplier = _damageMultiplierHead; " \n "        _upperLimit = _limitHead; " \n "      }; " \n "      case ""arms""; " \n "      case ""hands""; " \n "      case ""legs"": { " \n "        _damageMultiplier = _damageMultiplierLimbs; " \n "        _upperLimit = _limitLimbs; " \n "      }; " \n "      case """": { " \n "        _damageMultiplier = _damageMultiplierOverall; " \n "        _upperLimit = _limitOverall; " \n "      }; " \n "      default { " \n "        _damageMultiplier = _damageMultiplierBody; " \n "        _upperLimit = _limitBody; " \n "      }; " \n "    }; " \n "    _newDamage = _newDamage * _damageMultiplier; " \n "    if (_newDamage > _upperLimit) then { " \n "      _newDamage = _upperLimit; " \n "    }; " \n " " \n "    _damage = _oldDamage + _newDamage; " \n "  }; " \n " " \n "  if ( isPlayer _unit ) then { " \n "    if ( lifeState _unit == ""INCAPACITATED"" ) then { " \n "      _damage = _oldDamage; " \n "    } else { " \n "      _this set[ 2, _damage ]; " \n "      _damage = _this call bis_fnc_reviveEhHandleDamage; " \n "    }; " \n "  }; " \n "  _damage " \n "}]";
			};
			id=145;
			atlOffset=3.8146973e-006;
		};
		class Item53
		{
			dataType="Group";
			side="West";
			class Entities
			{
				items=1;
				class Item0
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={1265.4351,51.671738,527.39813};
						angles[]={0,1.5916864,0};
					};
					side="West";
					flags=7;
					class Attributes
					{
						init="this addEventHandler [ ""HandleDamage"", { " \n "  params [""_unit"", ""_hitSelection"", ""_damage"",""_source"",""_projectile"",""_hitPartIndex"", ""_instigator"", ""_hitPoint""]; " \n " " \n "  private _damageMultiplierHead = 0.4; " \n "  private _damageMultiplierBody = 0.3; " \n "  private _damageMultiplierLimbs = 0.25; " \n "  private _damageMultiplierOverall = 0.25; " \n "  private _limitHead = 1.0; " \n "  private _limitBody = 0.25; " \n "  private _limitLimbs = 0.1; " \n "  private _limitOverall = 0.25; " \n "  private _oldDamage = 0; " \n "  if (_hitSelection isEqualTo """") then {_oldDamage = damage _unit} else {_oldDamage = _unit getHit _hitSelection}; " \n "  private _newDamage = _damage - _oldDamage max 0; " \n "  private _incomingDamage = _newDamage; " \n "  private _playerHealth = damage _unit; " \n " " \n "  if (_newDamage > 0 && !(_projectile isEqualTo """")) then { " \n "    private _damageMultiplier = _damageMultiplierBody; " \n "    private _upperLimit = _limitBody; " \n "    switch (_hitSelection) do { " \n "      case ""face_hub""; " \n "      case ""head"": { " \n "        _damageMultiplier = _damageMultiplierHead; " \n "        _upperLimit = _limitHead; " \n "      }; " \n "      case ""arms""; " \n "      case ""hands""; " \n "      case ""legs"": { " \n "        _damageMultiplier = _damageMultiplierLimbs; " \n "        _upperLimit = _limitLimbs; " \n "      }; " \n "      case """": { " \n "        _damageMultiplier = _damageMultiplierOverall; " \n "        _upperLimit = _limitOverall; " \n "      }; " \n "      default { " \n "        _damageMultiplier = _damageMultiplierBody; " \n "        _upperLimit = _limitBody; " \n "      }; " \n "    }; " \n "    _newDamage = _newDamage * _damageMultiplier; " \n "    if (_newDamage > _upperLimit) then { " \n "      _newDamage = _upperLimit; " \n "    }; " \n " " \n "    _damage = _oldDamage + _newDamage; " \n "  }; " \n " " \n "  if ( isPlayer _unit ) then { " \n "    if ( lifeState _unit == ""INCAPACITATED"" ) then { " \n "      _damage = _oldDamage; " \n "    } else { " \n "      _this set[ 2, _damage ]; " \n "      _damage = _this call bis_fnc_reviveEhHandleDamage; " \n "    }; " \n "  }; " \n "  _damage " \n "}]";
						isPlayable=1;
						class Inventory
						{
							class primaryWeapon
							{
								name="vn_m1carbine";
								class primaryMuzzleMag
								{
									name="vn_carbine_15_mag";
									ammoLeft=15;
								};
							};
							class secondaryWeapon
							{
								name="vn_m127";
								class primaryMuzzleMag
								{
									name="vn_m127_mag";
									ammoLeft=1;
								};
							};
							class handgun
							{
								name="vn_mx991";
							};
							class binocular
							{
								name="vn_m19_binocs_grey";
							};
							class uniform
							{
								typeName="vn_b_uniform_macv_01_02";
								isBackpack=0;
								class MagazineCargo
								{
									items=1;
									class Item0
									{
										name="vn_prop_food_fresh_01";
										count=24;
										ammoLeft=100;
									};
								};
								class ItemCargo
								{
									items=1;
									class Item0
									{
										name="vn_b_item_firstaidkit";
										count=8;
									};
								};
							};
							class vest
							{
								typeName="vn_b_vest_usarmy_03";
								isBackpack=0;
								class MagazineCargo
								{
									items=1;
									class Item0
									{
										name="vn_m61_grenade_mag";
										count=9;
										ammoLeft=1;
									};
								};
							};
							class backpack
							{
								typeName="vn_b_pack_03";
								isBackpack=1;
								class MagazineCargo
								{
									items=6;
									class Item0
									{
										name="vn_m129_mag";
										count=5;
										ammoLeft=1;
									};
									class Item1
									{
										name="vn_carbine_15_t_mag";
										count=12;
										ammoLeft=15;
									};
									class Item2
									{
										name="vn_m34_grenade_mag";
										count=1;
										ammoLeft=1;
									};
									class Item3
									{
										name="vn_m18_purple_mag";
										count=2;
										ammoLeft=1;
									};
									class Item4
									{
										name="vn_m18_red_mag";
										count=2;
										ammoLeft=1;
									};
									class Item5
									{
										name="vn_mine_m112_remote_mag";
										count=5;
										ammoLeft=1;
									};
								};
								class ItemCargo
								{
									items=2;
									class Item0
									{
										name="vn_b_item_firstaidkit";
										count=2;
									};
									class Item1
									{
										name="vn_b_item_trapkit";
										count=1;
									};
								};
							};
							map="vn_b_item_map";
							compass="vn_b_item_compass";
							watch="vn_b_item_watch";
							radio="vn_b_item_radio_urc10";
							headgear="vn_b_boonie_02_02";
						};
					};
					id=148;
					type="vn_b_men_sf_06";
					class CustomAttributes
					{
						class Attribute0
						{
							property="speaker";
							expression="_this setspeaker _value;";
							class Value
							{
								class data
								{
									singleType="STRING";
									value="Male02ENG";
								};
							};
						};
						class Attribute1
						{
							property="pitch";
							expression="_this setpitch _value;";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1.04;
								};
							};
						};
						class Attribute2
						{
							property="enableStamina";
							expression="_this enablestamina _value;";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=0;
								};
							};
						};
						nAttributes=3;
					};
				};
			};
			class Attributes
			{
				init="this addEventHandler [ ""HandleDamage"", { " \n "  params [""_unit"", ""_hitSelection"", ""_damage"",""_source"",""_projectile"",""_hitPartIndex"", ""_instigator"", ""_hitPoint""]; " \n " " \n "  private _damageMultiplierHead = 0.4; " \n "  private _damageMultiplierBody = 0.3; " \n "  private _damageMultiplierLimbs = 0.35; " \n "  private _damageMultiplierOverall = 0.3; " \n "  private _limitHead = 1.0; " \n "  private _limitBody = 0.25; " \n "  private _limitLimbs = 0.1; " \n "  private _limitOverall = 0.25; " \n "  private _oldDamage = 0; " \n "  if (_hitSelection isEqualTo """") then {_oldDamage = damage _unit} else {_oldDamage = _unit getHit _hitSelection}; " \n "  private _newDamage = _damage - _oldDamage max 0; " \n "  private _incomingDamage = _newDamage; " \n "  private _playerHealth = damage _unit; " \n " " \n "  if (_newDamage > 0 && !(_projectile isEqualTo """")) then { " \n "    private _damageMultiplier = _damageMultiplierBody; " \n "    private _upperLimit = _limitBody; " \n "    switch (_hitSelection) do { " \n "      case ""face_hub""; " \n "      case ""head"": { " \n "        _damageMultiplier = _damageMultiplierHead; " \n "        _upperLimit = _limitHead; " \n "      }; " \n "      case ""arms""; " \n "      case ""hands""; " \n "      case ""legs"": { " \n "        _damageMultiplier = _damageMultiplierLimbs; " \n "        _upperLimit = _limitLimbs; " \n "      }; " \n "      case """": { " \n "        _damageMultiplier = _damageMultiplierOverall; " \n "        _upperLimit = _limitOverall; " \n "      }; " \n "      default { " \n "        _damageMultiplier = _damageMultiplierBody; " \n "        _upperLimit = _limitBody; " \n "      }; " \n "    }; " \n "    _newDamage = _newDamage * _damageMultiplier; " \n "    if (_newDamage > _upperLimit) then { " \n "      _newDamage = _upperLimit; " \n "    }; " \n " " \n "    _damage = _oldDamage + _newDamage; " \n "  }; " \n " " \n "  if ( isPlayer _unit ) then { " \n "    if ( lifeState _unit == ""INCAPACITATED"" ) then { " \n "      _damage = _oldDamage; " \n "    } else { " \n "      _this set[ 2, _damage ]; " \n "      _damage = _this call bis_fnc_reviveEhHandleDamage; " \n "    }; " \n "  }; " \n "  _damage " \n "}]";
			};
			id=147;
		};
		class Item54
		{
			dataType="Group";
			side="West";
			class Entities
			{
				items=1;
				class Item0
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={1265.4135,51.59811,529.2049};
						angles[]={0,1.5916864,0};
					};
					side="West";
					flags=7;
					class Attributes
					{
						init="this addEventHandler [ ""HandleDamage"", { " \n "  params [""_unit"", ""_hitSelection"", ""_damage"",""_source"",""_projectile"",""_hitPartIndex"", ""_instigator"", ""_hitPoint""]; " \n " " \n "  private _damageMultiplierHead = 0.4; " \n "  private _damageMultiplierBody = 0.3; " \n "  private _damageMultiplierLimbs = 0.25; " \n "  private _damageMultiplierOverall = 0.25; " \n "  private _limitHead = 1.0; " \n "  private _limitBody = 0.25; " \n "  private _limitLimbs = 0.1; " \n "  private _limitOverall = 0.25; " \n "  private _oldDamage = 0; " \n "  if (_hitSelection isEqualTo """") then {_oldDamage = damage _unit} else {_oldDamage = _unit getHit _hitSelection}; " \n "  private _newDamage = _damage - _oldDamage max 0; " \n "  private _incomingDamage = _newDamage; " \n "  private _playerHealth = damage _unit; " \n " " \n "  if (_newDamage > 0 && !(_projectile isEqualTo """")) then { " \n "    private _damageMultiplier = _damageMultiplierBody; " \n "    private _upperLimit = _limitBody; " \n "    switch (_hitSelection) do { " \n "      case ""face_hub""; " \n "      case ""head"": { " \n "        _damageMultiplier = _damageMultiplierHead; " \n "        _upperLimit = _limitHead; " \n "      }; " \n "      case ""arms""; " \n "      case ""hands""; " \n "      case ""legs"": { " \n "        _damageMultiplier = _damageMultiplierLimbs; " \n "        _upperLimit = _limitLimbs; " \n "      }; " \n "      case """": { " \n "        _damageMultiplier = _damageMultiplierOverall; " \n "        _upperLimit = _limitOverall; " \n "      }; " \n "      default { " \n "        _damageMultiplier = _damageMultiplierBody; " \n "        _upperLimit = _limitBody; " \n "      }; " \n "    }; " \n "    _newDamage = _newDamage * _damageMultiplier; " \n "    if (_newDamage > _upperLimit) then { " \n "      _newDamage = _upperLimit; " \n "    }; " \n " " \n "    _damage = _oldDamage + _newDamage; " \n "  }; " \n " " \n "  if ( isPlayer _unit ) then { " \n "    if ( lifeState _unit == ""INCAPACITATED"" ) then { " \n "      _damage = _oldDamage; " \n "    } else { " \n "      _this set[ 2, _damage ]; " \n "      _damage = _this call bis_fnc_reviveEhHandleDamage; " \n "    }; " \n "  }; " \n "  _damage " \n "}]";
						isPlayable=1;
						class Inventory
						{
							class primaryWeapon
							{
								name="vn_m1carbine";
								class primaryMuzzleMag
								{
									name="vn_carbine_15_mag";
									ammoLeft=15;
								};
							};
							class secondaryWeapon
							{
								name="vn_m127";
								class primaryMuzzleMag
								{
									name="vn_m127_mag";
									ammoLeft=1;
								};
							};
							class handgun
							{
								name="vn_mx991";
							};
							class binocular
							{
								name="vn_m19_binocs_grey";
							};
							class uniform
							{
								typeName="vn_b_uniform_macv_01_02";
								isBackpack=0;
								class MagazineCargo
								{
									items=1;
									class Item0
									{
										name="vn_prop_food_fresh_01";
										count=24;
										ammoLeft=100;
									};
								};
								class ItemCargo
								{
									items=1;
									class Item0
									{
										name="vn_b_item_firstaidkit";
										count=8;
									};
								};
							};
							class vest
							{
								typeName="vn_b_vest_usarmy_03";
								isBackpack=0;
								class MagazineCargo
								{
									items=1;
									class Item0
									{
										name="vn_m61_grenade_mag";
										count=9;
										ammoLeft=1;
									};
								};
							};
							class backpack
							{
								typeName="vn_b_pack_03";
								isBackpack=1;
								class MagazineCargo
								{
									items=6;
									class Item0
									{
										name="vn_m129_mag";
										count=5;
										ammoLeft=1;
									};
									class Item1
									{
										name="vn_carbine_15_t_mag";
										count=12;
										ammoLeft=15;
									};
									class Item2
									{
										name="vn_m34_grenade_mag";
										count=1;
										ammoLeft=1;
									};
									class Item3
									{
										name="vn_m18_purple_mag";
										count=2;
										ammoLeft=1;
									};
									class Item4
									{
										name="vn_m18_red_mag";
										count=2;
										ammoLeft=1;
									};
									class Item5
									{
										name="vn_mine_m112_remote_mag";
										count=5;
										ammoLeft=1;
									};
								};
								class ItemCargo
								{
									items=2;
									class Item0
									{
										name="vn_b_item_firstaidkit";
										count=2;
									};
									class Item1
									{
										name="vn_b_item_trapkit";
										count=1;
									};
								};
							};
							map="vn_b_item_map";
							compass="vn_b_item_compass";
							watch="vn_b_item_watch";
							radio="vn_b_item_radio_urc10";
							headgear="vn_b_boonie_02_02";
						};
					};
					id=150;
					type="vn_b_men_sf_06";
					atlOffset=1.1444092e-005;
					class CustomAttributes
					{
						class Attribute0
						{
							property="speaker";
							expression="_this setspeaker _value;";
							class Value
							{
								class data
								{
									singleType="STRING";
									value="Male02ENG";
								};
							};
						};
						class Attribute1
						{
							property="pitch";
							expression="_this setpitch _value;";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1.04;
								};
							};
						};
						class Attribute2
						{
							property="enableStamina";
							expression="_this enablestamina _value;";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=0;
								};
							};
						};
						nAttributes=3;
					};
				};
			};
			class Attributes
			{
				init="this addEventHandler [ ""HandleDamage"", { " \n "  params [""_unit"", ""_hitSelection"", ""_damage"",""_source"",""_projectile"",""_hitPartIndex"", ""_instigator"", ""_hitPoint""]; " \n " " \n "  private _damageMultiplierHead = 0.4; " \n "  private _damageMultiplierBody = 0.3; " \n "  private _damageMultiplierLimbs = 0.35; " \n "  private _damageMultiplierOverall = 0.3; " \n "  private _limitHead = 1.0; " \n "  private _limitBody = 0.25; " \n "  private _limitLimbs = 0.1; " \n "  private _limitOverall = 0.25; " \n "  private _oldDamage = 0; " \n "  if (_hitSelection isEqualTo """") then {_oldDamage = damage _unit} else {_oldDamage = _unit getHit _hitSelection}; " \n "  private _newDamage = _damage - _oldDamage max 0; " \n "  private _incomingDamage = _newDamage; " \n "  private _playerHealth = damage _unit; " \n " " \n "  if (_newDamage > 0 && !(_projectile isEqualTo """")) then { " \n "    private _damageMultiplier = _damageMultiplierBody; " \n "    private _upperLimit = _limitBody; " \n "    switch (_hitSelection) do { " \n "      case ""face_hub""; " \n "      case ""head"": { " \n "        _damageMultiplier = _damageMultiplierHead; " \n "        _upperLimit = _limitHead; " \n "      }; " \n "      case ""arms""; " \n "      case ""hands""; " \n "      case ""legs"": { " \n "        _damageMultiplier = _damageMultiplierLimbs; " \n "        _upperLimit = _limitLimbs; " \n "      }; " \n "      case """": { " \n "        _damageMultiplier = _damageMultiplierOverall; " \n "        _upperLimit = _limitOverall; " \n "      }; " \n "      default { " \n "        _damageMultiplier = _damageMultiplierBody; " \n "        _upperLimit = _limitBody; " \n "      }; " \n "    }; " \n "    _newDamage = _newDamage * _damageMultiplier; " \n "    if (_newDamage > _upperLimit) then { " \n "      _newDamage = _upperLimit; " \n "    }; " \n " " \n "    _damage = _oldDamage + _newDamage; " \n "  }; " \n " " \n "  if ( isPlayer _unit ) then { " \n "    if ( lifeState _unit == ""INCAPACITATED"" ) then { " \n "      _damage = _oldDamage; " \n "    } else { " \n "      _this set[ 2, _damage ]; " \n "      _damage = _this call bis_fnc_reviveEhHandleDamage; " \n "    }; " \n "  }; " \n "  _damage " \n "}]";
			};
			id=149;
			atlOffset=1.1444092e-005;
		};
		class Item55
		{
			dataType="Group";
			side="West";
			class Entities
			{
				items=1;
				class Item0
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={1265.6049,51.55851,530.49786};
						angles[]={0,1.5916864,0};
					};
					side="West";
					flags=7;
					class Attributes
					{
						init="this addEventHandler [ ""HandleDamage"", { " \n "  params [""_unit"", ""_hitSelection"", ""_damage"",""_source"",""_projectile"",""_hitPartIndex"", ""_instigator"", ""_hitPoint""]; " \n " " \n "  private _damageMultiplierHead = 0.4; " \n "  private _damageMultiplierBody = 0.3; " \n "  private _damageMultiplierLimbs = 0.25; " \n "  private _damageMultiplierOverall = 0.25; " \n "  private _limitHead = 1.0; " \n "  private _limitBody = 0.25; " \n "  private _limitLimbs = 0.1; " \n "  private _limitOverall = 0.25; " \n "  private _oldDamage = 0; " \n "  if (_hitSelection isEqualTo """") then {_oldDamage = damage _unit} else {_oldDamage = _unit getHit _hitSelection}; " \n "  private _newDamage = _damage - _oldDamage max 0; " \n "  private _incomingDamage = _newDamage; " \n "  private _playerHealth = damage _unit; " \n " " \n "  if (_newDamage > 0 && !(_projectile isEqualTo """")) then { " \n "    private _damageMultiplier = _damageMultiplierBody; " \n "    private _upperLimit = _limitBody; " \n "    switch (_hitSelection) do { " \n "      case ""face_hub""; " \n "      case ""head"": { " \n "        _damageMultiplier = _damageMultiplierHead; " \n "        _upperLimit = _limitHead; " \n "      }; " \n "      case ""arms""; " \n "      case ""hands""; " \n "      case ""legs"": { " \n "        _damageMultiplier = _damageMultiplierLimbs; " \n "        _upperLimit = _limitLimbs; " \n "      }; " \n "      case """": { " \n "        _damageMultiplier = _damageMultiplierOverall; " \n "        _upperLimit = _limitOverall; " \n "      }; " \n "      default { " \n "        _damageMultiplier = _damageMultiplierBody; " \n "        _upperLimit = _limitBody; " \n "      }; " \n "    }; " \n "    _newDamage = _newDamage * _damageMultiplier; " \n "    if (_newDamage > _upperLimit) then { " \n "      _newDamage = _upperLimit; " \n "    }; " \n " " \n "    _damage = _oldDamage + _newDamage; " \n "  }; " \n " " \n "  if ( isPlayer _unit ) then { " \n "    if ( lifeState _unit == ""INCAPACITATED"" ) then { " \n "      _damage = _oldDamage; " \n "    } else { " \n "      _this set[ 2, _damage ]; " \n "      _damage = _this call bis_fnc_reviveEhHandleDamage; " \n "    }; " \n "  }; " \n "  _damage " \n "}]";
						isPlayable=1;
						class Inventory
						{
							class primaryWeapon
							{
								name="vn_m1carbine";
								class primaryMuzzleMag
								{
									name="vn_carbine_15_mag";
									ammoLeft=15;
								};
							};
							class secondaryWeapon
							{
								name="vn_m127";
								class primaryMuzzleMag
								{
									name="vn_m127_mag";
									ammoLeft=1;
								};
							};
							class handgun
							{
								name="vn_mx991";
							};
							class binocular
							{
								name="vn_m19_binocs_grey";
							};
							class uniform
							{
								typeName="vn_b_uniform_macv_01_02";
								isBackpack=0;
								class MagazineCargo
								{
									items=1;
									class Item0
									{
										name="vn_prop_food_fresh_01";
										count=24;
										ammoLeft=100;
									};
								};
								class ItemCargo
								{
									items=1;
									class Item0
									{
										name="vn_b_item_firstaidkit";
										count=8;
									};
								};
							};
							class vest
							{
								typeName="vn_b_vest_usarmy_03";
								isBackpack=0;
								class MagazineCargo
								{
									items=1;
									class Item0
									{
										name="vn_m61_grenade_mag";
										count=9;
										ammoLeft=1;
									};
								};
							};
							class backpack
							{
								typeName="vn_b_pack_03";
								isBackpack=1;
								class MagazineCargo
								{
									items=6;
									class Item0
									{
										name="vn_m129_mag";
										count=5;
										ammoLeft=1;
									};
									class Item1
									{
										name="vn_carbine_15_t_mag";
										count=12;
										ammoLeft=15;
									};
									class Item2
									{
										name="vn_m34_grenade_mag";
										count=1;
										ammoLeft=1;
									};
									class Item3
									{
										name="vn_m18_purple_mag";
										count=2;
										ammoLeft=1;
									};
									class Item4
									{
										name="vn_m18_red_mag";
										count=2;
										ammoLeft=1;
									};
									class Item5
									{
										name="vn_mine_m112_remote_mag";
										count=5;
										ammoLeft=1;
									};
								};
								class ItemCargo
								{
									items=2;
									class Item0
									{
										name="vn_b_item_firstaidkit";
										count=2;
									};
									class Item1
									{
										name="vn_b_item_trapkit";
										count=1;
									};
								};
							};
							map="vn_b_item_map";
							compass="vn_b_item_compass";
							watch="vn_b_item_watch";
							radio="vn_b_item_radio_urc10";
							headgear="vn_b_boonie_02_02";
						};
					};
					id=152;
					type="vn_b_men_sf_06";
					atlOffset=1.1444092e-005;
					class CustomAttributes
					{
						class Attribute0
						{
							property="speaker";
							expression="_this setspeaker _value;";
							class Value
							{
								class data
								{
									singleType="STRING";
									value="Male02ENG";
								};
							};
						};
						class Attribute1
						{
							property="pitch";
							expression="_this setpitch _value;";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1.04;
								};
							};
						};
						class Attribute2
						{
							property="enableStamina";
							expression="_this enablestamina _value;";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=0;
								};
							};
						};
						nAttributes=3;
					};
				};
			};
			class Attributes
			{
				init="this addEventHandler [ ""HandleDamage"", { " \n "  params [""_unit"", ""_hitSelection"", ""_damage"",""_source"",""_projectile"",""_hitPartIndex"", ""_instigator"", ""_hitPoint""]; " \n " " \n "  private _damageMultiplierHead = 0.4; " \n "  private _damageMultiplierBody = 0.3; " \n "  private _damageMultiplierLimbs = 0.35; " \n "  private _damageMultiplierOverall = 0.3; " \n "  private _limitHead = 1.0; " \n "  private _limitBody = 0.25; " \n "  private _limitLimbs = 0.1; " \n "  private _limitOverall = 0.25; " \n "  private _oldDamage = 0; " \n "  if (_hitSelection isEqualTo """") then {_oldDamage = damage _unit} else {_oldDamage = _unit getHit _hitSelection}; " \n "  private _newDamage = _damage - _oldDamage max 0; " \n "  private _incomingDamage = _newDamage; " \n "  private _playerHealth = damage _unit; " \n " " \n "  if (_newDamage > 0 && !(_projectile isEqualTo """")) then { " \n "    private _damageMultiplier = _damageMultiplierBody; " \n "    private _upperLimit = _limitBody; " \n "    switch (_hitSelection) do { " \n "      case ""face_hub""; " \n "      case ""head"": { " \n "        _damageMultiplier = _damageMultiplierHead; " \n "        _upperLimit = _limitHead; " \n "      }; " \n "      case ""arms""; " \n "      case ""hands""; " \n "      case ""legs"": { " \n "        _damageMultiplier = _damageMultiplierLimbs; " \n "        _upperLimit = _limitLimbs; " \n "      }; " \n "      case """": { " \n "        _damageMultiplier = _damageMultiplierOverall; " \n "        _upperLimit = _limitOverall; " \n "      }; " \n "      default { " \n "        _damageMultiplier = _damageMultiplierBody; " \n "        _upperLimit = _limitBody; " \n "      }; " \n "    }; " \n "    _newDamage = _newDamage * _damageMultiplier; " \n "    if (_newDamage > _upperLimit) then { " \n "      _newDamage = _upperLimit; " \n "    }; " \n " " \n "    _damage = _oldDamage + _newDamage; " \n "  }; " \n " " \n "  if ( isPlayer _unit ) then { " \n "    if ( lifeState _unit == ""INCAPACITATED"" ) then { " \n "      _damage = _oldDamage; " \n "    } else { " \n "      _this set[ 2, _damage ]; " \n "      _damage = _this call bis_fnc_reviveEhHandleDamage; " \n "    }; " \n "  }; " \n "  _damage " \n "}]";
			};
			id=151;
			atlOffset=1.1444092e-005;
		};
		class Item56
		{
			dataType="Group";
			side="West";
			class Entities
			{
				items=1;
				class Item0
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={1265.5756,51.516769,531.5838};
						angles[]={0,1.5916864,0};
					};
					side="West";
					flags=7;
					class Attributes
					{
						init="this addEventHandler [ ""HandleDamage"", { " \n "  params [""_unit"", ""_hitSelection"", ""_damage"",""_source"",""_projectile"",""_hitPartIndex"", ""_instigator"", ""_hitPoint""]; " \n " " \n "  private _damageMultiplierHead = 0.4; " \n "  private _damageMultiplierBody = 0.3; " \n "  private _damageMultiplierLimbs = 0.25; " \n "  private _damageMultiplierOverall = 0.25; " \n "  private _limitHead = 1.0; " \n "  private _limitBody = 0.25; " \n "  private _limitLimbs = 0.1; " \n "  private _limitOverall = 0.25; " \n "  private _oldDamage = 0; " \n "  if (_hitSelection isEqualTo """") then {_oldDamage = damage _unit} else {_oldDamage = _unit getHit _hitSelection}; " \n "  private _newDamage = _damage - _oldDamage max 0; " \n "  private _incomingDamage = _newDamage; " \n "  private _playerHealth = damage _unit; " \n " " \n "  if (_newDamage > 0 && !(_projectile isEqualTo """")) then { " \n "    private _damageMultiplier = _damageMultiplierBody; " \n "    private _upperLimit = _limitBody; " \n "    switch (_hitSelection) do { " \n "      case ""face_hub""; " \n "      case ""head"": { " \n "        _damageMultiplier = _damageMultiplierHead; " \n "        _upperLimit = _limitHead; " \n "      }; " \n "      case ""arms""; " \n "      case ""hands""; " \n "      case ""legs"": { " \n "        _damageMultiplier = _damageMultiplierLimbs; " \n "        _upperLimit = _limitLimbs; " \n "      }; " \n "      case """": { " \n "        _damageMultiplier = _damageMultiplierOverall; " \n "        _upperLimit = _limitOverall; " \n "      }; " \n "      default { " \n "        _damageMultiplier = _damageMultiplierBody; " \n "        _upperLimit = _limitBody; " \n "      }; " \n "    }; " \n "    _newDamage = _newDamage * _damageMultiplier; " \n "    if (_newDamage > _upperLimit) then { " \n "      _newDamage = _upperLimit; " \n "    }; " \n " " \n "    _damage = _oldDamage + _newDamage; " \n "  }; " \n " " \n "  if ( isPlayer _unit ) then { " \n "    if ( lifeState _unit == ""INCAPACITATED"" ) then { " \n "      _damage = _oldDamage; " \n "    } else { " \n "      _this set[ 2, _damage ]; " \n "      _damage = _this call bis_fnc_reviveEhHandleDamage; " \n "    }; " \n "  }; " \n "  _damage " \n "}]";
						isPlayable=1;
						class Inventory
						{
							class primaryWeapon
							{
								name="vn_m1carbine";
								class primaryMuzzleMag
								{
									name="vn_carbine_15_mag";
									ammoLeft=15;
								};
							};
							class secondaryWeapon
							{
								name="vn_m127";
								class primaryMuzzleMag
								{
									name="vn_m127_mag";
									ammoLeft=1;
								};
							};
							class handgun
							{
								name="vn_mx991";
							};
							class binocular
							{
								name="vn_m19_binocs_grey";
							};
							class uniform
							{
								typeName="vn_b_uniform_macv_01_02";
								isBackpack=0;
								class MagazineCargo
								{
									items=1;
									class Item0
									{
										name="vn_prop_food_fresh_01";
										count=24;
										ammoLeft=100;
									};
								};
								class ItemCargo
								{
									items=1;
									class Item0
									{
										name="vn_b_item_firstaidkit";
										count=8;
									};
								};
							};
							class vest
							{
								typeName="vn_b_vest_usarmy_03";
								isBackpack=0;
								class MagazineCargo
								{
									items=1;
									class Item0
									{
										name="vn_m61_grenade_mag";
										count=9;
										ammoLeft=1;
									};
								};
							};
							class backpack
							{
								typeName="vn_b_pack_03";
								isBackpack=1;
								class MagazineCargo
								{
									items=6;
									class Item0
									{
										name="vn_m129_mag";
										count=5;
										ammoLeft=1;
									};
									class Item1
									{
										name="vn_carbine_15_t_mag";
										count=12;
										ammoLeft=15;
									};
									class Item2
									{
										name="vn_m34_grenade_mag";
										count=1;
										ammoLeft=1;
									};
									class Item3
									{
										name="vn_m18_purple_mag";
										count=2;
										ammoLeft=1;
									};
									class Item4
									{
										name="vn_m18_red_mag";
										count=2;
										ammoLeft=1;
									};
									class Item5
									{
										name="vn_mine_m112_remote_mag";
										count=5;
										ammoLeft=1;
									};
								};
								class ItemCargo
								{
									items=2;
									class Item0
									{
										name="vn_b_item_firstaidkit";
										count=2;
									};
									class Item1
									{
										name="vn_b_item_trapkit";
										count=1;
									};
								};
							};
							map="vn_b_item_map";
							compass="vn_b_item_compass";
							watch="vn_b_item_watch";
							radio="vn_b_item_radio_urc10";
							headgear="vn_b_boonie_02_02";
						};
					};
					id=154;
					type="vn_b_men_sf_06";
					atlOffset=7.6293945e-006;
					class CustomAttributes
					{
						class Attribute0
						{
							property="speaker";
							expression="_this setspeaker _value;";
							class Value
							{
								class data
								{
									singleType="STRING";
									value="Male02ENG";
								};
							};
						};
						class Attribute1
						{
							property="pitch";
							expression="_this setpitch _value;";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1.04;
								};
							};
						};
						class Attribute2
						{
							property="enableStamina";
							expression="_this enablestamina _value;";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=0;
								};
							};
						};
						nAttributes=3;
					};
				};
			};
			class Attributes
			{
				init="this addEventHandler [ ""HandleDamage"", { " \n "  params [""_unit"", ""_hitSelection"", ""_damage"",""_source"",""_projectile"",""_hitPartIndex"", ""_instigator"", ""_hitPoint""]; " \n " " \n "  private _damageMultiplierHead = 0.4; " \n "  private _damageMultiplierBody = 0.3; " \n "  private _damageMultiplierLimbs = 0.35; " \n "  private _damageMultiplierOverall = 0.3; " \n "  private _limitHead = 1.0; " \n "  private _limitBody = 0.25; " \n "  private _limitLimbs = 0.1; " \n "  private _limitOverall = 0.25; " \n "  private _oldDamage = 0; " \n "  if (_hitSelection isEqualTo """") then {_oldDamage = damage _unit} else {_oldDamage = _unit getHit _hitSelection}; " \n "  private _newDamage = _damage - _oldDamage max 0; " \n "  private _incomingDamage = _newDamage; " \n "  private _playerHealth = damage _unit; " \n " " \n "  if (_newDamage > 0 && !(_projectile isEqualTo """")) then { " \n "    private _damageMultiplier = _damageMultiplierBody; " \n "    private _upperLimit = _limitBody; " \n "    switch (_hitSelection) do { " \n "      case ""face_hub""; " \n "      case ""head"": { " \n "        _damageMultiplier = _damageMultiplierHead; " \n "        _upperLimit = _limitHead; " \n "      }; " \n "      case ""arms""; " \n "      case ""hands""; " \n "      case ""legs"": { " \n "        _damageMultiplier = _damageMultiplierLimbs; " \n "        _upperLimit = _limitLimbs; " \n "      }; " \n "      case """": { " \n "        _damageMultiplier = _damageMultiplierOverall; " \n "        _upperLimit = _limitOverall; " \n "      }; " \n "      default { " \n "        _damageMultiplier = _damageMultiplierBody; " \n "        _upperLimit = _limitBody; " \n "      }; " \n "    }; " \n "    _newDamage = _newDamage * _damageMultiplier; " \n "    if (_newDamage > _upperLimit) then { " \n "      _newDamage = _upperLimit; " \n "    }; " \n " " \n "    _damage = _oldDamage + _newDamage; " \n "  }; " \n " " \n "  if ( isPlayer _unit ) then { " \n "    if ( lifeState _unit == ""INCAPACITATED"" ) then { " \n "      _damage = _oldDamage; " \n "    } else { " \n "      _this set[ 2, _damage ]; " \n "      _damage = _this call bis_fnc_reviveEhHandleDamage; " \n "    }; " \n "  }; " \n "  _damage " \n "}]";
			};
			id=153;
			atlOffset=7.6293945e-006;
		};
		class Item57
		{
			dataType="Group";
			side="West";
			class Entities
			{
				items=1;
				class Item0
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={1265.7767,51.484295,532.94025};
						angles[]={0,1.5916864,0};
					};
					side="West";
					flags=7;
					class Attributes
					{
						init="this addEventHandler [ ""HandleDamage"", { " \n "  params [""_unit"", ""_hitSelection"", ""_damage"",""_source"",""_projectile"",""_hitPartIndex"", ""_instigator"", ""_hitPoint""]; " \n " " \n "  private _damageMultiplierHead = 0.4; " \n "  private _damageMultiplierBody = 0.3; " \n "  private _damageMultiplierLimbs = 0.25; " \n "  private _damageMultiplierOverall = 0.25; " \n "  private _limitHead = 1.0; " \n "  private _limitBody = 0.25; " \n "  private _limitLimbs = 0.1; " \n "  private _limitOverall = 0.25; " \n "  private _oldDamage = 0; " \n "  if (_hitSelection isEqualTo """") then {_oldDamage = damage _unit} else {_oldDamage = _unit getHit _hitSelection}; " \n "  private _newDamage = _damage - _oldDamage max 0; " \n "  private _incomingDamage = _newDamage; " \n "  private _playerHealth = damage _unit; " \n " " \n "  if (_newDamage > 0 && !(_projectile isEqualTo """")) then { " \n "    private _damageMultiplier = _damageMultiplierBody; " \n "    private _upperLimit = _limitBody; " \n "    switch (_hitSelection) do { " \n "      case ""face_hub""; " \n "      case ""head"": { " \n "        _damageMultiplier = _damageMultiplierHead; " \n "        _upperLimit = _limitHead; " \n "      }; " \n "      case ""arms""; " \n "      case ""hands""; " \n "      case ""legs"": { " \n "        _damageMultiplier = _damageMultiplierLimbs; " \n "        _upperLimit = _limitLimbs; " \n "      }; " \n "      case """": { " \n "        _damageMultiplier = _damageMultiplierOverall; " \n "        _upperLimit = _limitOverall; " \n "      }; " \n "      default { " \n "        _damageMultiplier = _damageMultiplierBody; " \n "        _upperLimit = _limitBody; " \n "      }; " \n "    }; " \n "    _newDamage = _newDamage * _damageMultiplier; " \n "    if (_newDamage > _upperLimit) then { " \n "      _newDamage = _upperLimit; " \n "    }; " \n " " \n "    _damage = _oldDamage + _newDamage; " \n "  }; " \n " " \n "  if ( isPlayer _unit ) then { " \n "    if ( lifeState _unit == ""INCAPACITATED"" ) then { " \n "      _damage = _oldDamage; " \n "    } else { " \n "      _this set[ 2, _damage ]; " \n "      _damage = _this call bis_fnc_reviveEhHandleDamage; " \n "    }; " \n "  }; " \n "  _damage " \n "}]";
						isPlayable=1;
						class Inventory
						{
							class primaryWeapon
							{
								name="vn_m1carbine";
								class primaryMuzzleMag
								{
									name="vn_carbine_15_mag";
									ammoLeft=15;
								};
							};
							class secondaryWeapon
							{
								name="vn_m127";
								class primaryMuzzleMag
								{
									name="vn_m127_mag";
									ammoLeft=1;
								};
							};
							class handgun
							{
								name="vn_mx991";
							};
							class binocular
							{
								name="vn_m19_binocs_grey";
							};
							class uniform
							{
								typeName="vn_b_uniform_macv_01_02";
								isBackpack=0;
								class MagazineCargo
								{
									items=1;
									class Item0
									{
										name="vn_prop_food_fresh_01";
										count=24;
										ammoLeft=100;
									};
								};
								class ItemCargo
								{
									items=1;
									class Item0
									{
										name="vn_b_item_firstaidkit";
										count=8;
									};
								};
							};
							class vest
							{
								typeName="vn_b_vest_usarmy_03";
								isBackpack=0;
								class MagazineCargo
								{
									items=1;
									class Item0
									{
										name="vn_m61_grenade_mag";
										count=9;
										ammoLeft=1;
									};
								};
							};
							class backpack
							{
								typeName="vn_b_pack_03";
								isBackpack=1;
								class MagazineCargo
								{
									items=6;
									class Item0
									{
										name="vn_m129_mag";
										count=5;
										ammoLeft=1;
									};
									class Item1
									{
										name="vn_carbine_15_t_mag";
										count=12;
										ammoLeft=15;
									};
									class Item2
									{
										name="vn_m34_grenade_mag";
										count=1;
										ammoLeft=1;
									};
									class Item3
									{
										name="vn_m18_purple_mag";
										count=2;
										ammoLeft=1;
									};
									class Item4
									{
										name="vn_m18_red_mag";
										count=2;
										ammoLeft=1;
									};
									class Item5
									{
										name="vn_mine_m112_remote_mag";
										count=5;
										ammoLeft=1;
									};
								};
								class ItemCargo
								{
									items=2;
									class Item0
									{
										name="vn_b_item_firstaidkit";
										count=2;
									};
									class Item1
									{
										name="vn_b_item_trapkit";
										count=1;
									};
								};
							};
							map="vn_b_item_map";
							compass="vn_b_item_compass";
							watch="vn_b_item_watch";
							radio="vn_b_item_radio_urc10";
							headgear="vn_b_boonie_02_02";
						};
					};
					id=156;
					type="vn_b_men_sf_06";
					atlOffset=3.8146973e-006;
					class CustomAttributes
					{
						class Attribute0
						{
							property="speaker";
							expression="_this setspeaker _value;";
							class Value
							{
								class data
								{
									singleType="STRING";
									value="Male02ENG";
								};
							};
						};
						class Attribute1
						{
							property="pitch";
							expression="_this setpitch _value;";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1.04;
								};
							};
						};
						class Attribute2
						{
							property="enableStamina";
							expression="_this enablestamina _value;";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=0;
								};
							};
						};
						nAttributes=3;
					};
				};
			};
			class Attributes
			{
				init="this addEventHandler [ ""HandleDamage"", { " \n "  params [""_unit"", ""_hitSelection"", ""_damage"",""_source"",""_projectile"",""_hitPartIndex"", ""_instigator"", ""_hitPoint""]; " \n " " \n "  private _damageMultiplierHead = 0.4; " \n "  private _damageMultiplierBody = 0.3; " \n "  private _damageMultiplierLimbs = 0.35; " \n "  private _damageMultiplierOverall = 0.3; " \n "  private _limitHead = 1.0; " \n "  private _limitBody = 0.25; " \n "  private _limitLimbs = 0.1; " \n "  private _limitOverall = 0.25; " \n "  private _oldDamage = 0; " \n "  if (_hitSelection isEqualTo """") then {_oldDamage = damage _unit} else {_oldDamage = _unit getHit _hitSelection}; " \n "  private _newDamage = _damage - _oldDamage max 0; " \n "  private _incomingDamage = _newDamage; " \n "  private _playerHealth = damage _unit; " \n " " \n "  if (_newDamage > 0 && !(_projectile isEqualTo """")) then { " \n "    private _damageMultiplier = _damageMultiplierBody; " \n "    private _upperLimit = _limitBody; " \n "    switch (_hitSelection) do { " \n "      case ""face_hub""; " \n "      case ""head"": { " \n "        _damageMultiplier = _damageMultiplierHead; " \n "        _upperLimit = _limitHead; " \n "      }; " \n "      case ""arms""; " \n "      case ""hands""; " \n "      case ""legs"": { " \n "        _damageMultiplier = _damageMultiplierLimbs; " \n "        _upperLimit = _limitLimbs; " \n "      }; " \n "      case """": { " \n "        _damageMultiplier = _damageMultiplierOverall; " \n "        _upperLimit = _limitOverall; " \n "      }; " \n "      default { " \n "        _damageMultiplier = _damageMultiplierBody; " \n "        _upperLimit = _limitBody; " \n "      }; " \n "    }; " \n "    _newDamage = _newDamage * _damageMultiplier; " \n "    if (_newDamage > _upperLimit) then { " \n "      _newDamage = _upperLimit; " \n "    }; " \n " " \n "    _damage = _oldDamage + _newDamage; " \n "  }; " \n " " \n "  if ( isPlayer _unit ) then { " \n "    if ( lifeState _unit == ""INCAPACITATED"" ) then { " \n "      _damage = _oldDamage; " \n "    } else { " \n "      _this set[ 2, _damage ]; " \n "      _damage = _this call bis_fnc_reviveEhHandleDamage; " \n "    }; " \n "  }; " \n "  _damage " \n "}]";
			};
			id=155;
			atlOffset=3.8146973e-006;
		};
		class Item58
		{
			dataType="Group";
			side="West";
			class Entities
			{
				items=1;
				class Item0
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={1265.8431,51.444275,534.36017};
						angles[]={0,1.6256703,0};
					};
					side="West";
					flags=7;
					class Attributes
					{
						init="this addEventHandler [ ""HandleDamage"", { " \n "  params [""_unit"", ""_hitSelection"", ""_damage"",""_source"",""_projectile"",""_hitPartIndex"", ""_instigator"", ""_hitPoint""]; " \n " " \n "  private _damageMultiplierHead = 0.4; " \n "  private _damageMultiplierBody = 0.3; " \n "  private _damageMultiplierLimbs = 0.25; " \n "  private _damageMultiplierOverall = 0.25; " \n "  private _limitHead = 1.0; " \n "  private _limitBody = 0.25; " \n "  private _limitLimbs = 0.1; " \n "  private _limitOverall = 0.25; " \n "  private _oldDamage = 0; " \n "  if (_hitSelection isEqualTo """") then {_oldDamage = damage _unit} else {_oldDamage = _unit getHit _hitSelection}; " \n "  private _newDamage = _damage - _oldDamage max 0; " \n "  private _incomingDamage = _newDamage; " \n "  private _playerHealth = damage _unit; " \n " " \n "  if (_newDamage > 0 && !(_projectile isEqualTo """")) then { " \n "    private _damageMultiplier = _damageMultiplierBody; " \n "    private _upperLimit = _limitBody; " \n "    switch (_hitSelection) do { " \n "      case ""face_hub""; " \n "      case ""head"": { " \n "        _damageMultiplier = _damageMultiplierHead; " \n "        _upperLimit = _limitHead; " \n "      }; " \n "      case ""arms""; " \n "      case ""hands""; " \n "      case ""legs"": { " \n "        _damageMultiplier = _damageMultiplierLimbs; " \n "        _upperLimit = _limitLimbs; " \n "      }; " \n "      case """": { " \n "        _damageMultiplier = _damageMultiplierOverall; " \n "        _upperLimit = _limitOverall; " \n "      }; " \n "      default { " \n "        _damageMultiplier = _damageMultiplierBody; " \n "        _upperLimit = _limitBody; " \n "      }; " \n "    }; " \n "    _newDamage = _newDamage * _damageMultiplier; " \n "    if (_newDamage > _upperLimit) then { " \n "      _newDamage = _upperLimit; " \n "    }; " \n " " \n "    _damage = _oldDamage + _newDamage; " \n "  }; " \n " " \n "  if ( isPlayer _unit ) then { " \n "    if ( lifeState _unit == ""INCAPACITATED"" ) then { " \n "      _damage = _oldDamage; " \n "    } else { " \n "      _this set[ 2, _damage ]; " \n "      _damage = _this call bis_fnc_reviveEhHandleDamage; " \n "    }; " \n "  }; " \n "  _damage " \n "}]";
						isPlayable=1;
						class Inventory
						{
							class primaryWeapon
							{
								name="vn_m1carbine";
								class primaryMuzzleMag
								{
									name="vn_carbine_15_mag";
									ammoLeft=15;
								};
							};
							class secondaryWeapon
							{
								name="vn_m127";
								class primaryMuzzleMag
								{
									name="vn_m127_mag";
									ammoLeft=1;
								};
							};
							class handgun
							{
								name="vn_mx991";
							};
							class binocular
							{
								name="vn_m19_binocs_grey";
							};
							class uniform
							{
								typeName="vn_b_uniform_macv_01_02";
								isBackpack=0;
								class MagazineCargo
								{
									items=1;
									class Item0
									{
										name="vn_prop_food_fresh_01";
										count=24;
										ammoLeft=100;
									};
								};
								class ItemCargo
								{
									items=1;
									class Item0
									{
										name="vn_b_item_firstaidkit";
										count=8;
									};
								};
							};
							class vest
							{
								typeName="vn_b_vest_usarmy_03";
								isBackpack=0;
								class MagazineCargo
								{
									items=1;
									class Item0
									{
										name="vn_m61_grenade_mag";
										count=9;
										ammoLeft=1;
									};
								};
							};
							class backpack
							{
								typeName="vn_b_pack_03";
								isBackpack=1;
								class MagazineCargo
								{
									items=6;
									class Item0
									{
										name="vn_m129_mag";
										count=5;
										ammoLeft=1;
									};
									class Item1
									{
										name="vn_carbine_15_t_mag";
										count=12;
										ammoLeft=15;
									};
									class Item2
									{
										name="vn_m34_grenade_mag";
										count=1;
										ammoLeft=1;
									};
									class Item3
									{
										name="vn_m18_purple_mag";
										count=2;
										ammoLeft=1;
									};
									class Item4
									{
										name="vn_m18_red_mag";
										count=2;
										ammoLeft=1;
									};
									class Item5
									{
										name="vn_mine_m112_remote_mag";
										count=5;
										ammoLeft=1;
									};
								};
								class ItemCargo
								{
									items=2;
									class Item0
									{
										name="vn_b_item_firstaidkit";
										count=2;
									};
									class Item1
									{
										name="vn_b_item_trapkit";
										count=1;
									};
								};
							};
							map="vn_b_item_map";
							compass="vn_b_item_compass";
							watch="vn_b_item_watch";
							radio="vn_b_item_radio_urc10";
							headgear="vn_b_boonie_02_02";
						};
					};
					id=158;
					type="vn_b_men_sf_06";
					atlOffset=7.6293945e-006;
					class CustomAttributes
					{
						class Attribute0
						{
							property="speaker";
							expression="_this setspeaker _value;";
							class Value
							{
								class data
								{
									singleType="STRING";
									value="Male02ENG";
								};
							};
						};
						class Attribute1
						{
							property="pitch";
							expression="_this setpitch _value;";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1.04;
								};
							};
						};
						class Attribute2
						{
							property="enableStamina";
							expression="_this enablestamina _value;";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=0;
								};
							};
						};
						nAttributes=3;
					};
				};
			};
			class Attributes
			{
				init="this addEventHandler [ ""HandleDamage"", { " \n "  params [""_unit"", ""_hitSelection"", ""_damage"",""_source"",""_projectile"",""_hitPartIndex"", ""_instigator"", ""_hitPoint""]; " \n " " \n "  private _damageMultiplierHead = 0.4; " \n "  private _damageMultiplierBody = 0.3; " \n "  private _damageMultiplierLimbs = 0.35; " \n "  private _damageMultiplierOverall = 0.3; " \n "  private _limitHead = 1.0; " \n "  private _limitBody = 0.25; " \n "  private _limitLimbs = 0.1; " \n "  private _limitOverall = 0.25; " \n "  private _oldDamage = 0; " \n "  if (_hitSelection isEqualTo """") then {_oldDamage = damage _unit} else {_oldDamage = _unit getHit _hitSelection}; " \n "  private _newDamage = _damage - _oldDamage max 0; " \n "  private _incomingDamage = _newDamage; " \n "  private _playerHealth = damage _unit; " \n " " \n "  if (_newDamage > 0 && !(_projectile isEqualTo """")) then { " \n "    private _damageMultiplier = _damageMultiplierBody; " \n "    private _upperLimit = _limitBody; " \n "    switch (_hitSelection) do { " \n "      case ""face_hub""; " \n "      case ""head"": { " \n "        _damageMultiplier = _damageMultiplierHead; " \n "        _upperLimit = _limitHead; " \n "      }; " \n "      case ""arms""; " \n "      case ""hands""; " \n "      case ""legs"": { " \n "        _damageMultiplier = _damageMultiplierLimbs; " \n "        _upperLimit = _limitLimbs; " \n "      }; " \n "      case """": { " \n "        _damageMultiplier = _damageMultiplierOverall; " \n "        _upperLimit = _limitOverall; " \n "      }; " \n "      default { " \n "        _damageMultiplier = _damageMultiplierBody; " \n "        _upperLimit = _limitBody; " \n "      }; " \n "    }; " \n "    _newDamage = _newDamage * _damageMultiplier; " \n "    if (_newDamage > _upperLimit) then { " \n "      _newDamage = _upperLimit; " \n "    }; " \n " " \n "    _damage = _oldDamage + _newDamage; " \n "  }; " \n " " \n "  if ( isPlayer _unit ) then { " \n "    if ( lifeState _unit == ""INCAPACITATED"" ) then { " \n "      _damage = _oldDamage; " \n "    } else { " \n "      _this set[ 2, _damage ]; " \n "      _damage = _this call bis_fnc_reviveEhHandleDamage; " \n "    }; " \n "  }; " \n "  _damage " \n "}]";
			};
			id=157;
			atlOffset=7.6293945e-006;
		};
		class Item59
		{
			dataType="Group";
			side="West";
			class Entities
			{
				items=1;
				class Item0
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={1265.9095,51.415348,535.78009};
						angles[]={0,1.5916864,0};
					};
					side="West";
					flags=7;
					class Attributes
					{
						init="this addEventHandler [ ""HandleDamage"", { " \n "  params [""_unit"", ""_hitSelection"", ""_damage"",""_source"",""_projectile"",""_hitPartIndex"", ""_instigator"", ""_hitPoint""]; " \n " " \n "  private _damageMultiplierHead = 0.4; " \n "  private _damageMultiplierBody = 0.3; " \n "  private _damageMultiplierLimbs = 0.25; " \n "  private _damageMultiplierOverall = 0.25; " \n "  private _limitHead = 1.0; " \n "  private _limitBody = 0.25; " \n "  private _limitLimbs = 0.1; " \n "  private _limitOverall = 0.25; " \n "  private _oldDamage = 0; " \n "  if (_hitSelection isEqualTo """") then {_oldDamage = damage _unit} else {_oldDamage = _unit getHit _hitSelection}; " \n "  private _newDamage = _damage - _oldDamage max 0; " \n "  private _incomingDamage = _newDamage; " \n "  private _playerHealth = damage _unit; " \n " " \n "  if (_newDamage > 0 && !(_projectile isEqualTo """")) then { " \n "    private _damageMultiplier = _damageMultiplierBody; " \n "    private _upperLimit = _limitBody; " \n "    switch (_hitSelection) do { " \n "      case ""face_hub""; " \n "      case ""head"": { " \n "        _damageMultiplier = _damageMultiplierHead; " \n "        _upperLimit = _limitHead; " \n "      }; " \n "      case ""arms""; " \n "      case ""hands""; " \n "      case ""legs"": { " \n "        _damageMultiplier = _damageMultiplierLimbs; " \n "        _upperLimit = _limitLimbs; " \n "      }; " \n "      case """": { " \n "        _damageMultiplier = _damageMultiplierOverall; " \n "        _upperLimit = _limitOverall; " \n "      }; " \n "      default { " \n "        _damageMultiplier = _damageMultiplierBody; " \n "        _upperLimit = _limitBody; " \n "      }; " \n "    }; " \n "    _newDamage = _newDamage * _damageMultiplier; " \n "    if (_newDamage > _upperLimit) then { " \n "      _newDamage = _upperLimit; " \n "    }; " \n " " \n "    _damage = _oldDamage + _newDamage; " \n "  }; " \n " " \n "  if ( isPlayer _unit ) then { " \n "    if ( lifeState _unit == ""INCAPACITATED"" ) then { " \n "      _damage = _oldDamage; " \n "    } else { " \n "      _this set[ 2, _damage ]; " \n "      _damage = _this call bis_fnc_reviveEhHandleDamage; " \n "    }; " \n "  }; " \n "  _damage " \n "}]";
						isPlayable=1;
						class Inventory
						{
							class primaryWeapon
							{
								name="vn_m1carbine";
								class primaryMuzzleMag
								{
									name="vn_carbine_15_mag";
									ammoLeft=15;
								};
							};
							class secondaryWeapon
							{
								name="vn_m127";
								class primaryMuzzleMag
								{
									name="vn_m127_mag";
									ammoLeft=1;
								};
							};
							class handgun
							{
								name="vn_mx991";
							};
							class binocular
							{
								name="vn_m19_binocs_grey";
							};
							class uniform
							{
								typeName="vn_b_uniform_macv_01_02";
								isBackpack=0;
								class MagazineCargo
								{
									items=1;
									class Item0
									{
										name="vn_prop_food_fresh_01";
										count=24;
										ammoLeft=100;
									};
								};
								class ItemCargo
								{
									items=1;
									class Item0
									{
										name="vn_b_item_firstaidkit";
										count=8;
									};
								};
							};
							class vest
							{
								typeName="vn_b_vest_usarmy_03";
								isBackpack=0;
								class MagazineCargo
								{
									items=1;
									class Item0
									{
										name="vn_m61_grenade_mag";
										count=9;
										ammoLeft=1;
									};
								};
							};
							class backpack
							{
								typeName="vn_b_pack_03";
								isBackpack=1;
								class MagazineCargo
								{
									items=6;
									class Item0
									{
										name="vn_m129_mag";
										count=5;
										ammoLeft=1;
									};
									class Item1
									{
										name="vn_carbine_15_t_mag";
										count=12;
										ammoLeft=15;
									};
									class Item2
									{
										name="vn_m34_grenade_mag";
										count=1;
										ammoLeft=1;
									};
									class Item3
									{
										name="vn_m18_purple_mag";
										count=2;
										ammoLeft=1;
									};
									class Item4
									{
										name="vn_m18_red_mag";
										count=2;
										ammoLeft=1;
									};
									class Item5
									{
										name="vn_mine_m112_remote_mag";
										count=5;
										ammoLeft=1;
									};
								};
								class ItemCargo
								{
									items=2;
									class Item0
									{
										name="vn_b_item_firstaidkit";
										count=2;
									};
									class Item1
									{
										name="vn_b_item_trapkit";
										count=1;
									};
								};
							};
							map="vn_b_item_map";
							compass="vn_b_item_compass";
							watch="vn_b_item_watch";
							radio="vn_b_item_radio_urc10";
							headgear="vn_b_boonie_02_02";
						};
					};
					id=160;
					type="vn_b_men_sf_06";
					atlOffset=1.1444092e-005;
					class CustomAttributes
					{
						class Attribute0
						{
							property="speaker";
							expression="_this setspeaker _value;";
							class Value
							{
								class data
								{
									singleType="STRING";
									value="Male02ENG";
								};
							};
						};
						class Attribute1
						{
							property="pitch";
							expression="_this setpitch _value;";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1.04;
								};
							};
						};
						class Attribute2
						{
							property="enableStamina";
							expression="_this enablestamina _value;";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=0;
								};
							};
						};
						nAttributes=3;
					};
				};
			};
			class Attributes
			{
				init="this addEventHandler [ ""HandleDamage"", { " \n "  params [""_unit"", ""_hitSelection"", ""_damage"",""_source"",""_projectile"",""_hitPartIndex"", ""_instigator"", ""_hitPoint""]; " \n " " \n "  private _damageMultiplierHead = 0.4; " \n "  private _damageMultiplierBody = 0.3; " \n "  private _damageMultiplierLimbs = 0.35; " \n "  private _damageMultiplierOverall = 0.3; " \n "  private _limitHead = 1.0; " \n "  private _limitBody = 0.25; " \n "  private _limitLimbs = 0.1; " \n "  private _limitOverall = 0.25; " \n "  private _oldDamage = 0; " \n "  if (_hitSelection isEqualTo """") then {_oldDamage = damage _unit} else {_oldDamage = _unit getHit _hitSelection}; " \n "  private _newDamage = _damage - _oldDamage max 0; " \n "  private _incomingDamage = _newDamage; " \n "  private _playerHealth = damage _unit; " \n " " \n "  if (_newDamage > 0 && !(_projectile isEqualTo """")) then { " \n "    private _damageMultiplier = _damageMultiplierBody; " \n "    private _upperLimit = _limitBody; " \n "    switch (_hitSelection) do { " \n "      case ""face_hub""; " \n "      case ""head"": { " \n "        _damageMultiplier = _damageMultiplierHead; " \n "        _upperLimit = _limitHead; " \n "      }; " \n "      case ""arms""; " \n "      case ""hands""; " \n "      case ""legs"": { " \n "        _damageMultiplier = _damageMultiplierLimbs; " \n "        _upperLimit = _limitLimbs; " \n "      }; " \n "      case """": { " \n "        _damageMultiplier = _damageMultiplierOverall; " \n "        _upperLimit = _limitOverall; " \n "      }; " \n "      default { " \n "        _damageMultiplier = _damageMultiplierBody; " \n "        _upperLimit = _limitBody; " \n "      }; " \n "    }; " \n "    _newDamage = _newDamage * _damageMultiplier; " \n "    if (_newDamage > _upperLimit) then { " \n "      _newDamage = _upperLimit; " \n "    }; " \n " " \n "    _damage = _oldDamage + _newDamage; " \n "  }; " \n " " \n "  if ( isPlayer _unit ) then { " \n "    if ( lifeState _unit == ""INCAPACITATED"" ) then { " \n "      _damage = _oldDamage; " \n "    } else { " \n "      _this set[ 2, _damage ]; " \n "      _damage = _this call bis_fnc_reviveEhHandleDamage; " \n "    }; " \n "  }; " \n "  _damage " \n "}]";
			};
			id=159;
			atlOffset=1.1444092e-005;
		};
		class Item60
		{
			dataType="Group";
			side="West";
			class Entities
			{
				items=1;
				class Item0
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={1266.0375,51.391949,537.16193};
						angles[]={0,1.5916864,0};
					};
					side="West";
					flags=7;
					class Attributes
					{
						init="this addEventHandler [ ""HandleDamage"", { " \n "  params [""_unit"", ""_hitSelection"", ""_damage"",""_source"",""_projectile"",""_hitPartIndex"", ""_instigator"", ""_hitPoint""]; " \n " " \n "  private _damageMultiplierHead = 0.4; " \n "  private _damageMultiplierBody = 0.3; " \n "  private _damageMultiplierLimbs = 0.25; " \n "  private _damageMultiplierOverall = 0.25; " \n "  private _limitHead = 1.0; " \n "  private _limitBody = 0.25; " \n "  private _limitLimbs = 0.1; " \n "  private _limitOverall = 0.25; " \n "  private _oldDamage = 0; " \n "  if (_hitSelection isEqualTo """") then {_oldDamage = damage _unit} else {_oldDamage = _unit getHit _hitSelection}; " \n "  private _newDamage = _damage - _oldDamage max 0; " \n "  private _incomingDamage = _newDamage; " \n "  private _playerHealth = damage _unit; " \n " " \n "  if (_newDamage > 0 && !(_projectile isEqualTo """")) then { " \n "    private _damageMultiplier = _damageMultiplierBody; " \n "    private _upperLimit = _limitBody; " \n "    switch (_hitSelection) do { " \n "      case ""face_hub""; " \n "      case ""head"": { " \n "        _damageMultiplier = _damageMultiplierHead; " \n "        _upperLimit = _limitHead; " \n "      }; " \n "      case ""arms""; " \n "      case ""hands""; " \n "      case ""legs"": { " \n "        _damageMultiplier = _damageMultiplierLimbs; " \n "        _upperLimit = _limitLimbs; " \n "      }; " \n "      case """": { " \n "        _damageMultiplier = _damageMultiplierOverall; " \n "        _upperLimit = _limitOverall; " \n "      }; " \n "      default { " \n "        _damageMultiplier = _damageMultiplierBody; " \n "        _upperLimit = _limitBody; " \n "      }; " \n "    }; " \n "    _newDamage = _newDamage * _damageMultiplier; " \n "    if (_newDamage > _upperLimit) then { " \n "      _newDamage = _upperLimit; " \n "    }; " \n " " \n "    _damage = _oldDamage + _newDamage; " \n "  }; " \n " " \n "  if ( isPlayer _unit ) then { " \n "    if ( lifeState _unit == ""INCAPACITATED"" ) then { " \n "      _damage = _oldDamage; " \n "    } else { " \n "      _this set[ 2, _damage ]; " \n "      _damage = _this call bis_fnc_reviveEhHandleDamage; " \n "    }; " \n "  }; " \n "  _damage " \n "}]";
						isPlayable=1;
						class Inventory
						{
							class primaryWeapon
							{
								name="vn_m1carbine";
								class primaryMuzzleMag
								{
									name="vn_carbine_15_mag";
									ammoLeft=15;
								};
							};
							class secondaryWeapon
							{
								name="vn_m127";
								class primaryMuzzleMag
								{
									name="vn_m127_mag";
									ammoLeft=1;
								};
							};
							class handgun
							{
								name="vn_mx991";
							};
							class binocular
							{
								name="vn_m19_binocs_grey";
							};
							class uniform
							{
								typeName="vn_b_uniform_macv_01_02";
								isBackpack=0;
								class MagazineCargo
								{
									items=1;
									class Item0
									{
										name="vn_prop_food_fresh_01";
										count=24;
										ammoLeft=100;
									};
								};
								class ItemCargo
								{
									items=1;
									class Item0
									{
										name="vn_b_item_firstaidkit";
										count=8;
									};
								};
							};
							class vest
							{
								typeName="vn_b_vest_usarmy_03";
								isBackpack=0;
								class MagazineCargo
								{
									items=1;
									class Item0
									{
										name="vn_m61_grenade_mag";
										count=9;
										ammoLeft=1;
									};
								};
							};
							class backpack
							{
								typeName="vn_b_pack_03";
								isBackpack=1;
								class MagazineCargo
								{
									items=6;
									class Item0
									{
										name="vn_m129_mag";
										count=5;
										ammoLeft=1;
									};
									class Item1
									{
										name="vn_carbine_15_t_mag";
										count=12;
										ammoLeft=15;
									};
									class Item2
									{
										name="vn_m34_grenade_mag";
										count=1;
										ammoLeft=1;
									};
									class Item3
									{
										name="vn_m18_purple_mag";
										count=2;
										ammoLeft=1;
									};
									class Item4
									{
										name="vn_m18_red_mag";
										count=2;
										ammoLeft=1;
									};
									class Item5
									{
										name="vn_mine_m112_remote_mag";
										count=5;
										ammoLeft=1;
									};
								};
								class ItemCargo
								{
									items=2;
									class Item0
									{
										name="vn_b_item_firstaidkit";
										count=2;
									};
									class Item1
									{
										name="vn_b_item_trapkit";
										count=1;
									};
								};
							};
							map="vn_b_item_map";
							compass="vn_b_item_compass";
							watch="vn_b_item_watch";
							radio="vn_b_item_radio_urc10";
							headgear="vn_b_boonie_02_02";
						};
					};
					id=162;
					type="vn_b_men_sf_06";
					class CustomAttributes
					{
						class Attribute0
						{
							property="speaker";
							expression="_this setspeaker _value;";
							class Value
							{
								class data
								{
									singleType="STRING";
									value="Male02ENG";
								};
							};
						};
						class Attribute1
						{
							property="pitch";
							expression="_this setpitch _value;";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1.04;
								};
							};
						};
						class Attribute2
						{
							property="enableStamina";
							expression="_this enablestamina _value;";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=0;
								};
							};
						};
						nAttributes=3;
					};
				};
			};
			class Attributes
			{
				init="this addEventHandler [ ""HandleDamage"", { " \n "  params [""_unit"", ""_hitSelection"", ""_damage"",""_source"",""_projectile"",""_hitPartIndex"", ""_instigator"", ""_hitPoint""]; " \n " " \n "  private _damageMultiplierHead = 0.4; " \n "  private _damageMultiplierBody = 0.3; " \n "  private _damageMultiplierLimbs = 0.35; " \n "  private _damageMultiplierOverall = 0.3; " \n "  private _limitHead = 1.0; " \n "  private _limitBody = 0.25; " \n "  private _limitLimbs = 0.1; " \n "  private _limitOverall = 0.25; " \n "  private _oldDamage = 0; " \n "  if (_hitSelection isEqualTo """") then {_oldDamage = damage _unit} else {_oldDamage = _unit getHit _hitSelection}; " \n "  private _newDamage = _damage - _oldDamage max 0; " \n "  private _incomingDamage = _newDamage; " \n "  private _playerHealth = damage _unit; " \n " " \n "  if (_newDamage > 0 && !(_projectile isEqualTo """")) then { " \n "    private _damageMultiplier = _damageMultiplierBody; " \n "    private _upperLimit = _limitBody; " \n "    switch (_hitSelection) do { " \n "      case ""face_hub""; " \n "      case ""head"": { " \n "        _damageMultiplier = _damageMultiplierHead; " \n "        _upperLimit = _limitHead; " \n "      }; " \n "      case ""arms""; " \n "      case ""hands""; " \n "      case ""legs"": { " \n "        _damageMultiplier = _damageMultiplierLimbs; " \n "        _upperLimit = _limitLimbs; " \n "      }; " \n "      case """": { " \n "        _damageMultiplier = _damageMultiplierOverall; " \n "        _upperLimit = _limitOverall; " \n "      }; " \n "      default { " \n "        _damageMultiplier = _damageMultiplierBody; " \n "        _upperLimit = _limitBody; " \n "      }; " \n "    }; " \n "    _newDamage = _newDamage * _damageMultiplier; " \n "    if (_newDamage > _upperLimit) then { " \n "      _newDamage = _upperLimit; " \n "    }; " \n " " \n "    _damage = _oldDamage + _newDamage; " \n "  }; " \n " " \n "  if ( isPlayer _unit ) then { " \n "    if ( lifeState _unit == ""INCAPACITATED"" ) then { " \n "      _damage = _oldDamage; " \n "    } else { " \n "      _this set[ 2, _damage ]; " \n "      _damage = _this call bis_fnc_reviveEhHandleDamage; " \n "    }; " \n "  }; " \n "  _damage " \n "}]";
			};
			id=161;
		};
		class Item61
		{
			dataType="Group";
			side="West";
			class Entities
			{
				items=1;
				class Item0
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={1266.059,51.374264,538.3045};
						angles[]={0,1.5916879,0};
					};
					side="West";
					flags=7;
					class Attributes
					{
						init="this addEventHandler [ ""HandleDamage"", { " \n "  params [""_unit"", ""_hitSelection"", ""_damage"",""_source"",""_projectile"",""_hitPartIndex"", ""_instigator"", ""_hitPoint""]; " \n " " \n "  private _damageMultiplierHead = 0.4; " \n "  private _damageMultiplierBody = 0.3; " \n "  private _damageMultiplierLimbs = 0.25; " \n "  private _damageMultiplierOverall = 0.25; " \n "  private _limitHead = 1.0; " \n "  private _limitBody = 0.25; " \n "  private _limitLimbs = 0.1; " \n "  private _limitOverall = 0.25; " \n "  private _oldDamage = 0; " \n "  if (_hitSelection isEqualTo """") then {_oldDamage = damage _unit} else {_oldDamage = _unit getHit _hitSelection}; " \n "  private _newDamage = _damage - _oldDamage max 0; " \n "  private _incomingDamage = _newDamage; " \n "  private _playerHealth = damage _unit; " \n " " \n "  if (_newDamage > 0 && !(_projectile isEqualTo """")) then { " \n "    private _damageMultiplier = _damageMultiplierBody; " \n "    private _upperLimit = _limitBody; " \n "    switch (_hitSelection) do { " \n "      case ""face_hub""; " \n "      case ""head"": { " \n "        _damageMultiplier = _damageMultiplierHead; " \n "        _upperLimit = _limitHead; " \n "      }; " \n "      case ""arms""; " \n "      case ""hands""; " \n "      case ""legs"": { " \n "        _damageMultiplier = _damageMultiplierLimbs; " \n "        _upperLimit = _limitLimbs; " \n "      }; " \n "      case """": { " \n "        _damageMultiplier = _damageMultiplierOverall; " \n "        _upperLimit = _limitOverall; " \n "      }; " \n "      default { " \n "        _damageMultiplier = _damageMultiplierBody; " \n "        _upperLimit = _limitBody; " \n "      }; " \n "    }; " \n "    _newDamage = _newDamage * _damageMultiplier; " \n "    if (_newDamage > _upperLimit) then { " \n "      _newDamage = _upperLimit; " \n "    }; " \n " " \n "    _damage = _oldDamage + _newDamage; " \n "  }; " \n " " \n "  if ( isPlayer _unit ) then { " \n "    if ( lifeState _unit == ""INCAPACITATED"" ) then { " \n "      _damage = _oldDamage; " \n "    } else { " \n "      _this set[ 2, _damage ]; " \n "      _damage = _this call bis_fnc_reviveEhHandleDamage; " \n "    }; " \n "  }; " \n "  _damage " \n "}]";
						isPlayable=1;
						class Inventory
						{
							class primaryWeapon
							{
								name="vn_m1carbine";
								class primaryMuzzleMag
								{
									name="vn_carbine_15_mag";
									ammoLeft=15;
								};
							};
							class secondaryWeapon
							{
								name="vn_m127";
								class primaryMuzzleMag
								{
									name="vn_m127_mag";
									ammoLeft=1;
								};
							};
							class handgun
							{
								name="vn_mx991";
							};
							class binocular
							{
								name="vn_m19_binocs_grey";
							};
							class uniform
							{
								typeName="vn_b_uniform_macv_01_02";
								isBackpack=0;
								class MagazineCargo
								{
									items=1;
									class Item0
									{
										name="vn_prop_food_fresh_01";
										count=24;
										ammoLeft=100;
									};
								};
								class ItemCargo
								{
									items=1;
									class Item0
									{
										name="vn_b_item_firstaidkit";
										count=8;
									};
								};
							};
							class vest
							{
								typeName="vn_b_vest_usarmy_03";
								isBackpack=0;
								class MagazineCargo
								{
									items=1;
									class Item0
									{
										name="vn_m61_grenade_mag";
										count=9;
										ammoLeft=1;
									};
								};
							};
							class backpack
							{
								typeName="vn_b_pack_03";
								isBackpack=1;
								class MagazineCargo
								{
									items=6;
									class Item0
									{
										name="vn_m129_mag";
										count=5;
										ammoLeft=1;
									};
									class Item1
									{
										name="vn_carbine_15_t_mag";
										count=12;
										ammoLeft=15;
									};
									class Item2
									{
										name="vn_m34_grenade_mag";
										count=1;
										ammoLeft=1;
									};
									class Item3
									{
										name="vn_m18_purple_mag";
										count=2;
										ammoLeft=1;
									};
									class Item4
									{
										name="vn_m18_red_mag";
										count=2;
										ammoLeft=1;
									};
									class Item5
									{
										name="vn_mine_m112_remote_mag";
										count=5;
										ammoLeft=1;
									};
								};
								class ItemCargo
								{
									items=2;
									class Item0
									{
										name="vn_b_item_firstaidkit";
										count=2;
									};
									class Item1
									{
										name="vn_b_item_trapkit";
										count=1;
									};
								};
							};
							map="vn_b_item_map";
							compass="vn_b_item_compass";
							watch="vn_b_item_watch";
							radio="vn_b_item_radio_urc10";
							headgear="vn_b_boonie_02_02";
						};
					};
					id=164;
					type="vn_b_men_sf_06";
					class CustomAttributes
					{
						class Attribute0
						{
							property="speaker";
							expression="_this setspeaker _value;";
							class Value
							{
								class data
								{
									singleType="STRING";
									value="Male02ENG";
								};
							};
						};
						class Attribute1
						{
							property="pitch";
							expression="_this setpitch _value;";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1.04;
								};
							};
						};
						class Attribute2
						{
							property="enableStamina";
							expression="_this enablestamina _value;";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=0;
								};
							};
						};
						nAttributes=3;
					};
				};
			};
			class Attributes
			{
				init="this addEventHandler [ ""HandleDamage"", { " \n "  params [""_unit"", ""_hitSelection"", ""_damage"",""_source"",""_projectile"",""_hitPartIndex"", ""_instigator"", ""_hitPoint""]; " \n " " \n "  private _damageMultiplierHead = 0.4; " \n "  private _damageMultiplierBody = 0.3; " \n "  private _damageMultiplierLimbs = 0.35; " \n "  private _damageMultiplierOverall = 0.3; " \n "  private _limitHead = 1.0; " \n "  private _limitBody = 0.25; " \n "  private _limitLimbs = 0.1; " \n "  private _limitOverall = 0.25; " \n "  private _oldDamage = 0; " \n "  if (_hitSelection isEqualTo """") then {_oldDamage = damage _unit} else {_oldDamage = _unit getHit _hitSelection}; " \n "  private _newDamage = _damage - _oldDamage max 0; " \n "  private _incomingDamage = _newDamage; " \n "  private _playerHealth = damage _unit; " \n " " \n "  if (_newDamage > 0 && !(_projectile isEqualTo """")) then { " \n "    private _damageMultiplier = _damageMultiplierBody; " \n "    private _upperLimit = _limitBody; " \n "    switch (_hitSelection) do { " \n "      case ""face_hub""; " \n "      case ""head"": { " \n "        _damageMultiplier = _damageMultiplierHead; " \n "        _upperLimit = _limitHead; " \n "      }; " \n "      case ""arms""; " \n "      case ""hands""; " \n "      case ""legs"": { " \n "        _damageMultiplier = _damageMultiplierLimbs; " \n "        _upperLimit = _limitLimbs; " \n "      }; " \n "      case """": { " \n "        _damageMultiplier = _damageMultiplierOverall; " \n "        _upperLimit = _limitOverall; " \n "      }; " \n "      default { " \n "        _damageMultiplier = _damageMultiplierBody; " \n "        _upperLimit = _limitBody; " \n "      }; " \n "    }; " \n "    _newDamage = _newDamage * _damageMultiplier; " \n "    if (_newDamage > _upperLimit) then { " \n "      _newDamage = _upperLimit; " \n "    }; " \n " " \n "    _damage = _oldDamage + _newDamage; " \n "  }; " \n " " \n "  if ( isPlayer _unit ) then { " \n "    if ( lifeState _unit == ""INCAPACITATED"" ) then { " \n "      _damage = _oldDamage; " \n "    } else { " \n "      _this set[ 2, _damage ]; " \n "      _damage = _this call bis_fnc_reviveEhHandleDamage; " \n "    }; " \n "  }; " \n "  _damage " \n "}]";
			};
			id=163;
		};
		class Item62
		{
			dataType="Group";
			side="West";
			class Entities
			{
				items=1;
				class Item0
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={1266.9437,51.799763,526.66486};
						angles[]={0,1.5916864,0};
					};
					side="West";
					flags=7;
					class Attributes
					{
						init="this addEventHandler [ ""HandleDamage"", { " \n "  params [""_unit"", ""_hitSelection"", ""_damage"",""_source"",""_projectile"",""_hitPartIndex"", ""_instigator"", ""_hitPoint""]; " \n " " \n "  private _damageMultiplierHead = 0.4; " \n "  private _damageMultiplierBody = 0.3; " \n "  private _damageMultiplierLimbs = 0.25; " \n "  private _damageMultiplierOverall = 0.25; " \n "  private _limitHead = 1.0; " \n "  private _limitBody = 0.25; " \n "  private _limitLimbs = 0.1; " \n "  private _limitOverall = 0.25; " \n "  private _oldDamage = 0; " \n "  if (_hitSelection isEqualTo """") then {_oldDamage = damage _unit} else {_oldDamage = _unit getHit _hitSelection}; " \n "  private _newDamage = _damage - _oldDamage max 0; " \n "  private _incomingDamage = _newDamage; " \n "  private _playerHealth = damage _unit; " \n " " \n "  if (_newDamage > 0 && !(_projectile isEqualTo """")) then { " \n "    private _damageMultiplier = _damageMultiplierBody; " \n "    private _upperLimit = _limitBody; " \n "    switch (_hitSelection) do { " \n "      case ""face_hub""; " \n "      case ""head"": { " \n "        _damageMultiplier = _damageMultiplierHead; " \n "        _upperLimit = _limitHead; " \n "      }; " \n "      case ""arms""; " \n "      case ""hands""; " \n "      case ""legs"": { " \n "        _damageMultiplier = _damageMultiplierLimbs; " \n "        _upperLimit = _limitLimbs; " \n "      }; " \n "      case """": { " \n "        _damageMultiplier = _damageMultiplierOverall; " \n "        _upperLimit = _limitOverall; " \n "      }; " \n "      default { " \n "        _damageMultiplier = _damageMultiplierBody; " \n "        _upperLimit = _limitBody; " \n "      }; " \n "    }; " \n "    _newDamage = _newDamage * _damageMultiplier; " \n "    if (_newDamage > _upperLimit) then { " \n "      _newDamage = _upperLimit; " \n "    }; " \n " " \n "    _damage = _oldDamage + _newDamage; " \n "  }; " \n " " \n "  if ( isPlayer _unit ) then { " \n "    if ( lifeState _unit == ""INCAPACITATED"" ) then { " \n "      _damage = _oldDamage; " \n "    } else { " \n "      _this set[ 2, _damage ]; " \n "      _damage = _this call bis_fnc_reviveEhHandleDamage; " \n "    }; " \n "  }; " \n "  _damage " \n "}]";
						isPlayable=1;
						class Inventory
						{
							class primaryWeapon
							{
								name="vn_m1carbine";
								class primaryMuzzleMag
								{
									name="vn_carbine_15_mag";
									ammoLeft=15;
								};
							};
							class secondaryWeapon
							{
								name="vn_m127";
								class primaryMuzzleMag
								{
									name="vn_m127_mag";
									ammoLeft=1;
								};
							};
							class handgun
							{
								name="vn_mx991";
							};
							class binocular
							{
								name="vn_m19_binocs_grey";
							};
							class uniform
							{
								typeName="vn_b_uniform_macv_01_02";
								isBackpack=0;
								class MagazineCargo
								{
									items=1;
									class Item0
									{
										name="vn_prop_food_fresh_01";
										count=24;
										ammoLeft=100;
									};
								};
								class ItemCargo
								{
									items=1;
									class Item0
									{
										name="vn_b_item_firstaidkit";
										count=8;
									};
								};
							};
							class vest
							{
								typeName="vn_b_vest_usarmy_03";
								isBackpack=0;
								class MagazineCargo
								{
									items=1;
									class Item0
									{
										name="vn_m61_grenade_mag";
										count=9;
										ammoLeft=1;
									};
								};
							};
							class backpack
							{
								typeName="vn_b_pack_03";
								isBackpack=1;
								class MagazineCargo
								{
									items=6;
									class Item0
									{
										name="vn_m129_mag";
										count=5;
										ammoLeft=1;
									};
									class Item1
									{
										name="vn_carbine_15_t_mag";
										count=12;
										ammoLeft=15;
									};
									class Item2
									{
										name="vn_m34_grenade_mag";
										count=1;
										ammoLeft=1;
									};
									class Item3
									{
										name="vn_m18_purple_mag";
										count=2;
										ammoLeft=1;
									};
									class Item4
									{
										name="vn_m18_red_mag";
										count=2;
										ammoLeft=1;
									};
									class Item5
									{
										name="vn_mine_m112_remote_mag";
										count=5;
										ammoLeft=1;
									};
								};
								class ItemCargo
								{
									items=2;
									class Item0
									{
										name="vn_b_item_firstaidkit";
										count=2;
									};
									class Item1
									{
										name="vn_b_item_trapkit";
										count=1;
									};
								};
							};
							map="vn_b_item_map";
							compass="vn_b_item_compass";
							watch="vn_b_item_watch";
							radio="vn_b_item_radio_urc10";
							headgear="vn_b_boonie_02_02";
						};
					};
					id=166;
					type="vn_b_men_sf_06";
					atlOffset=3.8146973e-006;
					class CustomAttributes
					{
						class Attribute0
						{
							property="speaker";
							expression="_this setspeaker _value;";
							class Value
							{
								class data
								{
									singleType="STRING";
									value="Male02ENG";
								};
							};
						};
						class Attribute1
						{
							property="pitch";
							expression="_this setpitch _value;";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1.04;
								};
							};
						};
						class Attribute2
						{
							property="enableStamina";
							expression="_this enablestamina _value;";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=0;
								};
							};
						};
						nAttributes=3;
					};
				};
			};
			class Attributes
			{
				init="this addEventHandler [ ""HandleDamage"", { " \n "  params [""_unit"", ""_hitSelection"", ""_damage"",""_source"",""_projectile"",""_hitPartIndex"", ""_instigator"", ""_hitPoint""]; " \n " " \n "  private _damageMultiplierHead = 0.4; " \n "  private _damageMultiplierBody = 0.3; " \n "  private _damageMultiplierLimbs = 0.35; " \n "  private _damageMultiplierOverall = 0.3; " \n "  private _limitHead = 1.0; " \n "  private _limitBody = 0.25; " \n "  private _limitLimbs = 0.1; " \n "  private _limitOverall = 0.25; " \n "  private _oldDamage = 0; " \n "  if (_hitSelection isEqualTo """") then {_oldDamage = damage _unit} else {_oldDamage = _unit getHit _hitSelection}; " \n "  private _newDamage = _damage - _oldDamage max 0; " \n "  private _incomingDamage = _newDamage; " \n "  private _playerHealth = damage _unit; " \n " " \n "  if (_newDamage > 0 && !(_projectile isEqualTo """")) then { " \n "    private _damageMultiplier = _damageMultiplierBody; " \n "    private _upperLimit = _limitBody; " \n "    switch (_hitSelection) do { " \n "      case ""face_hub""; " \n "      case ""head"": { " \n "        _damageMultiplier = _damageMultiplierHead; " \n "        _upperLimit = _limitHead; " \n "      }; " \n "      case ""arms""; " \n "      case ""hands""; " \n "      case ""legs"": { " \n "        _damageMultiplier = _damageMultiplierLimbs; " \n "        _upperLimit = _limitLimbs; " \n "      }; " \n "      case """": { " \n "        _damageMultiplier = _damageMultiplierOverall; " \n "        _upperLimit = _limitOverall; " \n "      }; " \n "      default { " \n "        _damageMultiplier = _damageMultiplierBody; " \n "        _upperLimit = _limitBody; " \n "      }; " \n "    }; " \n "    _newDamage = _newDamage * _damageMultiplier; " \n "    if (_newDamage > _upperLimit) then { " \n "      _newDamage = _upperLimit; " \n "    }; " \n " " \n "    _damage = _oldDamage + _newDamage; " \n "  }; " \n " " \n "  if ( isPlayer _unit ) then { " \n "    if ( lifeState _unit == ""INCAPACITATED"" ) then { " \n "      _damage = _oldDamage; " \n "    } else { " \n "      _this set[ 2, _damage ]; " \n "      _damage = _this call bis_fnc_reviveEhHandleDamage; " \n "    }; " \n "  }; " \n "  _damage " \n "}]";
			};
			id=165;
			atlOffset=3.8146973e-006;
		};
		class Item63
		{
			dataType="Group";
			side="West";
			class Entities
			{
				items=1;
				class Item0
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={1267.0424,51.754807,527.88068};
						angles[]={0,1.5916864,0};
					};
					side="West";
					flags=7;
					class Attributes
					{
						init="this addEventHandler [ ""HandleDamage"", { " \n "  params [""_unit"", ""_hitSelection"", ""_damage"",""_source"",""_projectile"",""_hitPartIndex"", ""_instigator"", ""_hitPoint""]; " \n " " \n "  private _damageMultiplierHead = 0.4; " \n "  private _damageMultiplierBody = 0.3; " \n "  private _damageMultiplierLimbs = 0.25; " \n "  private _damageMultiplierOverall = 0.25; " \n "  private _limitHead = 1.0; " \n "  private _limitBody = 0.25; " \n "  private _limitLimbs = 0.1; " \n "  private _limitOverall = 0.25; " \n "  private _oldDamage = 0; " \n "  if (_hitSelection isEqualTo """") then {_oldDamage = damage _unit} else {_oldDamage = _unit getHit _hitSelection}; " \n "  private _newDamage = _damage - _oldDamage max 0; " \n "  private _incomingDamage = _newDamage; " \n "  private _playerHealth = damage _unit; " \n " " \n "  if (_newDamage > 0 && !(_projectile isEqualTo """")) then { " \n "    private _damageMultiplier = _damageMultiplierBody; " \n "    private _upperLimit = _limitBody; " \n "    switch (_hitSelection) do { " \n "      case ""face_hub""; " \n "      case ""head"": { " \n "        _damageMultiplier = _damageMultiplierHead; " \n "        _upperLimit = _limitHead; " \n "      }; " \n "      case ""arms""; " \n "      case ""hands""; " \n "      case ""legs"": { " \n "        _damageMultiplier = _damageMultiplierLimbs; " \n "        _upperLimit = _limitLimbs; " \n "      }; " \n "      case """": { " \n "        _damageMultiplier = _damageMultiplierOverall; " \n "        _upperLimit = _limitOverall; " \n "      }; " \n "      default { " \n "        _damageMultiplier = _damageMultiplierBody; " \n "        _upperLimit = _limitBody; " \n "      }; " \n "    }; " \n "    _newDamage = _newDamage * _damageMultiplier; " \n "    if (_newDamage > _upperLimit) then { " \n "      _newDamage = _upperLimit; " \n "    }; " \n " " \n "    _damage = _oldDamage + _newDamage; " \n "  }; " \n " " \n "  if ( isPlayer _unit ) then { " \n "    if ( lifeState _unit == ""INCAPACITATED"" ) then { " \n "      _damage = _oldDamage; " \n "    } else { " \n "      _this set[ 2, _damage ]; " \n "      _damage = _this call bis_fnc_reviveEhHandleDamage; " \n "    }; " \n "  }; " \n "  _damage " \n "}]";
						isPlayable=1;
						class Inventory
						{
							class primaryWeapon
							{
								name="vn_m1carbine";
								class primaryMuzzleMag
								{
									name="vn_carbine_15_mag";
									ammoLeft=15;
								};
							};
							class secondaryWeapon
							{
								name="vn_m127";
								class primaryMuzzleMag
								{
									name="vn_m127_mag";
									ammoLeft=1;
								};
							};
							class handgun
							{
								name="vn_mx991";
							};
							class binocular
							{
								name="vn_m19_binocs_grey";
							};
							class uniform
							{
								typeName="vn_b_uniform_macv_01_02";
								isBackpack=0;
								class MagazineCargo
								{
									items=1;
									class Item0
									{
										name="vn_prop_food_fresh_01";
										count=24;
										ammoLeft=100;
									};
								};
								class ItemCargo
								{
									items=1;
									class Item0
									{
										name="vn_b_item_firstaidkit";
										count=8;
									};
								};
							};
							class vest
							{
								typeName="vn_b_vest_usarmy_03";
								isBackpack=0;
								class MagazineCargo
								{
									items=1;
									class Item0
									{
										name="vn_m61_grenade_mag";
										count=9;
										ammoLeft=1;
									};
								};
							};
							class backpack
							{
								typeName="vn_b_pack_03";
								isBackpack=1;
								class MagazineCargo
								{
									items=6;
									class Item0
									{
										name="vn_m129_mag";
										count=5;
										ammoLeft=1;
									};
									class Item1
									{
										name="vn_carbine_15_t_mag";
										count=12;
										ammoLeft=15;
									};
									class Item2
									{
										name="vn_m34_grenade_mag";
										count=1;
										ammoLeft=1;
									};
									class Item3
									{
										name="vn_m18_purple_mag";
										count=2;
										ammoLeft=1;
									};
									class Item4
									{
										name="vn_m18_red_mag";
										count=2;
										ammoLeft=1;
									};
									class Item5
									{
										name="vn_mine_m112_remote_mag";
										count=5;
										ammoLeft=1;
									};
								};
								class ItemCargo
								{
									items=2;
									class Item0
									{
										name="vn_b_item_firstaidkit";
										count=2;
									};
									class Item1
									{
										name="vn_b_item_trapkit";
										count=1;
									};
								};
							};
							map="vn_b_item_map";
							compass="vn_b_item_compass";
							watch="vn_b_item_watch";
							radio="vn_b_item_radio_urc10";
							headgear="vn_b_boonie_02_02";
						};
					};
					id=168;
					type="vn_b_men_sf_06";
					atlOffset=1.1444092e-005;
					class CustomAttributes
					{
						class Attribute0
						{
							property="speaker";
							expression="_this setspeaker _value;";
							class Value
							{
								class data
								{
									singleType="STRING";
									value="Male02ENG";
								};
							};
						};
						class Attribute1
						{
							property="pitch";
							expression="_this setpitch _value;";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1.04;
								};
							};
						};
						class Attribute2
						{
							property="enableStamina";
							expression="_this enablestamina _value;";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=0;
								};
							};
						};
						nAttributes=3;
					};
				};
			};
			class Attributes
			{
				init="this addEventHandler [ ""HandleDamage"", { " \n "  params [""_unit"", ""_hitSelection"", ""_damage"",""_source"",""_projectile"",""_hitPartIndex"", ""_instigator"", ""_hitPoint""]; " \n " " \n "  private _damageMultiplierHead = 0.4; " \n "  private _damageMultiplierBody = 0.3; " \n "  private _damageMultiplierLimbs = 0.35; " \n "  private _damageMultiplierOverall = 0.3; " \n "  private _limitHead = 1.0; " \n "  private _limitBody = 0.25; " \n "  private _limitLimbs = 0.1; " \n "  private _limitOverall = 0.25; " \n "  private _oldDamage = 0; " \n "  if (_hitSelection isEqualTo """") then {_oldDamage = damage _unit} else {_oldDamage = _unit getHit _hitSelection}; " \n "  private _newDamage = _damage - _oldDamage max 0; " \n "  private _incomingDamage = _newDamage; " \n "  private _playerHealth = damage _unit; " \n " " \n "  if (_newDamage > 0 && !(_projectile isEqualTo """")) then { " \n "    private _damageMultiplier = _damageMultiplierBody; " \n "    private _upperLimit = _limitBody; " \n "    switch (_hitSelection) do { " \n "      case ""face_hub""; " \n "      case ""head"": { " \n "        _damageMultiplier = _damageMultiplierHead; " \n "        _upperLimit = _limitHead; " \n "      }; " \n "      case ""arms""; " \n "      case ""hands""; " \n "      case ""legs"": { " \n "        _damageMultiplier = _damageMultiplierLimbs; " \n "        _upperLimit = _limitLimbs; " \n "      }; " \n "      case """": { " \n "        _damageMultiplier = _damageMultiplierOverall; " \n "        _upperLimit = _limitOverall; " \n "      }; " \n "      default { " \n "        _damageMultiplier = _damageMultiplierBody; " \n "        _upperLimit = _limitBody; " \n "      }; " \n "    }; " \n "    _newDamage = _newDamage * _damageMultiplier; " \n "    if (_newDamage > _upperLimit) then { " \n "      _newDamage = _upperLimit; " \n "    }; " \n " " \n "    _damage = _oldDamage + _newDamage; " \n "  }; " \n " " \n "  if ( isPlayer _unit ) then { " \n "    if ( lifeState _unit == ""INCAPACITATED"" ) then { " \n "      _damage = _oldDamage; " \n "    } else { " \n "      _this set[ 2, _damage ]; " \n "      _damage = _this call bis_fnc_reviveEhHandleDamage; " \n "    }; " \n "  }; " \n "  _damage " \n "}]";
			};
			id=167;
			atlOffset=1.1444092e-005;
		};
		class Item64
		{
			dataType="Group";
			side="West";
			class Entities
			{
				items=1;
				class Item0
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={1267.1556,51.705318,529.28302};
						angles[]={0,1.5916864,0};
					};
					side="West";
					flags=7;
					class Attributes
					{
						init="this addEventHandler [ ""HandleDamage"", { " \n "  params [""_unit"", ""_hitSelection"", ""_damage"",""_source"",""_projectile"",""_hitPartIndex"", ""_instigator"", ""_hitPoint""]; " \n " " \n "  private _damageMultiplierHead = 0.4; " \n "  private _damageMultiplierBody = 0.3; " \n "  private _damageMultiplierLimbs = 0.25; " \n "  private _damageMultiplierOverall = 0.25; " \n "  private _limitHead = 1.0; " \n "  private _limitBody = 0.25; " \n "  private _limitLimbs = 0.1; " \n "  private _limitOverall = 0.25; " \n "  private _oldDamage = 0; " \n "  if (_hitSelection isEqualTo """") then {_oldDamage = damage _unit} else {_oldDamage = _unit getHit _hitSelection}; " \n "  private _newDamage = _damage - _oldDamage max 0; " \n "  private _incomingDamage = _newDamage; " \n "  private _playerHealth = damage _unit; " \n " " \n "  if (_newDamage > 0 && !(_projectile isEqualTo """")) then { " \n "    private _damageMultiplier = _damageMultiplierBody; " \n "    private _upperLimit = _limitBody; " \n "    switch (_hitSelection) do { " \n "      case ""face_hub""; " \n "      case ""head"": { " \n "        _damageMultiplier = _damageMultiplierHead; " \n "        _upperLimit = _limitHead; " \n "      }; " \n "      case ""arms""; " \n "      case ""hands""; " \n "      case ""legs"": { " \n "        _damageMultiplier = _damageMultiplierLimbs; " \n "        _upperLimit = _limitLimbs; " \n "      }; " \n "      case """": { " \n "        _damageMultiplier = _damageMultiplierOverall; " \n "        _upperLimit = _limitOverall; " \n "      }; " \n "      default { " \n "        _damageMultiplier = _damageMultiplierBody; " \n "        _upperLimit = _limitBody; " \n "      }; " \n "    }; " \n "    _newDamage = _newDamage * _damageMultiplier; " \n "    if (_newDamage > _upperLimit) then { " \n "      _newDamage = _upperLimit; " \n "    }; " \n " " \n "    _damage = _oldDamage + _newDamage; " \n "  }; " \n " " \n "  if ( isPlayer _unit ) then { " \n "    if ( lifeState _unit == ""INCAPACITATED"" ) then { " \n "      _damage = _oldDamage; " \n "    } else { " \n "      _this set[ 2, _damage ]; " \n "      _damage = _this call bis_fnc_reviveEhHandleDamage; " \n "    }; " \n "  }; " \n "  _damage " \n "}]";
						isPlayable=1;
						class Inventory
						{
							class primaryWeapon
							{
								name="vn_m1carbine";
								class primaryMuzzleMag
								{
									name="vn_carbine_15_mag";
									ammoLeft=15;
								};
							};
							class secondaryWeapon
							{
								name="vn_m127";
								class primaryMuzzleMag
								{
									name="vn_m127_mag";
									ammoLeft=1;
								};
							};
							class handgun
							{
								name="vn_mx991";
							};
							class binocular
							{
								name="vn_m19_binocs_grey";
							};
							class uniform
							{
								typeName="vn_b_uniform_macv_01_02";
								isBackpack=0;
								class MagazineCargo
								{
									items=1;
									class Item0
									{
										name="vn_prop_food_fresh_01";
										count=24;
										ammoLeft=100;
									};
								};
								class ItemCargo
								{
									items=1;
									class Item0
									{
										name="vn_b_item_firstaidkit";
										count=8;
									};
								};
							};
							class vest
							{
								typeName="vn_b_vest_usarmy_03";
								isBackpack=0;
								class MagazineCargo
								{
									items=1;
									class Item0
									{
										name="vn_m61_grenade_mag";
										count=9;
										ammoLeft=1;
									};
								};
							};
							class backpack
							{
								typeName="vn_b_pack_03";
								isBackpack=1;
								class MagazineCargo
								{
									items=6;
									class Item0
									{
										name="vn_m129_mag";
										count=5;
										ammoLeft=1;
									};
									class Item1
									{
										name="vn_carbine_15_t_mag";
										count=12;
										ammoLeft=15;
									};
									class Item2
									{
										name="vn_m34_grenade_mag";
										count=1;
										ammoLeft=1;
									};
									class Item3
									{
										name="vn_m18_purple_mag";
										count=2;
										ammoLeft=1;
									};
									class Item4
									{
										name="vn_m18_red_mag";
										count=2;
										ammoLeft=1;
									};
									class Item5
									{
										name="vn_mine_m112_remote_mag";
										count=5;
										ammoLeft=1;
									};
								};
								class ItemCargo
								{
									items=2;
									class Item0
									{
										name="vn_b_item_firstaidkit";
										count=2;
									};
									class Item1
									{
										name="vn_b_item_trapkit";
										count=1;
									};
								};
							};
							map="vn_b_item_map";
							compass="vn_b_item_compass";
							watch="vn_b_item_watch";
							radio="vn_b_item_radio_urc10";
							headgear="vn_b_boonie_02_02";
						};
					};
					id=170;
					type="vn_b_men_sf_06";
					atlOffset=7.6293945e-006;
					class CustomAttributes
					{
						class Attribute0
						{
							property="speaker";
							expression="_this setspeaker _value;";
							class Value
							{
								class data
								{
									singleType="STRING";
									value="Male02ENG";
								};
							};
						};
						class Attribute1
						{
							property="pitch";
							expression="_this setpitch _value;";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1.04;
								};
							};
						};
						class Attribute2
						{
							property="enableStamina";
							expression="_this enablestamina _value;";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=0;
								};
							};
						};
						nAttributes=3;
					};
				};
			};
			class Attributes
			{
				init="this addEventHandler [ ""HandleDamage"", { " \n "  params [""_unit"", ""_hitSelection"", ""_damage"",""_source"",""_projectile"",""_hitPartIndex"", ""_instigator"", ""_hitPoint""]; " \n " " \n "  private _damageMultiplierHead = 0.4; " \n "  private _damageMultiplierBody = 0.3; " \n "  private _damageMultiplierLimbs = 0.35; " \n "  private _damageMultiplierOverall = 0.3; " \n "  private _limitHead = 1.0; " \n "  private _limitBody = 0.25; " \n "  private _limitLimbs = 0.1; " \n "  private _limitOverall = 0.25; " \n "  private _oldDamage = 0; " \n "  if (_hitSelection isEqualTo """") then {_oldDamage = damage _unit} else {_oldDamage = _unit getHit _hitSelection}; " \n "  private _newDamage = _damage - _oldDamage max 0; " \n "  private _incomingDamage = _newDamage; " \n "  private _playerHealth = damage _unit; " \n " " \n "  if (_newDamage > 0 && !(_projectile isEqualTo """")) then { " \n "    private _damageMultiplier = _damageMultiplierBody; " \n "    private _upperLimit = _limitBody; " \n "    switch (_hitSelection) do { " \n "      case ""face_hub""; " \n "      case ""head"": { " \n "        _damageMultiplier = _damageMultiplierHead; " \n "        _upperLimit = _limitHead; " \n "      }; " \n "      case ""arms""; " \n "      case ""hands""; " \n "      case ""legs"": { " \n "        _damageMultiplier = _damageMultiplierLimbs; " \n "        _upperLimit = _limitLimbs; " \n "      }; " \n "      case """": { " \n "        _damageMultiplier = _damageMultiplierOverall; " \n "        _upperLimit = _limitOverall; " \n "      }; " \n "      default { " \n "        _damageMultiplier = _damageMultiplierBody; " \n "        _upperLimit = _limitBody; " \n "      }; " \n "    }; " \n "    _newDamage = _newDamage * _damageMultiplier; " \n "    if (_newDamage > _upperLimit) then { " \n "      _newDamage = _upperLimit; " \n "    }; " \n " " \n "    _damage = _oldDamage + _newDamage; " \n "  }; " \n " " \n "  if ( isPlayer _unit ) then { " \n "    if ( lifeState _unit == ""INCAPACITATED"" ) then { " \n "      _damage = _oldDamage; " \n "    } else { " \n "      _this set[ 2, _damage ]; " \n "      _damage = _this call bis_fnc_reviveEhHandleDamage; " \n "    }; " \n "  }; " \n "  _damage " \n "}]";
			};
			id=169;
			atlOffset=7.6293945e-006;
		};
		class Item65
		{
			dataType="Group";
			side="West";
			class Entities
			{
				items=1;
				class Item0
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={1267.1976,51.655834,530.58673};
						angles[]={0,1.5916879,0};
					};
					side="West";
					flags=7;
					class Attributes
					{
						init="this addEventHandler [ ""HandleDamage"", { " \n "  params [""_unit"", ""_hitSelection"", ""_damage"",""_source"",""_projectile"",""_hitPartIndex"", ""_instigator"", ""_hitPoint""]; " \n " " \n "  private _damageMultiplierHead = 0.4; " \n "  private _damageMultiplierBody = 0.3; " \n "  private _damageMultiplierLimbs = 0.25; " \n "  private _damageMultiplierOverall = 0.25; " \n "  private _limitHead = 1.0; " \n "  private _limitBody = 0.25; " \n "  private _limitLimbs = 0.1; " \n "  private _limitOverall = 0.25; " \n "  private _oldDamage = 0; " \n "  if (_hitSelection isEqualTo """") then {_oldDamage = damage _unit} else {_oldDamage = _unit getHit _hitSelection}; " \n "  private _newDamage = _damage - _oldDamage max 0; " \n "  private _incomingDamage = _newDamage; " \n "  private _playerHealth = damage _unit; " \n " " \n "  if (_newDamage > 0 && !(_projectile isEqualTo """")) then { " \n "    private _damageMultiplier = _damageMultiplierBody; " \n "    private _upperLimit = _limitBody; " \n "    switch (_hitSelection) do { " \n "      case ""face_hub""; " \n "      case ""head"": { " \n "        _damageMultiplier = _damageMultiplierHead; " \n "        _upperLimit = _limitHead; " \n "      }; " \n "      case ""arms""; " \n "      case ""hands""; " \n "      case ""legs"": { " \n "        _damageMultiplier = _damageMultiplierLimbs; " \n "        _upperLimit = _limitLimbs; " \n "      }; " \n "      case """": { " \n "        _damageMultiplier = _damageMultiplierOverall; " \n "        _upperLimit = _limitOverall; " \n "      }; " \n "      default { " \n "        _damageMultiplier = _damageMultiplierBody; " \n "        _upperLimit = _limitBody; " \n "      }; " \n "    }; " \n "    _newDamage = _newDamage * _damageMultiplier; " \n "    if (_newDamage > _upperLimit) then { " \n "      _newDamage = _upperLimit; " \n "    }; " \n " " \n "    _damage = _oldDamage + _newDamage; " \n "  }; " \n " " \n "  if ( isPlayer _unit ) then { " \n "    if ( lifeState _unit == ""INCAPACITATED"" ) then { " \n "      _damage = _oldDamage; " \n "    } else { " \n "      _this set[ 2, _damage ]; " \n "      _damage = _this call bis_fnc_reviveEhHandleDamage; " \n "    }; " \n "  }; " \n "  _damage " \n "}]";
						isPlayer=1;
						isPlayable=1;
						class Inventory
						{
							class primaryWeapon
							{
								name="vn_m1carbine";
								class primaryMuzzleMag
								{
									name="vn_carbine_15_mag";
									ammoLeft=15;
								};
							};
							class secondaryWeapon
							{
								name="vn_m127";
								class primaryMuzzleMag
								{
									name="vn_m127_mag";
									ammoLeft=1;
								};
							};
							class handgun
							{
								name="vn_mx991";
							};
							class binocular
							{
								name="vn_m19_binocs_grey";
							};
							class uniform
							{
								typeName="vn_b_uniform_macv_01_02";
								isBackpack=0;
								class MagazineCargo
								{
									items=1;
									class Item0
									{
										name="vn_prop_food_fresh_01";
										count=24;
										ammoLeft=100;
									};
								};
								class ItemCargo
								{
									items=1;
									class Item0
									{
										name="vn_b_item_firstaidkit";
										count=8;
									};
								};
							};
							class vest
							{
								typeName="vn_b_vest_usarmy_03";
								isBackpack=0;
								class MagazineCargo
								{
									items=1;
									class Item0
									{
										name="vn_m61_grenade_mag";
										count=9;
										ammoLeft=1;
									};
								};
							};
							class backpack
							{
								typeName="vn_b_pack_03";
								isBackpack=1;
								class MagazineCargo
								{
									items=6;
									class Item0
									{
										name="vn_m129_mag";
										count=5;
										ammoLeft=1;
									};
									class Item1
									{
										name="vn_carbine_15_t_mag";
										count=12;
										ammoLeft=15;
									};
									class Item2
									{
										name="vn_m34_grenade_mag";
										count=1;
										ammoLeft=1;
									};
									class Item3
									{
										name="vn_m18_purple_mag";
										count=2;
										ammoLeft=1;
									};
									class Item4
									{
										name="vn_m18_red_mag";
										count=2;
										ammoLeft=1;
									};
									class Item5
									{
										name="vn_mine_m112_remote_mag";
										count=5;
										ammoLeft=1;
									};
								};
								class ItemCargo
								{
									items=2;
									class Item0
									{
										name="vn_b_item_firstaidkit";
										count=2;
									};
									class Item1
									{
										name="vn_b_item_trapkit";
										count=1;
									};
								};
							};
							map="vn_b_item_map";
							compass="vn_b_item_compass";
							watch="vn_b_item_watch";
							radio="vn_b_item_radio_urc10";
							headgear="vn_b_boonie_02_02";
						};
					};
					id=172;
					type="vn_b_men_sf_06";
					atlOffset=1.1444092e-005;
					class CustomAttributes
					{
						class Attribute0
						{
							property="speaker";
							expression="_this setspeaker _value;";
							class Value
							{
								class data
								{
									singleType="STRING";
									value="Male02ENG";
								};
							};
						};
						class Attribute1
						{
							property="pitch";
							expression="_this setpitch _value;";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1.04;
								};
							};
						};
						class Attribute2
						{
							property="enableStamina";
							expression="_this enablestamina _value;";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=0;
								};
							};
						};
						nAttributes=3;
					};
				};
			};
			class Attributes
			{
			};
			id=171;
			atlOffset=1.1444092e-005;
		};
		class Item66
		{
			dataType="Object";
			class PositionInfo
			{
				position[]={1223.4656,49.266426,631.01758};
				angles[]={6.2398791,2.8030686,0.059928458};
			};
			side="Empty";
			flags=4;
			class Attributes
			{
				name="arsenal_cleanup_0";
				disableSimulation=1;
			};
			id=173;
			type="Land_vn_object_trashcan_01";
			atlOffset=-7.6293945e-006;
		};
		class Item67
		{
			dataType="Object";
			class PositionInfo
			{
				position[]={1363.8879,53.677719,564.05579};
				angles[]={6.2498641,0,0.016662678};
			};
			side="Empty";
			flags=4;
			class Attributes
			{
				name="arsenal_cleanup_2";
				disableSimulation=1;
			};
			id=174;
			type="Land_vn_object_trashcan_01";
			atlOffset=3.8146973e-006;
		};
		class Item68
		{
			dataType="Object";
			class PositionInfo
			{
				position[]={1781.3628,39.747322,154.73016};
				angles[]={6.2132993,1.7037904,6.2332263};
			};
			side="Empty";
			flags=4;
			class Attributes
			{
				name="arsenal_cleanup_1";
				disableSimulation=1;
			};
			id=175;
			type="Land_vn_object_trashcan_01";
			atlOffset=-4.9591064e-005;
		};
		class Item69
		{
			dataType="Object";
			class PositionInfo
			{
				position[]={1689.8406,48.708794,331.8486};
				angles[]={6.2731848,1.7814775,6.2565274};
			};
			side="Empty";
			flags=4;
			class Attributes
			{
				name="arsenal_cleanup_3";
				disableSimulation=1;
			};
			id=176;
			type="Land_vn_object_trashcan_01";
			atlOffset=-0.0016670227;
		};
		class Item70
		{
			dataType="Marker";
			position[]={1559.8605,52.5453,412.20679};
			name="arsenal_3";
			text="@STR_vn_mf_arsenal";
			type="mil_dot";
			colorName="ColorPink";
			id=177;
		};
		class Item71
		{
			dataType="Layer";
			name="Air support #1";
			class Entities
			{
				items=3;
				class Item0
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={1520.7142,52.006863,393.55051};
						angles[]={6.2698488,1.6727779,0.02999169};
					};
					side="Empty";
					flags=4;
					class Attributes
					{
					};
					id=179;
					type="Sign_Arrow_Direction_Green_F";
					atlOffset=3.8146973e-006;
				};
				class Item1
				{
					dataType="Logic";
					class PositionInfo
					{
						position[]={1522.6664,52.00996,397.32785};
						angles[]={6.276526,5.9810514,0.0066592805};
					};
					init="['SPE_P47', 0] call vn_mf_fnc_veh_asset_3DEN_spawn_point";
					id=180;
					type="Logic";
				};
				class Item2
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={1526.3265,53.144703,397.31125};
						angles[]={0,4.7732258,0};
					};
					side="Empty";
					flags=5;
					class Attributes
					{
						disableSimulation=1;
					};
					id=181;
					type="vn_signad_sponsors_f";
					atlOffset=3.8146973e-006;
					class CustomAttributes
					{
						class Attribute0
						{
							property="allowDamage";
							expression="_this allowdamage _value;";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=0;
								};
							};
						};
						nAttributes=1;
					};
				};
			};
			id=178;
			atlOffset=-0.021141052;
		};
		class Item72
		{
			dataType="Layer";
			name="Heavy air support #1";
			class Entities
			{
				items=3;
				class Item0
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={1520.8265,51.26664,363.04318};
						angles[]={6.2631893,1.6727779,0.013332055};
					};
					side="Empty";
					flags=4;
					class Attributes
					{
					};
					id=183;
					type="Sign_Arrow_Direction_Green_F";
				};
				class Item1
				{
					dataType="Logic";
					class PositionInfo
					{
						position[]={1522.7797,51.331532,366.82004};
						angles[]={6.256525,5.9810514,0.016666256};
					};
					init="['SPE_P47', 0] call vn_mf_fnc_veh_asset_3DEN_spawn_point";
					id=184;
					type="Logic";
				};
				class Item2
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={1526.5101,52.548317,367.5007};
						angles[]={0,4.7907286,0};
					};
					side="Empty";
					flags=5;
					class Attributes
					{
						disableSimulation=1;
					};
					id=185;
					type="vn_signad_sponsors_f";
					class CustomAttributes
					{
						class Attribute0
						{
							property="allowDamage";
							expression="_this allowdamage _value;";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=0;
								};
							};
						};
						nAttributes=1;
					};
				};
			};
			id=182;
			atlOffset=0.00099182129;
		};
		class Item73
		{
			dataType="Layer";
			name="Jet spawn #1";
			class Entities
			{
				items=4;
				class Item0
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={1689.8846,51.767693,310.71515};
						angles[]={0,4.1001377,0};
					};
					side="Empty";
					flags=5;
					class Attributes
					{
						disableSimulation=1;
					};
					id=187;
					type="Land_vn_airport_01_hangar_f";
					atlOffset=0.0059089661;
					class CustomAttributes
					{
						class Attribute0
						{
							property="DoorStates";
							expression="['init',_this,_value] call bis_fnc_3DENAttributeDoorStates;";
							class Value
							{
								class data
								{
									singleType="ARRAY";
									class value
									{
										items=3;
										class Item0
										{
											class data
											{
												singleType="SCALAR";
												value=42;
											};
										};
										class Item1
										{
											class data
											{
												singleType="SCALAR";
												value=0;
											};
										};
										class Item2
										{
											class data
											{
												singleType="SCALAR";
												value=0;
											};
										};
									};
								};
							};
						};
						class Attribute1
						{
							property="allowDamage";
							expression="_this allowdamage _value;";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=0;
								};
							};
						};
						nAttributes=2;
					};
				};
				class Item1
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={1690.5851,49.148144,311.57727};
						angles[]={0,1.00565,0};
					};
					side="Empty";
					flags=4;
					class Attributes
					{
					};
					id=188;
					type="Sign_Arrow_Direction_Green_F";
					atlOffset=0.0068092346;
				};
				class Item2
				{
					dataType="Logic";
					class PositionInfo
					{
						position[]={1689.4354,49.272907,320.92648};
						angles[]={0,5.3122106,0};
					};
					init="['jets', 0] call vn_mf_fnc_veh_asset_3DEN_spawn_point";
					id=189;
					type="Logic";
					atlOffset=0.1896553;
				};
				class Item3
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={1692.7244,50.347305,322.96585};
						angles[]={0,4.1236978,0};
					};
					side="Empty";
					flags=5;
					class Attributes
					{
						disableSimulation=1;
					};
					id=190;
					type="vn_signad_sponsors_f";
					atlOffset=0.12257767;
					class CustomAttributes
					{
						class Attribute0
						{
							property="allowDamage";
							expression="_this allowdamage _value;";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=0;
								};
							};
						};
						nAttributes=1;
					};
				};
			};
			id=186;
			atlOffset=0.11029053;
		};
		class Item74
		{
			dataType="Layer";
			name="Light transport spawns";
			class Entities
			{
				items=4;
				class Item0
				{
					dataType="Layer";
					name="Light transport spawn #1";
					class Entities
					{
						items=3;
						class Item0
						{
							dataType="Object";
							class PositionInfo
							{
								position[]={1348.0393,53.609951,565.79407};
								angles[]={6.2598572,3.2420781,0};
							};
							side="Empty";
							flags=4;
							class Attributes
							{
							};
							id=193;
							type="Sign_Arrow_Direction_Green_F";
						};
						class Item1
						{
							dataType="Logic";
							class PositionInfo
							{
								position[]={1350.6155,53.525085,564.22327};
								angles[]={6.2432065,1.2671438,0.010000871};
							};
							init="['light_transport', 0] call vn_mf_fnc_veh_asset_3DEN_spawn_point";
							id=194;
							type="Logic";
						};
						class Item2
						{
							dataType="Object";
							class PositionInfo
							{
								position[]={1351.4417,54.616959,561.41174};
								angles[]={0,0.076815836,0};
							};
							side="Empty";
							flags=5;
							class Attributes
							{
								disableSimulation=1;
							};
							id=195;
							type="vn_signad_sponsors_f";
							class CustomAttributes
							{
								class Attribute0
								{
									property="allowDamage";
									expression="_this allowdamage _value;";
									class Value
									{
										class data
										{
											singleType="BOOL";
											value=0;
										};
									};
								};
								nAttributes=1;
							};
						};
					};
					id=192;
					atlOffset=0.0075111389;
				};
				class Item1
				{
					dataType="Layer";
					name="Light transport spawn #2";
					class Entities
					{
						items=3;
						class Item0
						{
							dataType="Object";
							class PositionInfo
							{
								position[]={1211.7611,52.673649,671.85266};
								angles[]={0,2.8067095,0};
							};
							side="Empty";
							class Attributes
							{
							};
							id=197;
							type="Sign_Arrow_Direction_Green_F";
							atlOffset=0.14813232;
						};
						class Item1
						{
							dataType="Object";
							class PositionInfo
							{
								position[]={1216.1429,53.611977,670.66223};
								angles[]={0,6.1108699,0};
							};
							side="Empty";
							flags=5;
							class Attributes
							{
								disableSimulation=1;
							};
							id=198;
							type="vn_signad_sponsors_f";
							class CustomAttributes
							{
								class Attribute0
								{
									property="allowDamage";
									expression="_this allowdamage _value;";
									class Value
									{
										class data
										{
											singleType="BOOL";
											value=0;
										};
									};
								};
								nAttributes=1;
							};
						};
						class Item2
						{
							dataType="Logic";
							class PositionInfo
							{
								position[]={1214.3246,52.645794,672.93274};
								angles[]={6.1901226,0.41297981,0.016666256};
							};
							init="['light_transport', 0] call vn_mf_fnc_veh_asset_3DEN_spawn_point";
							id=199;
							type="Logic";
							atlOffset=-3.8146973e-006;
						};
					};
					id=196;
					atlOffset=0.037563324;
				};
				class Item2
				{
					dataType="Layer";
					name="Light transport spawn #2_1";
					class Entities
					{
						items=3;
						class Item0
						{
							dataType="Object";
							class PositionInfo
							{
								position[]={1204.5414,51.889553,665.32092};
								angles[]={0,1.9441955,0};
							};
							side="Empty";
							class Attributes
							{
							};
							id=201;
							type="Sign_Arrow_Direction_Green_F";
							atlOffset=0.41168594;
						};
						class Item1
						{
							dataType="Object";
							class PositionInfo
							{
								position[]={1208.2982,53.041588,667.87024};
								angles[]={0,5.2494831,0};
							};
							side="Empty";
							flags=5;
							class Attributes
							{
								disableSimulation=1;
							};
							id=202;
							type="vn_signad_sponsors_f";
							atlOffset=-3.8146973e-006;
							class CustomAttributes
							{
								class Attribute0
								{
									property="allowDamage";
									expression="_this allowdamage _value;";
									class Value
									{
										class data
										{
											singleType="BOOL";
											value=0;
										};
									};
								};
								nAttributes=1;
							};
						};
						class Item2
						{
							dataType="Logic";
							class PositionInfo
							{
								position[]={1205.391,51.784523,667.96985};
								angles[]={6.1604719,5.8344307,0.046633169};
							};
							init="['light_transport', 0] call vn_mf_fnc_veh_asset_3DEN_spawn_point";
							id=203;
							type="Logic";
							atlOffset=-3.8146973e-006;
						};
					};
					id=200;
					atlOffset=0.10136795;
				};
				class Item3
				{
					dataType="Layer";
					name="Light transport spawn #4";
					class Entities
					{
						items=3;
						class Item0
						{
							dataType="Object";
							class PositionInfo
							{
								position[]={1210.5648,51.325871,655.1886};
								angles[]={0,0.78359783,0};
							};
							side="Empty";
							class Attributes
							{
							};
							id=205;
							type="Sign_Arrow_Direction_Green_F";
							atlOffset=0.52589417;
						};
						class Item1
						{
							dataType="Object";
							class PositionInfo
							{
								position[]={1209.181,52.230301,659.56653};
								angles[]={0,4.2010164,0};
							};
							side="Empty";
							flags=5;
							class Attributes
							{
								disableSimulation=1;
							};
							id=206;
							type="vn_signad_sponsors_f";
							class CustomAttributes
							{
								class Attribute0
								{
									property="allowDamage";
									expression="_this allowdamage _value;";
									class Value
									{
										class data
										{
											singleType="BOOL";
											value=0;
										};
									};
								};
								nAttributes=1;
							};
						};
						class Item2
						{
							dataType="Logic";
							class PositionInfo
							{
								position[]={1207.8529,50.783741,656.98743};
								angles[]={6.183517,4.7855873,0.056606073};
							};
							init="['light_transport', 0] call vn_mf_fnc_veh_asset_3DEN_spawn_point";
							id=207;
							type="Logic";
							atlOffset=-3.8146973e-006;
						};
					};
					id=204;
					atlOffset=0.1219101;
				};
			};
			id=191;
			atlOffset=1.3646965;
		};
		class Item75
		{
			dataType="Layer";
			name="Light air spawns";
			class Entities
			{
				items=4;
				class Item0
				{
					dataType="Layer";
					name="Light air spawn #1";
					class Entities
					{
						items=3;
						class Item0
						{
							dataType="Object";
							class PositionInfo
							{
								position[]={1843.52,40.160419,146.1944};
								angles[]={0,3.0958667,0};
							};
							side="Empty";
							flags=5;
							class Attributes
							{
								disableSimulation=1;
							};
							id=210;
							type="vn_signad_sponsors_f";
							atlOffset=-3.8146973e-006;
							class CustomAttributes
							{
								class Attribute0
								{
									property="allowDamage";
									expression="_this allowdamage _value;";
									class Value
									{
										class data
										{
											singleType="BOOL";
											value=0;
										};
									};
								};
								nAttributes=1;
							};
						};
						class Item1
						{
							dataType="Object";
							class PositionInfo
							{
								position[]={1847.8784,38.897373,140.02985};
								angles[]={6.2498641,6.2611012,6.2698536};
							};
							side="Empty";
							flags=4;
							class Attributes
							{
							};
							id=211;
							type="Sign_Arrow_Direction_Green_F";
						};
						class Item2
						{
							dataType="Logic";
							class PositionInfo
							{
								position[]={1843.2573,38.946468,142.42828};
								angles[]={6.2698536,4.2861967,6.2731905};
							};
							init="['SPE_P47', 0] call vn_mf_fnc_veh_asset_3DEN_spawn_point";
							id=212;
							type="Logic";
						};
					};
					id=209;
					atlOffset=-0.013515472;
				};
				class Item1
				{
					dataType="Layer";
					name="Light air spawn #2";
					class Entities
					{
						items=3;
						class Item0
						{
							dataType="Object";
							class PositionInfo
							{
								position[]={1812.6597,38.802666,141.17828};
								angles[]={6.2698536,6.2611012,0.0033296358};
							};
							side="Empty";
							flags=4;
							class Attributes
							{
							};
							id=214;
							type="Sign_Arrow_Direction_Green_F";
						};
						class Item1
						{
							dataType="Logic";
							class PositionInfo
							{
								position[]={1808.6694,38.746361,142.64801};
								angles[]={6.2665229,4.2861967,0.0033296358};
							};
							init="['SPE_P47', 0] call vn_mf_fnc_veh_asset_3DEN_spawn_point";
							id=215;
							type="Logic";
							atlOffset=-3.8146973e-006;
						};
						class Item2
						{
							dataType="Object";
							class PositionInfo
							{
								position[]={1808.9321,39.975826,146.41364};
								angles[]={0,3.0958667,0};
							};
							side="Empty";
							flags=5;
							class Attributes
							{
								disableSimulation=1;
							};
							id=216;
							type="vn_signad_sponsors_f";
							atlOffset=-3.8146973e-006;
							class CustomAttributes
							{
								class Attribute0
								{
									property="allowDamage";
									expression="_this allowdamage _value;";
									class Value
									{
										class data
										{
											singleType="BOOL";
											value=0;
										};
									};
								};
								nAttributes=1;
							};
						};
					};
					id=213;
					atlOffset=0.012897491;
				};
				class Item2
				{
					dataType="Layer";
					name="Light air spawn #2_1";
					class Entities
					{
						items=3;
						class Item0
						{
							dataType="Object";
							class PositionInfo
							{
								position[]={1521.9076,53.685188,480.40646};
								angles[]={6.2166171,1.5754278,0};
							};
							side="Empty";
							flags=4;
							class Attributes
							{
							};
							id=218;
							type="Sign_Arrow_Direction_Green_F";
						};
						class Item1
						{
							dataType="Logic";
							class PositionInfo
							{
								position[]={1523.484,53.870598,484.35599};
								angles[]={6.2299004,5.8837142,0.0033335788};
							};
							init="['SPE_P47', 0] call vn_mf_fnc_veh_asset_3DEN_spawn_point";
							id=219;
							type="Logic";
						};
						class Item2
						{
							dataType="Object";
							class PositionInfo
							{
								position[]={1527.3529,54.96217,484.29953};
								angles[]={0,4.6933784,0};
							};
							side="Empty";
							flags=5;
							class Attributes
							{
								disableSimulation=1;
							};
							id=220;
							type="vn_signad_sponsors_f";
							class CustomAttributes
							{
								class Attribute0
								{
									property="allowDamage";
									expression="_this allowdamage _value;";
									class Value
									{
										class data
										{
											singleType="BOOL";
											value=0;
										};
									};
								};
								nAttributes=1;
							};
						};
					};
					id=217;
					atlOffset=-0.01971817;
				};
				class Item3
				{
					dataType="Layer";
					name="Light air spawn #2_2";
					class Entities
					{
						items=3;
						class Item0
						{
							dataType="Object";
							class PositionInfo
							{
								position[]={1521.7006,52.323265,450.2048};
								angles[]={6.2465348,1.5754278,6.2798557};
							};
							side="Empty";
							flags=4;
							class Attributes
							{
							};
							id=222;
							type="Sign_Arrow_Direction_Green_F";
						};
						class Item1
						{
							dataType="Logic";
							class PositionInfo
							{
								position[]={1523.2767,52.408932,454.15402};
								angles[]={6.2432065,5.883709,0.010000871};
							};
							init="['SPE_P47', 0] call vn_mf_fnc_veh_asset_3DEN_spawn_point";
							id=223;
							type="Logic";
							atlOffset=3.8146973e-006;
						};
						class Item2
						{
							dataType="Object";
							class PositionInfo
							{
								position[]={1527.0345,53.543098,453.79074};
								angles[]={0,4.6933784,0};
							};
							side="Empty";
							flags=5;
							class Attributes
							{
								disableSimulation=1;
							};
							id=224;
							type="vn_signad_sponsors_f";
							class CustomAttributes
							{
								class Attribute0
								{
									property="allowDamage";
									expression="_this allowdamage _value;";
									class Value
									{
										class data
										{
											singleType="BOOL";
											value=0;
										};
									};
								};
								nAttributes=1;
							};
						};
					};
					id=221;
					atlOffset=-1.1444092e-005;
				};
			};
			id=208;
			atlOffset=-1.3424339;
		};
		class Item76
		{
			dataType="Layer";
			name="Air transport spawns";
			class Entities
			{
				items=2;
				class Item0
				{
					dataType="Layer";
					name="Air transport spawn #1";
					class Entities
					{
						items=3;
						class Item0
						{
							dataType="Object";
							class PositionInfo
							{
								position[]={1829.978,38.937408,140.88336};
								angles[]={6.2798557,6.2611012,0.013332055};
							};
							side="Empty";
							flags=4;
							class Attributes
							{
							};
							id=227;
							type="Sign_Arrow_Direction_Green_F";
						};
						class Item1
						{
							dataType="Logic";
							class PositionInfo
							{
								position[]={1825.6997,38.840813,142.38141};
								angles[]={6.2731905,4.2861967,0.0099949092};
							};
							init="['SPE_P47', 0] call vn_mf_fnc_veh_asset_3DEN_spawn_point";
							id=228;
							type="Logic";
						};
						class Item2
						{
							dataType="Object";
							class PositionInfo
							{
								position[]={1825.9624,40.036655,146.14801};
								angles[]={0,3.0958667,0};
							};
							side="Empty";
							flags=5;
							class Attributes
							{
								disableSimulation=1;
							};
							id=229;
							type="vn_signad_sponsors_f";
							atlOffset=3.8146973e-006;
							class CustomAttributes
							{
								class Attribute0
								{
									property="allowDamage";
									expression="_this allowdamage _value;";
									class Value
									{
										class data
										{
											singleType="BOOL";
											value=0;
										};
									};
								};
								nAttributes=1;
							};
						};
					};
					id=226;
					atlOffset=0.0097160339;
				};
				class Item1
				{
					dataType="Layer";
					name="Air transport spawn #1_1";
					class Entities
					{
						items=3;
						class Item0
						{
							dataType="Object";
							class PositionInfo
							{
								position[]={1521.2396,52.039673,422.5256};
								angles[]={0.003311686,1.6727779,0};
							};
							side="Empty";
							flags=4;
							class Attributes
							{
							};
							id=231;
							type="Sign_Arrow_Direction_Green_F";
						};
						class Item1
						{
							dataType="Logic";
							class PositionInfo
							{
								position[]={1523.192,51.970001,426.30301};
								angles[]={0,5.9810514,0};
							};
							init="['SPE_P47', 0] call SPE_P47_3DEN_spawn_point";
							id=232;
							type="Logic";
						};
						class Item2
						{
							dataType="Object";
							class PositionInfo
							{
								position[]={1526.8969,53.112877,425.57687};
								angles[]={0,4.7907286,0};
							};
							side="Empty";
							flags=5;
							class Attributes
							{
								disableSimulation=1;
							};
							id=233;
							type="vn_signad_sponsors_f";
							atlOffset=-3.8146973e-006;
							class CustomAttributes
							{
								class Attribute0
								{
									property="allowDamage";
									expression="_this allowdamage _value;";
									class Value
									{
										class data
										{
											singleType="BOOL";
											value=0;
										};
									};
								};
								nAttributes=1;
							};
						};
					};
					id=230;
					atlOffset=0.00025558472;
				};
			};
			id=225;
			atlOffset=-4.0307236;
		};
		class Item77
		{
			dataType="Layer";
			name="Patrol spawns";
			class Entities
			{
				items=4;
				class Item0
				{
					dataType="Layer";
					name="Patrol spawn #1";
					class Entities
					{
						items=3;
						class Item0
						{
							dataType="Object";
							class PositionInfo
							{
								position[]={1355.1575,53.69714,565.80579};
								angles[]={6.2332273,3.2420781,0.013332055};
							};
							side="Empty";
							flags=4;
							class Attributes
							{
							};
							id=236;
							type="Sign_Arrow_Direction_Green_F";
							atlOffset=-3.8146973e-006;
						};
						class Item1
						{
							dataType="Object";
							class PositionInfo
							{
								position[]={1358.5588,54.675465,561.42346};
								angles[]={0,0.076815836,0};
							};
							side="Empty";
							flags=5;
							class Attributes
							{
								disableSimulation=1;
							};
							id=237;
							type="vn_signad_sponsors_f";
							class CustomAttributes
							{
								class Attribute0
								{
									property="allowDamage";
									expression="_this allowdamage _value;";
									class Value
									{
										class data
										{
											singleType="BOOL";
											value=0;
										};
									};
								};
								nAttributes=1;
							};
						};
						class Item2
						{
							dataType="Logic";
							class PositionInfo
							{
								position[]={1357.7336,53.594864,564.23499};
								angles[]={6.2332273,1.2671438,0.013332055};
							};
							init="['patrol', 0] call vn_mf_fnc_veh_asset_3DEN_spawn_point";
							id=238;
							type="Logic";
						};
					};
					id=235;
					atlOffset=0.015171051;
				};
				class Item1
				{
					dataType="Layer";
					name="Patrol spawn #1_1";
					class Entities
					{
						items=3;
						class Item0
						{
							dataType="Object";
							class PositionInfo
							{
								position[]={1237.9252,52.456699,665.36682};
								angles[]={0,4.0405035,0};
							};
							side="Empty";
							class Attributes
							{
							};
							id=240;
							type="Sign_Arrow_Direction_Green_F";
							atlOffset=0.70023346;
						};
						class Item1
						{
							dataType="Object";
							class PositionInfo
							{
								position[]={1237.6156,52.341427,661.17786};
								angles[]={0,1.2827753,0};
							};
							side="Empty";
							flags=5;
							class Attributes
							{
								disableSimulation=1;
							};
							id=241;
							type="vn_signad_sponsors_f";
							class CustomAttributes
							{
								class Attribute0
								{
									property="allowDamage";
									expression="_this allowdamage _value;";
									class Value
									{
										class data
										{
											singleType="BOOL";
											value=0;
										};
									};
								};
								nAttributes=1;
							};
						};
						class Item2
						{
							dataType="Logic";
							class PositionInfo
							{
								position[]={1239.0209,51.326675,662.5177};
								angles[]={6.1539106,1.8153893,6.2531958};
							};
							init="['patrol', 0] call vn_mf_fnc_veh_asset_3DEN_spawn_point";
							id=242;
							type="Logic";
						};
					};
					id=239;
					atlOffset=0.16648102;
				};
				class Item2
				{
					dataType="Layer";
					name="Patrol spawn #3";
					class Entities
					{
						items=3;
						class Item0
						{
							dataType="Object";
							class PositionInfo
							{
								position[]={1231.0472,53.385796,673.21008};
								angles[]={0,3.4474387,0};
							};
							side="Empty";
							class Attributes
							{
							};
							id=244;
							type="Sign_Arrow_Direction_Green_F";
							atlOffset=0.66333008;
						};
						class Item1
						{
							dataType="Object";
							class PositionInfo
							{
								position[]={1233.9535,53.348587,669.06067};
								angles[]={0,0.57443506,0};
							};
							side="Empty";
							flags=5;
							class Attributes
							{
								disableSimulation=1;
							};
							id=245;
							type="vn_signad_sponsors_f";
							class CustomAttributes
							{
								class Attribute0
								{
									property="allowDamage";
									expression="_this allowdamage _value;";
									class Value
									{
										class data
										{
											singleType="BOOL";
											value=0;
										};
									};
								};
								nAttributes=1;
							};
						};
						class Item2
						{
							dataType="Logic";
							class PositionInfo
							{
								position[]={1234.5414,52.538319,673.12122};
								angles[]={6.2033553,1.8153893,6.2498641};
							};
							init="['patrol', 0] call vn_mf_fnc_veh_asset_3DEN_spawn_point";
							id=246;
							type="Logic";
						};
					};
					id=243;
					atlOffset=0.1599617;
				};
				class Item3
				{
					dataType="Layer";
					name="Patrol spawn #3_1";
					class Entities
					{
						items=3;
						class Item0
						{
							dataType="Object";
							class PositionInfo
							{
								position[]={1220.7094,53.381145,672.76672};
								angles[]={0,3.1689034,0};
							};
							side="Empty";
							class Attributes
							{
							};
							id=248;
							type="Sign_Arrow_Direction_Green_F";
							atlOffset=0.56462097;
						};
						class Item1
						{
							dataType="Object";
							class PositionInfo
							{
								position[]={1224.6732,53.796944,671.30725};
								angles[]={0,6.2408338,0};
							};
							side="Empty";
							flags=5;
							class Attributes
							{
								disableSimulation=1;
							};
							id=249;
							type="vn_signad_sponsors_f";
							class CustomAttributes
							{
								class Attribute0
								{
									property="allowDamage";
									expression="_this allowdamage _value;";
									class Value
									{
										class data
										{
											singleType="BOOL";
											value=0;
										};
									};
								};
								nAttributes=1;
							};
						};
						class Item2
						{
							dataType="Logic";
							class PositionInfo
							{
								position[]={1224.8969,52.756588,672.62122};
								angles[]={6.2099838,1.1985958,6.2731848};
							};
							init="['patrol', 0] call vn_mf_fnc_veh_asset_3DEN_spawn_point";
							id=250;
							type="Logic";
						};
					};
					id=247;
					atlOffset=0.12878799;
				};
			};
			id=234;
			atlOffset=2.2510109;
		};
		class Item78
		{
			dataType="Layer";
			name="Heavy transport spawns";
			class Entities
			{
				items=6;
				class Item0
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={1328.4731,54.077595,543.78369};
						angles[]={0.036650803,6.2515082,0.0033296358};
					};
					side="Empty";
					flags=4;
					class Attributes
					{
					};
					id=252;
					type="Sign_Arrow_Direction_Green_F";
					atlOffset=-3.8146973e-006;
				};
				class Item1
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={1325.0894,55.349098,538.10889};
						angles[]={0,1.5915517,0};
					};
					side="Empty";
					flags=5;
					class Attributes
					{
						disableSimulation=1;
					};
					id=253;
					type="vn_signad_sponsors_f";
					atlOffset=3.8146973e-006;
					class CustomAttributes
					{
						class Attribute0
						{
							property="allowDamage";
							expression="_this allowdamage _value;";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=0;
								};
							};
						};
						nAttributes=1;
					};
				};
				class Item2
				{
					dataType="Logic";
					class PositionInfo
					{
						position[]={1326.52,54.189075,539.2041};
						angles[]={0.029989703,3.915524,0.0099949092};
					};
					init="['transport_heavy', 0] call vn_mf_fnc_veh_asset_3DEN_spawn_point";
					id=254;
					type="Logic";
				};
				class Item3
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={1329.2515,53.744587,553.47803};
						angles[]={0.029989703,0.090792708,0.0033296358};
					};
					side="Empty";
					flags=4;
					class Attributes
					{
					};
					id=255;
					type="Sign_Arrow_Direction_Green_F";
				};
				class Item4
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={1326.2612,54.708267,556.00049};
						angles[]={0,1.7750646,0};
					};
					side="Empty";
					flags=5;
					class Attributes
					{
						disableSimulation=1;
					};
					id=256;
					type="vn_signad_sponsors_f";
					class CustomAttributes
					{
						class Attribute0
						{
							property="allowDamage";
							expression="_this allowdamage _value;";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=0;
								};
							};
						};
						nAttributes=1;
					};
				};
				class Item5
				{
					dataType="Logic";
					class PositionInfo
					{
						position[]={1327.5854,53.676525,553.20117};
						angles[]={0.036649179,3.915524,0.0066682254};
					};
					init="['transport_heavy', 0] call vn_mf_fnc_veh_asset_3DEN_spawn_point";
					id=257;
					type="Logic";
				};
			};
			id=251;
			atlOffset=0.0015258789;
		};
		class Item79
		{
			dataType="Layer";
			name="Truck spawns";
			class Entities
			{
				items=6;
				class Item0
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={1303.7826,53.340595,560.58325};
						angles[]={0.029989703,0.20799702,0};
					};
					side="Empty";
					flags=4;
					class Attributes
					{
					};
					id=259;
					type="Sign_Arrow_Direction_Green_F";
					atlOffset=3.8146973e-006;
				};
				class Item1
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={1301.6576,54.501717,555.84302};
						angles[]={0,1.5393865,0};
					};
					side="Empty";
					flags=5;
					class Attributes
					{
						disableSimulation=1;
					};
					id=260;
					type="vn_signad_sponsors_f";
					atlOffset=3.8146973e-006;
					class CustomAttributes
					{
						class Attribute0
						{
							property="allowDamage";
							expression="_this allowdamage _value;";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=0;
								};
							};
						};
						nAttributes=1;
					};
				};
				class Item2
				{
					dataType="Logic";
					class PositionInfo
					{
						position[]={1302.8607,53.354481,557.2063};
						angles[]={0.019996032,3.915524,0.010000871};
					};
					init="['transport_trucks', 0] call vn_mf_fnc_veh_asset_3DEN_spawn_point";
					id=261;
					type="Logic";
				};
				class Item3
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={1323.7974,54.452465,529.29443};
						angles[]={0.016666256,0.090792708,0.019996032};
					};
					side="Empty";
					flags=4;
					class Attributes
					{
					};
					id=262;
					type="Sign_Arrow_Direction_Green_F";
				};
				class Item4
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={1324.7749,55.411171,535.79883};
						angles[]={0,1.7064573,0};
					};
					side="Empty";
					flags=5;
					class Attributes
					{
						disableSimulation=1;
					};
					id=263;
					type="vn_signad_sponsors_f";
					atlOffset=3.8146973e-006;
					class CustomAttributes
					{
						class Attribute0
						{
							property="allowDamage";
							expression="_this allowdamage _value;";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=0;
								};
							};
						};
						nAttributes=1;
					};
				};
				class Item5
				{
					dataType="Logic";
					class PositionInfo
					{
						position[]={1325.6704,54.347878,533.33154};
						angles[]={0.019996032,3.915524,0.016662678};
					};
					init="['transport_trucks', 0] call vn_mf_fnc_veh_asset_3DEN_spawn_point";
					id=264;
					type="Logic";
				};
			};
			id=258;
			atlOffset=-0.0048789978;
		};
		class Item80
		{
			dataType="Layer";
			name="Utility spawns";
			class Entities
			{
				items=9;
				class Item0
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={1283.2709,53.778793,551.29712};
						angles[]={0,4.7627535,0};
					};
					side="Empty";
					flags=5;
					class Attributes
					{
						disableSimulation=1;
					};
					id=266;
					type="vn_signad_sponsors_f";
					atlOffset=3.8146973e-006;
					class CustomAttributes
					{
						class Attribute0
						{
							property="allowDamage";
							expression="_this allowdamage _value;";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=0;
								};
							};
						};
						nAttributes=1;
					};
				};
				class Item1
				{
					dataType="Logic";
					class PositionInfo
					{
						position[]={1281.9564,52.546333,550.38306};
						angles[]={6.2432065,3.915524,0.053282689};
					};
					init="['utility', 0] call vn_mf_fnc_veh_asset_3DEN_spawn_point";
					id=267;
					type="Logic";
				};
				class Item2
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={1278.6166,52.35471,548.68774};
						angles[]={6.256525,1.6231606,0.056606073};
					};
					side="Empty";
					flags=4;
					class Attributes
					{
					};
					id=268;
					type="Sign_Arrow_Direction_Green_F";
					atlOffset=3.8146973e-006;
				};
				class Item3
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={1283.0765,53.631821,545.65112};
						angles[]={0,4.7627535,0};
					};
					side="Empty";
					flags=5;
					class Attributes
					{
						disableSimulation=1;
					};
					id=269;
					type="vn_signad_sponsors_f";
					class CustomAttributes
					{
						class Attribute0
						{
							property="allowDamage";
							expression="_this allowdamage _value;";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=0;
								};
							};
						};
						nAttributes=1;
					};
				};
				class Item4
				{
					dataType="Logic";
					class PositionInfo
					{
						position[]={1281.7621,52.40239,544.73755};
						angles[]={6.2765174,3.915524,0.06656827};
					};
					init="['utility', 0] call vn_mf_fnc_veh_asset_3DEN_spawn_point";
					id=270;
					type="Logic";
				};
				class Item5
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={1278.4222,52.235256,543.04224};
						angles[]={6.2731848,1.6231606,0.06324815};
					};
					side="Empty";
					flags=4;
					class Attributes
					{
					};
					id=271;
					type="Sign_Arrow_Direction_Green_F";
				};
				class Item6
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={1282.7142,53.610294,539.54565};
						angles[]={0,4.7627535,0};
					};
					side="Empty";
					flags=5;
					class Attributes
					{
						disableSimulation=1;
					};
					id=272;
					type="vn_signad_sponsors_f";
					class CustomAttributes
					{
						class Attribute0
						{
							property="allowDamage";
							expression="_this allowdamage _value;";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=0;
								};
							};
						};
						nAttributes=1;
					};
				};
				class Item7
				{
					dataType="Logic";
					class PositionInfo
					{
						position[]={1281.3998,52.387108,538.63208};
						angles[]={0.0066682254,3.915524,0.069887079};
					};
					init="['utility', 0] call vn_mf_fnc_veh_asset_3DEN_spawn_point";
					id=273;
					type="Logic";
				};
				class Item8
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={1278.0599,52.243141,536.93677};
						angles[]={0.016662678,1.6231606,0.06656827};
					};
					side="Empty";
					flags=4;
					class Attributes
					{
					};
					id=274;
					type="Sign_Arrow_Direction_Green_F";
				};
			};
			id=265;
			atlOffset=0.011581421;
		};
		class Item81
		{
			dataType="Layer";
			name="Heavy fire support spawns";
			class Entities
			{
				items=3;
				class Item0
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={1300.6351,53.612331,539.32739};
						angles[]={0.02666023,4.748518,0.046631888};
					};
					side="Empty";
					flags=4;
					class Attributes
					{
					};
					id=276;
					type="Sign_Arrow_Direction_Green_F";
				};
				class Item1
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={1296.8314,54.562038,535.75903};
						angles[]={0,1.6227804,0};
					};
					side="Empty";
					flags=5;
					class Attributes
					{
						disableSimulation=1;
					};
					id=277;
					type="vn_signad_sponsors_f";
					class CustomAttributes
					{
						class Attribute0
						{
							property="allowDamage";
							expression="_this allowdamage _value;";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=0;
								};
							};
						};
						nAttributes=1;
					};
				};
				class Item2
				{
					dataType="Logic";
					class PositionInfo
					{
						position[]={1298.0111,53.460991,536.84009};
						angles[]={0.023328418,0.63948864,0.053282689};
					};
					init="['heavy_fire_support', 0] call vn_mf_fnc_veh_asset_3DEN_spawn_point";
					id=278;
					type="Logic";
				};
			};
			id=275;
			atlOffset=0.0015144348;
		};
		class Item82
		{
			dataType="Layer";
			name="Light fire support spawns";
			class Entities
			{
				items=3;
				class Item0
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={1300.7377,53.430664,549.34253};
						angles[]={0.0033296358,4.7231941,0.036649179};
					};
					side="Empty";
					flags=4;
					class Attributes
					{
					};
					id=280;
					type="Sign_Arrow_Direction_Green_F";
				};
				class Item1
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={1297.516,54.4063,546.13013};
						angles[]={0,1.6183306,0};
					};
					side="Empty";
					flags=5;
					class Attributes
					{
						disableSimulation=1;
					};
					id=281;
					type="vn_signad_sponsors_f";
					class CustomAttributes
					{
						class Attribute0
						{
							property="allowDamage";
							expression="_this allowdamage _value;";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=0;
								};
							};
						};
						nAttributes=1;
					};
				};
				class Item2
				{
					dataType="Logic";
					class PositionInfo
					{
						position[]={1299.2865,53.336529,547.0271};
						angles[]={0.0066682254,0.5512622,0.046631888};
					};
					init="['light_fire_support', 0] call vn_mf_fnc_veh_asset_3DEN_spawn_point";
					id=282;
					type="Logic";
				};
			};
			id=279;
			atlOffset=-0.002822876;
		};
		class Item83
		{
			dataType="Group";
			side="West";
			class Entities
			{
				items=1;
				class Item0
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={1258.7571,51.277531,526.57629};
						angles[]={0,1.5916864,0};
					};
					side="West";
					flags=7;
					class Attributes
					{
						init="this addEventHandler [ ""HandleDamage"", { " \n "  params [""_unit"", ""_hitSelection"", ""_damage"",""_source"",""_projectile"",""_hitPartIndex"", ""_instigator"", ""_hitPoint""]; " \n " " \n "  private _damageMultiplierHead = 0.4; " \n "  private _damageMultiplierBody = 0.3; " \n "  private _damageMultiplierLimbs = 0.25; " \n "  private _damageMultiplierOverall = 0.25; " \n "  private _limitHead = 1.0; " \n "  private _limitBody = 0.25; " \n "  private _limitLimbs = 0.1; " \n "  private _limitOverall = 0.25; " \n "  private _oldDamage = 0; " \n "  if (_hitSelection isEqualTo """") then {_oldDamage = damage _unit} else {_oldDamage = _unit getHit _hitSelection}; " \n "  private _newDamage = _damage - _oldDamage max 0; " \n "  private _incomingDamage = _newDamage; " \n "  private _playerHealth = damage _unit; " \n " " \n "  if (_newDamage > 0 && !(_projectile isEqualTo """")) then { " \n "    private _damageMultiplier = _damageMultiplierBody; " \n "    private _upperLimit = _limitBody; " \n "    switch (_hitSelection) do { " \n "      case ""face_hub""; " \n "      case ""head"": { " \n "        _damageMultiplier = _damageMultiplierHead; " \n "        _upperLimit = _limitHead; " \n "      }; " \n "      case ""arms""; " \n "      case ""hands""; " \n "      case ""legs"": { " \n "        _damageMultiplier = _damageMultiplierLimbs; " \n "        _upperLimit = _limitLimbs; " \n "      }; " \n "      case """": { " \n "        _damageMultiplier = _damageMultiplierOverall; " \n "        _upperLimit = _limitOverall; " \n "      }; " \n "      default { " \n "        _damageMultiplier = _damageMultiplierBody; " \n "        _upperLimit = _limitBody; " \n "      }; " \n "    }; " \n "    _newDamage = _newDamage * _damageMultiplier; " \n "    if (_newDamage > _upperLimit) then { " \n "      _newDamage = _upperLimit; " \n "    }; " \n " " \n "    _damage = _oldDamage + _newDamage; " \n "  }; " \n " " \n "  if ( isPlayer _unit ) then { " \n "    if ( lifeState _unit == ""INCAPACITATED"" ) then { " \n "      _damage = _oldDamage; " \n "    } else { " \n "      _this set[ 2, _damage ]; " \n "      _damage = _this call bis_fnc_reviveEhHandleDamage; " \n "    }; " \n "  }; " \n "  _damage " \n "}]";
						isPlayable=1;
						class Inventory
						{
							class primaryWeapon
							{
								name="vn_m1carbine";
								class primaryMuzzleMag
								{
									name="vn_carbine_15_mag";
									ammoLeft=15;
								};
							};
							class secondaryWeapon
							{
								name="vn_m127";
								class primaryMuzzleMag
								{
									name="vn_m127_mag";
									ammoLeft=1;
								};
							};
							class handgun
							{
								name="vn_mx991";
							};
							class binocular
							{
								name="vn_m19_binocs_grey";
							};
							class uniform
							{
								typeName="vn_b_uniform_macv_01_02";
								isBackpack=0;
								class MagazineCargo
								{
									items=1;
									class Item0
									{
										name="vn_prop_food_fresh_01";
										count=24;
										ammoLeft=100;
									};
								};
								class ItemCargo
								{
									items=1;
									class Item0
									{
										name="vn_b_item_firstaidkit";
										count=8;
									};
								};
							};
							class vest
							{
								typeName="vn_b_vest_usarmy_03";
								isBackpack=0;
								class MagazineCargo
								{
									items=1;
									class Item0
									{
										name="vn_m61_grenade_mag";
										count=9;
										ammoLeft=1;
									};
								};
							};
							class backpack
							{
								typeName="vn_b_pack_03";
								isBackpack=1;
								class MagazineCargo
								{
									items=6;
									class Item0
									{
										name="vn_m129_mag";
										count=5;
										ammoLeft=1;
									};
									class Item1
									{
										name="vn_carbine_15_t_mag";
										count=12;
										ammoLeft=15;
									};
									class Item2
									{
										name="vn_m34_grenade_mag";
										count=1;
										ammoLeft=1;
									};
									class Item3
									{
										name="vn_m18_purple_mag";
										count=2;
										ammoLeft=1;
									};
									class Item4
									{
										name="vn_m18_red_mag";
										count=2;
										ammoLeft=1;
									};
									class Item5
									{
										name="vn_mine_m112_remote_mag";
										count=5;
										ammoLeft=1;
									};
								};
								class ItemCargo
								{
									items=2;
									class Item0
									{
										name="vn_b_item_firstaidkit";
										count=2;
									};
									class Item1
									{
										name="vn_b_item_trapkit";
										count=1;
									};
								};
							};
							map="vn_b_item_map";
							compass="vn_b_item_compass";
							watch="vn_b_item_watch";
							radio="vn_b_item_radio_urc10";
							headgear="vn_b_boonie_02_02";
						};
					};
					id=284;
					type="vn_b_men_sf_06";
					atlOffset=7.6293945e-006;
					class CustomAttributes
					{
						class Attribute0
						{
							property="speaker";
							expression="_this setspeaker _value;";
							class Value
							{
								class data
								{
									singleType="STRING";
									value="Male02ENG";
								};
							};
						};
						class Attribute1
						{
							property="pitch";
							expression="_this setpitch _value;";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1.04;
								};
							};
						};
						class Attribute2
						{
							property="enableStamina";
							expression="_this enablestamina _value;";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=0;
								};
							};
						};
						nAttributes=3;
					};
				};
			};
			class Attributes
			{
				init="this addEventHandler [ ""HandleDamage"", { " \n "  params [""_unit"", ""_hitSelection"", ""_damage"",""_source"",""_projectile"",""_hitPartIndex"", ""_instigator"", ""_hitPoint""]; " \n " " \n "  private _damageMultiplierHead = 0.4; " \n "  private _damageMultiplierBody = 0.3; " \n "  private _damageMultiplierLimbs = 0.35; " \n "  private _damageMultiplierOverall = 0.3; " \n "  private _limitHead = 1.0; " \n "  private _limitBody = 0.25; " \n "  private _limitLimbs = 0.1; " \n "  private _limitOverall = 0.25; " \n "  private _oldDamage = 0; " \n "  if (_hitSelection isEqualTo """") then {_oldDamage = damage _unit} else {_oldDamage = _unit getHit _hitSelection}; " \n "  private _newDamage = _damage - _oldDamage max 0; " \n "  private _incomingDamage = _newDamage; " \n "  private _playerHealth = damage _unit; " \n " " \n "  if (_newDamage > 0 && !(_projectile isEqualTo """")) then { " \n "    private _damageMultiplier = _damageMultiplierBody; " \n "    private _upperLimit = _limitBody; " \n "    switch (_hitSelection) do { " \n "      case ""face_hub""; " \n "      case ""head"": { " \n "        _damageMultiplier = _damageMultiplierHead; " \n "        _upperLimit = _limitHead; " \n "      }; " \n "      case ""arms""; " \n "      case ""hands""; " \n "      case ""legs"": { " \n "        _damageMultiplier = _damageMultiplierLimbs; " \n "        _upperLimit = _limitLimbs; " \n "      }; " \n "      case """": { " \n "        _damageMultiplier = _damageMultiplierOverall; " \n "        _upperLimit = _limitOverall; " \n "      }; " \n "      default { " \n "        _damageMultiplier = _damageMultiplierBody; " \n "        _upperLimit = _limitBody; " \n "      }; " \n "    }; " \n "    _newDamage = _newDamage * _damageMultiplier; " \n "    if (_newDamage > _upperLimit) then { " \n "      _newDamage = _upperLimit; " \n "    }; " \n " " \n "    _damage = _oldDamage + _newDamage; " \n "  }; " \n " " \n "  if ( isPlayer _unit ) then { " \n "    if ( lifeState _unit == ""INCAPACITATED"" ) then { " \n "      _damage = _oldDamage; " \n "    } else { " \n "      _this set[ 2, _damage ]; " \n "      _damage = _this call bis_fnc_reviveEhHandleDamage; " \n "    }; " \n "  }; " \n "  _damage " \n "}]";
			};
			id=283;
			atlOffset=7.6293945e-006;
		};
		class Item84
		{
			dataType="Group";
			side="West";
			class Entities
			{
				items=1;
				class Item0
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={1258.7444,51.228935,527.77014};
						angles[]={0,1.5916864,0};
					};
					side="West";
					flags=7;
					class Attributes
					{
						init="this addEventHandler [ ""HandleDamage"", { " \n "  params [""_unit"", ""_hitSelection"", ""_damage"",""_source"",""_projectile"",""_hitPartIndex"", ""_instigator"", ""_hitPoint""]; " \n " " \n "  private _damageMultiplierHead = 0.4; " \n "  private _damageMultiplierBody = 0.3; " \n "  private _damageMultiplierLimbs = 0.25; " \n "  private _damageMultiplierOverall = 0.25; " \n "  private _limitHead = 1.0; " \n "  private _limitBody = 0.25; " \n "  private _limitLimbs = 0.1; " \n "  private _limitOverall = 0.25; " \n "  private _oldDamage = 0; " \n "  if (_hitSelection isEqualTo """") then {_oldDamage = damage _unit} else {_oldDamage = _unit getHit _hitSelection}; " \n "  private _newDamage = _damage - _oldDamage max 0; " \n "  private _incomingDamage = _newDamage; " \n "  private _playerHealth = damage _unit; " \n " " \n "  if (_newDamage > 0 && !(_projectile isEqualTo """")) then { " \n "    private _damageMultiplier = _damageMultiplierBody; " \n "    private _upperLimit = _limitBody; " \n "    switch (_hitSelection) do { " \n "      case ""face_hub""; " \n "      case ""head"": { " \n "        _damageMultiplier = _damageMultiplierHead; " \n "        _upperLimit = _limitHead; " \n "      }; " \n "      case ""arms""; " \n "      case ""hands""; " \n "      case ""legs"": { " \n "        _damageMultiplier = _damageMultiplierLimbs; " \n "        _upperLimit = _limitLimbs; " \n "      }; " \n "      case """": { " \n "        _damageMultiplier = _damageMultiplierOverall; " \n "        _upperLimit = _limitOverall; " \n "      }; " \n "      default { " \n "        _damageMultiplier = _damageMultiplierBody; " \n "        _upperLimit = _limitBody; " \n "      }; " \n "    }; " \n "    _newDamage = _newDamage * _damageMultiplier; " \n "    if (_newDamage > _upperLimit) then { " \n "      _newDamage = _upperLimit; " \n "    }; " \n " " \n "    _damage = _oldDamage + _newDamage; " \n "  }; " \n " " \n "  if ( isPlayer _unit ) then { " \n "    if ( lifeState _unit == ""INCAPACITATED"" ) then { " \n "      _damage = _oldDamage; " \n "    } else { " \n "      _this set[ 2, _damage ]; " \n "      _damage = _this call bis_fnc_reviveEhHandleDamage; " \n "    }; " \n "  }; " \n "  _damage " \n "}]";
						isPlayable=1;
						class Inventory
						{
							class primaryWeapon
							{
								name="vn_m1carbine";
								class primaryMuzzleMag
								{
									name="vn_carbine_15_mag";
									ammoLeft=15;
								};
							};
							class secondaryWeapon
							{
								name="vn_m127";
								class primaryMuzzleMag
								{
									name="vn_m127_mag";
									ammoLeft=1;
								};
							};
							class handgun
							{
								name="vn_mx991";
							};
							class binocular
							{
								name="vn_m19_binocs_grey";
							};
							class uniform
							{
								typeName="vn_b_uniform_macv_01_02";
								isBackpack=0;
								class MagazineCargo
								{
									items=1;
									class Item0
									{
										name="vn_prop_food_fresh_01";
										count=24;
										ammoLeft=100;
									};
								};
								class ItemCargo
								{
									items=1;
									class Item0
									{
										name="vn_b_item_firstaidkit";
										count=8;
									};
								};
							};
							class vest
							{
								typeName="vn_b_vest_usarmy_03";
								isBackpack=0;
								class MagazineCargo
								{
									items=1;
									class Item0
									{
										name="vn_m61_grenade_mag";
										count=9;
										ammoLeft=1;
									};
								};
							};
							class backpack
							{
								typeName="vn_b_pack_03";
								isBackpack=1;
								class MagazineCargo
								{
									items=6;
									class Item0
									{
										name="vn_m129_mag";
										count=5;
										ammoLeft=1;
									};
									class Item1
									{
										name="vn_carbine_15_t_mag";
										count=12;
										ammoLeft=15;
									};
									class Item2
									{
										name="vn_m34_grenade_mag";
										count=1;
										ammoLeft=1;
									};
									class Item3
									{
										name="vn_m18_purple_mag";
										count=2;
										ammoLeft=1;
									};
									class Item4
									{
										name="vn_m18_red_mag";
										count=2;
										ammoLeft=1;
									};
									class Item5
									{
										name="vn_mine_m112_remote_mag";
										count=5;
										ammoLeft=1;
									};
								};
								class ItemCargo
								{
									items=2;
									class Item0
									{
										name="vn_b_item_firstaidkit";
										count=2;
									};
									class Item1
									{
										name="vn_b_item_trapkit";
										count=1;
									};
								};
							};
							map="vn_b_item_map";
							compass="vn_b_item_compass";
							watch="vn_b_item_watch";
							radio="vn_b_item_radio_urc10";
							headgear="vn_b_boonie_02_02";
						};
					};
					id=286;
					type="vn_b_men_sf_06";
					atlOffset=7.6293945e-006;
					class CustomAttributes
					{
						class Attribute0
						{
							property="speaker";
							expression="_this setspeaker _value;";
							class Value
							{
								class data
								{
									singleType="STRING";
									value="Male02ENG";
								};
							};
						};
						class Attribute1
						{
							property="pitch";
							expression="_this setpitch _value;";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1.04;
								};
							};
						};
						class Attribute2
						{
							property="enableStamina";
							expression="_this enablestamina _value;";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=0;
								};
							};
						};
						nAttributes=3;
					};
				};
			};
			class Attributes
			{
				init="this addEventHandler [ ""HandleDamage"", { " \n "  params [""_unit"", ""_hitSelection"", ""_damage"",""_source"",""_projectile"",""_hitPartIndex"", ""_instigator"", ""_hitPoint""]; " \n " " \n "  private _damageMultiplierHead = 0.4; " \n "  private _damageMultiplierBody = 0.3; " \n "  private _damageMultiplierLimbs = 0.35; " \n "  private _damageMultiplierOverall = 0.3; " \n "  private _limitHead = 1.0; " \n "  private _limitBody = 0.25; " \n "  private _limitLimbs = 0.1; " \n "  private _limitOverall = 0.25; " \n "  private _oldDamage = 0; " \n "  if (_hitSelection isEqualTo """") then {_oldDamage = damage _unit} else {_oldDamage = _unit getHit _hitSelection}; " \n "  private _newDamage = _damage - _oldDamage max 0; " \n "  private _incomingDamage = _newDamage; " \n "  private _playerHealth = damage _unit; " \n " " \n "  if (_newDamage > 0 && !(_projectile isEqualTo """")) then { " \n "    private _damageMultiplier = _damageMultiplierBody; " \n "    private _upperLimit = _limitBody; " \n "    switch (_hitSelection) do { " \n "      case ""face_hub""; " \n "      case ""head"": { " \n "        _damageMultiplier = _damageMultiplierHead; " \n "        _upperLimit = _limitHead; " \n "      }; " \n "      case ""arms""; " \n "      case ""hands""; " \n "      case ""legs"": { " \n "        _damageMultiplier = _damageMultiplierLimbs; " \n "        _upperLimit = _limitLimbs; " \n "      }; " \n "      case """": { " \n "        _damageMultiplier = _damageMultiplierOverall; " \n "        _upperLimit = _limitOverall; " \n "      }; " \n "      default { " \n "        _damageMultiplier = _damageMultiplierBody; " \n "        _upperLimit = _limitBody; " \n "      }; " \n "    }; " \n "    _newDamage = _newDamage * _damageMultiplier; " \n "    if (_newDamage > _upperLimit) then { " \n "      _newDamage = _upperLimit; " \n "    }; " \n " " \n "    _damage = _oldDamage + _newDamage; " \n "  }; " \n " " \n "  if ( isPlayer _unit ) then { " \n "    if ( lifeState _unit == ""INCAPACITATED"" ) then { " \n "      _damage = _oldDamage; " \n "    } else { " \n "      _this set[ 2, _damage ]; " \n "      _damage = _this call bis_fnc_reviveEhHandleDamage; " \n "    }; " \n "  }; " \n "  _damage " \n "}]";
			};
			id=285;
			atlOffset=7.6293945e-006;
		};
		class Item85
		{
			dataType="Group";
			side="West";
			class Entities
			{
				items=1;
				class Item0
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={1258.9709,51.192616,529.14124};
						angles[]={0,1.5916864,0};
					};
					side="West";
					flags=7;
					class Attributes
					{
						init="this addEventHandler [ ""HandleDamage"", { " \n "  params [""_unit"", ""_hitSelection"", ""_damage"",""_source"",""_projectile"",""_hitPartIndex"", ""_instigator"", ""_hitPoint""]; " \n " " \n "  private _damageMultiplierHead = 0.4; " \n "  private _damageMultiplierBody = 0.3; " \n "  private _damageMultiplierLimbs = 0.25; " \n "  private _damageMultiplierOverall = 0.25; " \n "  private _limitHead = 1.0; " \n "  private _limitBody = 0.25; " \n "  private _limitLimbs = 0.1; " \n "  private _limitOverall = 0.25; " \n "  private _oldDamage = 0; " \n "  if (_hitSelection isEqualTo """") then {_oldDamage = damage _unit} else {_oldDamage = _unit getHit _hitSelection}; " \n "  private _newDamage = _damage - _oldDamage max 0; " \n "  private _incomingDamage = _newDamage; " \n "  private _playerHealth = damage _unit; " \n " " \n "  if (_newDamage > 0 && !(_projectile isEqualTo """")) then { " \n "    private _damageMultiplier = _damageMultiplierBody; " \n "    private _upperLimit = _limitBody; " \n "    switch (_hitSelection) do { " \n "      case ""face_hub""; " \n "      case ""head"": { " \n "        _damageMultiplier = _damageMultiplierHead; " \n "        _upperLimit = _limitHead; " \n "      }; " \n "      case ""arms""; " \n "      case ""hands""; " \n "      case ""legs"": { " \n "        _damageMultiplier = _damageMultiplierLimbs; " \n "        _upperLimit = _limitLimbs; " \n "      }; " \n "      case """": { " \n "        _damageMultiplier = _damageMultiplierOverall; " \n "        _upperLimit = _limitOverall; " \n "      }; " \n "      default { " \n "        _damageMultiplier = _damageMultiplierBody; " \n "        _upperLimit = _limitBody; " \n "      }; " \n "    }; " \n "    _newDamage = _newDamage * _damageMultiplier; " \n "    if (_newDamage > _upperLimit) then { " \n "      _newDamage = _upperLimit; " \n "    }; " \n " " \n "    _damage = _oldDamage + _newDamage; " \n "  }; " \n " " \n "  if ( isPlayer _unit ) then { " \n "    if ( lifeState _unit == ""INCAPACITATED"" ) then { " \n "      _damage = _oldDamage; " \n "    } else { " \n "      _this set[ 2, _damage ]; " \n "      _damage = _this call bis_fnc_reviveEhHandleDamage; " \n "    }; " \n "  }; " \n "  _damage " \n "}]";
						isPlayable=1;
						class Inventory
						{
							class primaryWeapon
							{
								name="vn_m1carbine";
								class primaryMuzzleMag
								{
									name="vn_carbine_15_mag";
									ammoLeft=15;
								};
							};
							class secondaryWeapon
							{
								name="vn_m127";
								class primaryMuzzleMag
								{
									name="vn_m127_mag";
									ammoLeft=1;
								};
							};
							class handgun
							{
								name="vn_mx991";
							};
							class binocular
							{
								name="vn_m19_binocs_grey";
							};
							class uniform
							{
								typeName="vn_b_uniform_macv_01_02";
								isBackpack=0;
								class MagazineCargo
								{
									items=1;
									class Item0
									{
										name="vn_prop_food_fresh_01";
										count=24;
										ammoLeft=100;
									};
								};
								class ItemCargo
								{
									items=1;
									class Item0
									{
										name="vn_b_item_firstaidkit";
										count=8;
									};
								};
							};
							class vest
							{
								typeName="vn_b_vest_usarmy_03";
								isBackpack=0;
								class MagazineCargo
								{
									items=1;
									class Item0
									{
										name="vn_m61_grenade_mag";
										count=9;
										ammoLeft=1;
									};
								};
							};
							class backpack
							{
								typeName="vn_b_pack_03";
								isBackpack=1;
								class MagazineCargo
								{
									items=6;
									class Item0
									{
										name="vn_m129_mag";
										count=5;
										ammoLeft=1;
									};
									class Item1
									{
										name="vn_carbine_15_t_mag";
										count=12;
										ammoLeft=15;
									};
									class Item2
									{
										name="vn_m34_grenade_mag";
										count=1;
										ammoLeft=1;
									};
									class Item3
									{
										name="vn_m18_purple_mag";
										count=2;
										ammoLeft=1;
									};
									class Item4
									{
										name="vn_m18_red_mag";
										count=2;
										ammoLeft=1;
									};
									class Item5
									{
										name="vn_mine_m112_remote_mag";
										count=5;
										ammoLeft=1;
									};
								};
								class ItemCargo
								{
									items=2;
									class Item0
									{
										name="vn_b_item_firstaidkit";
										count=2;
									};
									class Item1
									{
										name="vn_b_item_trapkit";
										count=1;
									};
								};
							};
							map="vn_b_item_map";
							compass="vn_b_item_compass";
							watch="vn_b_item_watch";
							radio="vn_b_item_radio_urc10";
							headgear="vn_b_boonie_02_02";
						};
					};
					id=288;
					type="vn_b_men_sf_06";
					atlOffset=3.8146973e-006;
					class CustomAttributes
					{
						class Attribute0
						{
							property="speaker";
							expression="_this setspeaker _value;";
							class Value
							{
								class data
								{
									singleType="STRING";
									value="Male02ENG";
								};
							};
						};
						class Attribute1
						{
							property="pitch";
							expression="_this setpitch _value;";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1.04;
								};
							};
						};
						class Attribute2
						{
							property="enableStamina";
							expression="_this enablestamina _value;";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=0;
								};
							};
						};
						nAttributes=3;
					};
				};
			};
			class Attributes
			{
				init="this addEventHandler [ ""HandleDamage"", { " \n "  params [""_unit"", ""_hitSelection"", ""_damage"",""_source"",""_projectile"",""_hitPartIndex"", ""_instigator"", ""_hitPoint""]; " \n " " \n "  private _damageMultiplierHead = 0.4; " \n "  private _damageMultiplierBody = 0.3; " \n "  private _damageMultiplierLimbs = 0.35; " \n "  private _damageMultiplierOverall = 0.3; " \n "  private _limitHead = 1.0; " \n "  private _limitBody = 0.25; " \n "  private _limitLimbs = 0.1; " \n "  private _limitOverall = 0.25; " \n "  private _oldDamage = 0; " \n "  if (_hitSelection isEqualTo """") then {_oldDamage = damage _unit} else {_oldDamage = _unit getHit _hitSelection}; " \n "  private _newDamage = _damage - _oldDamage max 0; " \n "  private _incomingDamage = _newDamage; " \n "  private _playerHealth = damage _unit; " \n " " \n "  if (_newDamage > 0 && !(_projectile isEqualTo """")) then { " \n "    private _damageMultiplier = _damageMultiplierBody; " \n "    private _upperLimit = _limitBody; " \n "    switch (_hitSelection) do { " \n "      case ""face_hub""; " \n "      case ""head"": { " \n "        _damageMultiplier = _damageMultiplierHead; " \n "        _upperLimit = _limitHead; " \n "      }; " \n "      case ""arms""; " \n "      case ""hands""; " \n "      case ""legs"": { " \n "        _damageMultiplier = _damageMultiplierLimbs; " \n "        _upperLimit = _limitLimbs; " \n "      }; " \n "      case """": { " \n "        _damageMultiplier = _damageMultiplierOverall; " \n "        _upperLimit = _limitOverall; " \n "      }; " \n "      default { " \n "        _damageMultiplier = _damageMultiplierBody; " \n "        _upperLimit = _limitBody; " \n "      }; " \n "    }; " \n "    _newDamage = _newDamage * _damageMultiplier; " \n "    if (_newDamage > _upperLimit) then { " \n "      _newDamage = _upperLimit; " \n "    }; " \n " " \n "    _damage = _oldDamage + _newDamage; " \n "  }; " \n " " \n "  if ( isPlayer _unit ) then { " \n "    if ( lifeState _unit == ""INCAPACITATED"" ) then { " \n "      _damage = _oldDamage; " \n "    } else { " \n "      _this set[ 2, _damage ]; " \n "      _damage = _this call bis_fnc_reviveEhHandleDamage; " \n "    }; " \n "  }; " \n "  _damage " \n "}]";
			};
			id=287;
			atlOffset=3.8146973e-006;
		};
		class Item86
		{
			dataType="Group";
			side="West";
			class Entities
			{
				items=1;
				class Item0
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={1259.1624,51.153027,530.4342};
						angles[]={0,1.5916864,0};
					};
					side="West";
					flags=7;
					class Attributes
					{
						init="this addEventHandler [ ""HandleDamage"", { " \n "  params [""_unit"", ""_hitSelection"", ""_damage"",""_source"",""_projectile"",""_hitPartIndex"", ""_instigator"", ""_hitPoint""]; " \n " " \n "  private _damageMultiplierHead = 0.4; " \n "  private _damageMultiplierBody = 0.3; " \n "  private _damageMultiplierLimbs = 0.25; " \n "  private _damageMultiplierOverall = 0.25; " \n "  private _limitHead = 1.0; " \n "  private _limitBody = 0.25; " \n "  private _limitLimbs = 0.1; " \n "  private _limitOverall = 0.25; " \n "  private _oldDamage = 0; " \n "  if (_hitSelection isEqualTo """") then {_oldDamage = damage _unit} else {_oldDamage = _unit getHit _hitSelection}; " \n "  private _newDamage = _damage - _oldDamage max 0; " \n "  private _incomingDamage = _newDamage; " \n "  private _playerHealth = damage _unit; " \n " " \n "  if (_newDamage > 0 && !(_projectile isEqualTo """")) then { " \n "    private _damageMultiplier = _damageMultiplierBody; " \n "    private _upperLimit = _limitBody; " \n "    switch (_hitSelection) do { " \n "      case ""face_hub""; " \n "      case ""head"": { " \n "        _damageMultiplier = _damageMultiplierHead; " \n "        _upperLimit = _limitHead; " \n "      }; " \n "      case ""arms""; " \n "      case ""hands""; " \n "      case ""legs"": { " \n "        _damageMultiplier = _damageMultiplierLimbs; " \n "        _upperLimit = _limitLimbs; " \n "      }; " \n "      case """": { " \n "        _damageMultiplier = _damageMultiplierOverall; " \n "        _upperLimit = _limitOverall; " \n "      }; " \n "      default { " \n "        _damageMultiplier = _damageMultiplierBody; " \n "        _upperLimit = _limitBody; " \n "      }; " \n "    }; " \n "    _newDamage = _newDamage * _damageMultiplier; " \n "    if (_newDamage > _upperLimit) then { " \n "      _newDamage = _upperLimit; " \n "    }; " \n " " \n "    _damage = _oldDamage + _newDamage; " \n "  }; " \n " " \n "  if ( isPlayer _unit ) then { " \n "    if ( lifeState _unit == ""INCAPACITATED"" ) then { " \n "      _damage = _oldDamage; " \n "    } else { " \n "      _this set[ 2, _damage ]; " \n "      _damage = _this call bis_fnc_reviveEhHandleDamage; " \n "    }; " \n "  }; " \n "  _damage " \n "}]";
						isPlayable=1;
						class Inventory
						{
							class primaryWeapon
							{
								name="vn_m1carbine";
								class primaryMuzzleMag
								{
									name="vn_carbine_15_mag";
									ammoLeft=15;
								};
							};
							class secondaryWeapon
							{
								name="vn_m127";
								class primaryMuzzleMag
								{
									name="vn_m127_mag";
									ammoLeft=1;
								};
							};
							class handgun
							{
								name="vn_mx991";
							};
							class binocular
							{
								name="vn_m19_binocs_grey";
							};
							class uniform
							{
								typeName="vn_b_uniform_macv_01_02";
								isBackpack=0;
								class MagazineCargo
								{
									items=1;
									class Item0
									{
										name="vn_prop_food_fresh_01";
										count=24;
										ammoLeft=100;
									};
								};
								class ItemCargo
								{
									items=1;
									class Item0
									{
										name="vn_b_item_firstaidkit";
										count=8;
									};
								};
							};
							class vest
							{
								typeName="vn_b_vest_usarmy_03";
								isBackpack=0;
								class MagazineCargo
								{
									items=1;
									class Item0
									{
										name="vn_m61_grenade_mag";
										count=9;
										ammoLeft=1;
									};
								};
							};
							class backpack
							{
								typeName="vn_b_pack_03";
								isBackpack=1;
								class MagazineCargo
								{
									items=6;
									class Item0
									{
										name="vn_m129_mag";
										count=5;
										ammoLeft=1;
									};
									class Item1
									{
										name="vn_carbine_15_t_mag";
										count=12;
										ammoLeft=15;
									};
									class Item2
									{
										name="vn_m34_grenade_mag";
										count=1;
										ammoLeft=1;
									};
									class Item3
									{
										name="vn_m18_purple_mag";
										count=2;
										ammoLeft=1;
									};
									class Item4
									{
										name="vn_m18_red_mag";
										count=2;
										ammoLeft=1;
									};
									class Item5
									{
										name="vn_mine_m112_remote_mag";
										count=5;
										ammoLeft=1;
									};
								};
								class ItemCargo
								{
									items=2;
									class Item0
									{
										name="vn_b_item_firstaidkit";
										count=2;
									};
									class Item1
									{
										name="vn_b_item_trapkit";
										count=1;
									};
								};
							};
							map="vn_b_item_map";
							compass="vn_b_item_compass";
							watch="vn_b_item_watch";
							radio="vn_b_item_radio_urc10";
							headgear="vn_b_boonie_02_02";
						};
					};
					id=290;
					type="vn_b_men_sf_06";
					atlOffset=3.8146973e-006;
					class CustomAttributes
					{
						class Attribute0
						{
							property="speaker";
							expression="_this setspeaker _value;";
							class Value
							{
								class data
								{
									singleType="STRING";
									value="Male02ENG";
								};
							};
						};
						class Attribute1
						{
							property="pitch";
							expression="_this setpitch _value;";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1.04;
								};
							};
						};
						class Attribute2
						{
							property="enableStamina";
							expression="_this enablestamina _value;";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=0;
								};
							};
						};
						nAttributes=3;
					};
				};
			};
			class Attributes
			{
				init="this addEventHandler [ ""HandleDamage"", { " \n "  params [""_unit"", ""_hitSelection"", ""_damage"",""_source"",""_projectile"",""_hitPartIndex"", ""_instigator"", ""_hitPoint""]; " \n " " \n "  private _damageMultiplierHead = 0.4; " \n "  private _damageMultiplierBody = 0.3; " \n "  private _damageMultiplierLimbs = 0.35; " \n "  private _damageMultiplierOverall = 0.3; " \n "  private _limitHead = 1.0; " \n "  private _limitBody = 0.25; " \n "  private _limitLimbs = 0.1; " \n "  private _limitOverall = 0.25; " \n "  private _oldDamage = 0; " \n "  if (_hitSelection isEqualTo """") then {_oldDamage = damage _unit} else {_oldDamage = _unit getHit _hitSelection}; " \n "  private _newDamage = _damage - _oldDamage max 0; " \n "  private _incomingDamage = _newDamage; " \n "  private _playerHealth = damage _unit; " \n " " \n "  if (_newDamage > 0 && !(_projectile isEqualTo """")) then { " \n "    private _damageMultiplier = _damageMultiplierBody; " \n "    private _upperLimit = _limitBody; " \n "    switch (_hitSelection) do { " \n "      case ""face_hub""; " \n "      case ""head"": { " \n "        _damageMultiplier = _damageMultiplierHead; " \n "        _upperLimit = _limitHead; " \n "      }; " \n "      case ""arms""; " \n "      case ""hands""; " \n "      case ""legs"": { " \n "        _damageMultiplier = _damageMultiplierLimbs; " \n "        _upperLimit = _limitLimbs; " \n "      }; " \n "      case """": { " \n "        _damageMultiplier = _damageMultiplierOverall; " \n "        _upperLimit = _limitOverall; " \n "      }; " \n "      default { " \n "        _damageMultiplier = _damageMultiplierBody; " \n "        _upperLimit = _limitBody; " \n "      }; " \n "    }; " \n "    _newDamage = _newDamage * _damageMultiplier; " \n "    if (_newDamage > _upperLimit) then { " \n "      _newDamage = _upperLimit; " \n "    }; " \n " " \n "    _damage = _oldDamage + _newDamage; " \n "  }; " \n " " \n "  if ( isPlayer _unit ) then { " \n "    if ( lifeState _unit == ""INCAPACITATED"" ) then { " \n "      _damage = _oldDamage; " \n "    } else { " \n "      _this set[ 2, _damage ]; " \n "      _damage = _this call bis_fnc_reviveEhHandleDamage; " \n "    }; " \n "  }; " \n "  _damage " \n "}]";
			};
			id=289;
			atlOffset=3.8146973e-006;
		};
		class Item87
		{
			dataType="Group";
			side="West";
			class Entities
			{
				items=1;
				class Item0
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={1259.1331,51.112434,531.52014};
						angles[]={0,1.5916864,0};
					};
					side="West";
					flags=7;
					class Attributes
					{
						init="this addEventHandler [ ""HandleDamage"", { " \n "  params [""_unit"", ""_hitSelection"", ""_damage"",""_source"",""_projectile"",""_hitPartIndex"", ""_instigator"", ""_hitPoint""]; " \n " " \n "  private _damageMultiplierHead = 0.4; " \n "  private _damageMultiplierBody = 0.3; " \n "  private _damageMultiplierLimbs = 0.25; " \n "  private _damageMultiplierOverall = 0.25; " \n "  private _limitHead = 1.0; " \n "  private _limitBody = 0.25; " \n "  private _limitLimbs = 0.1; " \n "  private _limitOverall = 0.25; " \n "  private _oldDamage = 0; " \n "  if (_hitSelection isEqualTo """") then {_oldDamage = damage _unit} else {_oldDamage = _unit getHit _hitSelection}; " \n "  private _newDamage = _damage - _oldDamage max 0; " \n "  private _incomingDamage = _newDamage; " \n "  private _playerHealth = damage _unit; " \n " " \n "  if (_newDamage > 0 && !(_projectile isEqualTo """")) then { " \n "    private _damageMultiplier = _damageMultiplierBody; " \n "    private _upperLimit = _limitBody; " \n "    switch (_hitSelection) do { " \n "      case ""face_hub""; " \n "      case ""head"": { " \n "        _damageMultiplier = _damageMultiplierHead; " \n "        _upperLimit = _limitHead; " \n "      }; " \n "      case ""arms""; " \n "      case ""hands""; " \n "      case ""legs"": { " \n "        _damageMultiplier = _damageMultiplierLimbs; " \n "        _upperLimit = _limitLimbs; " \n "      }; " \n "      case """": { " \n "        _damageMultiplier = _damageMultiplierOverall; " \n "        _upperLimit = _limitOverall; " \n "      }; " \n "      default { " \n "        _damageMultiplier = _damageMultiplierBody; " \n "        _upperLimit = _limitBody; " \n "      }; " \n "    }; " \n "    _newDamage = _newDamage * _damageMultiplier; " \n "    if (_newDamage > _upperLimit) then { " \n "      _newDamage = _upperLimit; " \n "    }; " \n " " \n "    _damage = _oldDamage + _newDamage; " \n "  }; " \n " " \n "  if ( isPlayer _unit ) then { " \n "    if ( lifeState _unit == ""INCAPACITATED"" ) then { " \n "      _damage = _oldDamage; " \n "    } else { " \n "      _this set[ 2, _damage ]; " \n "      _damage = _this call bis_fnc_reviveEhHandleDamage; " \n "    }; " \n "  }; " \n "  _damage " \n "}]";
						isPlayable=1;
						class Inventory
						{
							class primaryWeapon
							{
								name="vn_m1carbine";
								class primaryMuzzleMag
								{
									name="vn_carbine_15_mag";
									ammoLeft=15;
								};
							};
							class secondaryWeapon
							{
								name="vn_m127";
								class primaryMuzzleMag
								{
									name="vn_m127_mag";
									ammoLeft=1;
								};
							};
							class handgun
							{
								name="vn_mx991";
							};
							class binocular
							{
								name="vn_m19_binocs_grey";
							};
							class uniform
							{
								typeName="vn_b_uniform_macv_01_02";
								isBackpack=0;
								class MagazineCargo
								{
									items=1;
									class Item0
									{
										name="vn_prop_food_fresh_01";
										count=24;
										ammoLeft=100;
									};
								};
								class ItemCargo
								{
									items=1;
									class Item0
									{
										name="vn_b_item_firstaidkit";
										count=8;
									};
								};
							};
							class vest
							{
								typeName="vn_b_vest_usarmy_03";
								isBackpack=0;
								class MagazineCargo
								{
									items=1;
									class Item0
									{
										name="vn_m61_grenade_mag";
										count=9;
										ammoLeft=1;
									};
								};
							};
							class backpack
							{
								typeName="vn_b_pack_03";
								isBackpack=1;
								class MagazineCargo
								{
									items=6;
									class Item0
									{
										name="vn_m129_mag";
										count=5;
										ammoLeft=1;
									};
									class Item1
									{
										name="vn_carbine_15_t_mag";
										count=12;
										ammoLeft=15;
									};
									class Item2
									{
										name="vn_m34_grenade_mag";
										count=1;
										ammoLeft=1;
									};
									class Item3
									{
										name="vn_m18_purple_mag";
										count=2;
										ammoLeft=1;
									};
									class Item4
									{
										name="vn_m18_red_mag";
										count=2;
										ammoLeft=1;
									};
									class Item5
									{
										name="vn_mine_m112_remote_mag";
										count=5;
										ammoLeft=1;
									};
								};
								class ItemCargo
								{
									items=2;
									class Item0
									{
										name="vn_b_item_firstaidkit";
										count=2;
									};
									class Item1
									{
										name="vn_b_item_trapkit";
										count=1;
									};
								};
							};
							map="vn_b_item_map";
							compass="vn_b_item_compass";
							watch="vn_b_item_watch";
							radio="vn_b_item_radio_urc10";
							headgear="vn_b_boonie_02_02";
						};
					};
					id=292;
					type="vn_b_men_sf_06";
					atlOffset=7.6293945e-006;
					class CustomAttributes
					{
						class Attribute0
						{
							property="speaker";
							expression="_this setspeaker _value;";
							class Value
							{
								class data
								{
									singleType="STRING";
									value="Male02ENG";
								};
							};
						};
						class Attribute1
						{
							property="pitch";
							expression="_this setpitch _value;";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1.04;
								};
							};
						};
						class Attribute2
						{
							property="enableStamina";
							expression="_this enablestamina _value;";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=0;
								};
							};
						};
						nAttributes=3;
					};
				};
			};
			class Attributes
			{
				init="this addEventHandler [ ""HandleDamage"", { " \n "  params [""_unit"", ""_hitSelection"", ""_damage"",""_source"",""_projectile"",""_hitPartIndex"", ""_instigator"", ""_hitPoint""]; " \n " " \n "  private _damageMultiplierHead = 0.4; " \n "  private _damageMultiplierBody = 0.3; " \n "  private _damageMultiplierLimbs = 0.35; " \n "  private _damageMultiplierOverall = 0.3; " \n "  private _limitHead = 1.0; " \n "  private _limitBody = 0.25; " \n "  private _limitLimbs = 0.1; " \n "  private _limitOverall = 0.25; " \n "  private _oldDamage = 0; " \n "  if (_hitSelection isEqualTo """") then {_oldDamage = damage _unit} else {_oldDamage = _unit getHit _hitSelection}; " \n "  private _newDamage = _damage - _oldDamage max 0; " \n "  private _incomingDamage = _newDamage; " \n "  private _playerHealth = damage _unit; " \n " " \n "  if (_newDamage > 0 && !(_projectile isEqualTo """")) then { " \n "    private _damageMultiplier = _damageMultiplierBody; " \n "    private _upperLimit = _limitBody; " \n "    switch (_hitSelection) do { " \n "      case ""face_hub""; " \n "      case ""head"": { " \n "        _damageMultiplier = _damageMultiplierHead; " \n "        _upperLimit = _limitHead; " \n "      }; " \n "      case ""arms""; " \n "      case ""hands""; " \n "      case ""legs"": { " \n "        _damageMultiplier = _damageMultiplierLimbs; " \n "        _upperLimit = _limitLimbs; " \n "      }; " \n "      case """": { " \n "        _damageMultiplier = _damageMultiplierOverall; " \n "        _upperLimit = _limitOverall; " \n "      }; " \n "      default { " \n "        _damageMultiplier = _damageMultiplierBody; " \n "        _upperLimit = _limitBody; " \n "      }; " \n "    }; " \n "    _newDamage = _newDamage * _damageMultiplier; " \n "    if (_newDamage > _upperLimit) then { " \n "      _newDamage = _upperLimit; " \n "    }; " \n " " \n "    _damage = _oldDamage + _newDamage; " \n "  }; " \n " " \n "  if ( isPlayer _unit ) then { " \n "    if ( lifeState _unit == ""INCAPACITATED"" ) then { " \n "      _damage = _oldDamage; " \n "    } else { " \n "      _this set[ 2, _damage ]; " \n "      _damage = _this call bis_fnc_reviveEhHandleDamage; " \n "    }; " \n "  }; " \n "  _damage " \n "}]";
			};
			id=291;
			atlOffset=7.6293945e-006;
		};
		class Item88
		{
			dataType="Group";
			side="West";
			class Entities
			{
				items=1;
				class Item0
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={1259.3342,51.084476,532.87659};
						angles[]={0,1.5916864,0};
					};
					side="West";
					flags=7;
					class Attributes
					{
						init="this addEventHandler [ ""HandleDamage"", { " \n "  params [""_unit"", ""_hitSelection"", ""_damage"",""_source"",""_projectile"",""_hitPartIndex"", ""_instigator"", ""_hitPoint""]; " \n " " \n "  private _damageMultiplierHead = 0.4; " \n "  private _damageMultiplierBody = 0.3; " \n "  private _damageMultiplierLimbs = 0.25; " \n "  private _damageMultiplierOverall = 0.25; " \n "  private _limitHead = 1.0; " \n "  private _limitBody = 0.25; " \n "  private _limitLimbs = 0.1; " \n "  private _limitOverall = 0.25; " \n "  private _oldDamage = 0; " \n "  if (_hitSelection isEqualTo """") then {_oldDamage = damage _unit} else {_oldDamage = _unit getHit _hitSelection}; " \n "  private _newDamage = _damage - _oldDamage max 0; " \n "  private _incomingDamage = _newDamage; " \n "  private _playerHealth = damage _unit; " \n " " \n "  if (_newDamage > 0 && !(_projectile isEqualTo """")) then { " \n "    private _damageMultiplier = _damageMultiplierBody; " \n "    private _upperLimit = _limitBody; " \n "    switch (_hitSelection) do { " \n "      case ""face_hub""; " \n "      case ""head"": { " \n "        _damageMultiplier = _damageMultiplierHead; " \n "        _upperLimit = _limitHead; " \n "      }; " \n "      case ""arms""; " \n "      case ""hands""; " \n "      case ""legs"": { " \n "        _damageMultiplier = _damageMultiplierLimbs; " \n "        _upperLimit = _limitLimbs; " \n "      }; " \n "      case """": { " \n "        _damageMultiplier = _damageMultiplierOverall; " \n "        _upperLimit = _limitOverall; " \n "      }; " \n "      default { " \n "        _damageMultiplier = _damageMultiplierBody; " \n "        _upperLimit = _limitBody; " \n "      }; " \n "    }; " \n "    _newDamage = _newDamage * _damageMultiplier; " \n "    if (_newDamage > _upperLimit) then { " \n "      _newDamage = _upperLimit; " \n "    }; " \n " " \n "    _damage = _oldDamage + _newDamage; " \n "  }; " \n " " \n "  if ( isPlayer _unit ) then { " \n "    if ( lifeState _unit == ""INCAPACITATED"" ) then { " \n "      _damage = _oldDamage; " \n "    } else { " \n "      _this set[ 2, _damage ]; " \n "      _damage = _this call bis_fnc_reviveEhHandleDamage; " \n "    }; " \n "  }; " \n "  _damage " \n "}]";
						isPlayable=1;
						class Inventory
						{
							class primaryWeapon
							{
								name="vn_m1carbine";
								class primaryMuzzleMag
								{
									name="vn_carbine_15_mag";
									ammoLeft=15;
								};
							};
							class secondaryWeapon
							{
								name="vn_m127";
								class primaryMuzzleMag
								{
									name="vn_m127_mag";
									ammoLeft=1;
								};
							};
							class handgun
							{
								name="vn_mx991";
							};
							class binocular
							{
								name="vn_m19_binocs_grey";
							};
							class uniform
							{
								typeName="vn_b_uniform_macv_01_02";
								isBackpack=0;
								class MagazineCargo
								{
									items=1;
									class Item0
									{
										name="vn_prop_food_fresh_01";
										count=24;
										ammoLeft=100;
									};
								};
								class ItemCargo
								{
									items=1;
									class Item0
									{
										name="vn_b_item_firstaidkit";
										count=8;
									};
								};
							};
							class vest
							{
								typeName="vn_b_vest_usarmy_03";
								isBackpack=0;
								class MagazineCargo
								{
									items=1;
									class Item0
									{
										name="vn_m61_grenade_mag";
										count=9;
										ammoLeft=1;
									};
								};
							};
							class backpack
							{
								typeName="vn_b_pack_03";
								isBackpack=1;
								class MagazineCargo
								{
									items=6;
									class Item0
									{
										name="vn_m129_mag";
										count=5;
										ammoLeft=1;
									};
									class Item1
									{
										name="vn_carbine_15_t_mag";
										count=12;
										ammoLeft=15;
									};
									class Item2
									{
										name="vn_m34_grenade_mag";
										count=1;
										ammoLeft=1;
									};
									class Item3
									{
										name="vn_m18_purple_mag";
										count=2;
										ammoLeft=1;
									};
									class Item4
									{
										name="vn_m18_red_mag";
										count=2;
										ammoLeft=1;
									};
									class Item5
									{
										name="vn_mine_m112_remote_mag";
										count=5;
										ammoLeft=1;
									};
								};
								class ItemCargo
								{
									items=2;
									class Item0
									{
										name="vn_b_item_firstaidkit";
										count=2;
									};
									class Item1
									{
										name="vn_b_item_trapkit";
										count=1;
									};
								};
							};
							map="vn_b_item_map";
							compass="vn_b_item_compass";
							watch="vn_b_item_watch";
							radio="vn_b_item_radio_urc10";
							headgear="vn_b_boonie_02_02";
						};
					};
					id=294;
					type="vn_b_men_sf_06";
					class CustomAttributes
					{
						class Attribute0
						{
							property="speaker";
							expression="_this setspeaker _value;";
							class Value
							{
								class data
								{
									singleType="STRING";
									value="Male02ENG";
								};
							};
						};
						class Attribute1
						{
							property="pitch";
							expression="_this setpitch _value;";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1.04;
								};
							};
						};
						class Attribute2
						{
							property="enableStamina";
							expression="_this enablestamina _value;";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=0;
								};
							};
						};
						nAttributes=3;
					};
				};
			};
			class Attributes
			{
				init="this addEventHandler [ ""HandleDamage"", { " \n "  params [""_unit"", ""_hitSelection"", ""_damage"",""_source"",""_projectile"",""_hitPartIndex"", ""_instigator"", ""_hitPoint""]; " \n " " \n "  private _damageMultiplierHead = 0.4; " \n "  private _damageMultiplierBody = 0.3; " \n "  private _damageMultiplierLimbs = 0.35; " \n "  private _damageMultiplierOverall = 0.3; " \n "  private _limitHead = 1.0; " \n "  private _limitBody = 0.25; " \n "  private _limitLimbs = 0.1; " \n "  private _limitOverall = 0.25; " \n "  private _oldDamage = 0; " \n "  if (_hitSelection isEqualTo """") then {_oldDamage = damage _unit} else {_oldDamage = _unit getHit _hitSelection}; " \n "  private _newDamage = _damage - _oldDamage max 0; " \n "  private _incomingDamage = _newDamage; " \n "  private _playerHealth = damage _unit; " \n " " \n "  if (_newDamage > 0 && !(_projectile isEqualTo """")) then { " \n "    private _damageMultiplier = _damageMultiplierBody; " \n "    private _upperLimit = _limitBody; " \n "    switch (_hitSelection) do { " \n "      case ""face_hub""; " \n "      case ""head"": { " \n "        _damageMultiplier = _damageMultiplierHead; " \n "        _upperLimit = _limitHead; " \n "      }; " \n "      case ""arms""; " \n "      case ""hands""; " \n "      case ""legs"": { " \n "        _damageMultiplier = _damageMultiplierLimbs; " \n "        _upperLimit = _limitLimbs; " \n "      }; " \n "      case """": { " \n "        _damageMultiplier = _damageMultiplierOverall; " \n "        _upperLimit = _limitOverall; " \n "      }; " \n "      default { " \n "        _damageMultiplier = _damageMultiplierBody; " \n "        _upperLimit = _limitBody; " \n "      }; " \n "    }; " \n "    _newDamage = _newDamage * _damageMultiplier; " \n "    if (_newDamage > _upperLimit) then { " \n "      _newDamage = _upperLimit; " \n "    }; " \n " " \n "    _damage = _oldDamage + _newDamage; " \n "  }; " \n " " \n "  if ( isPlayer _unit ) then { " \n "    if ( lifeState _unit == ""INCAPACITATED"" ) then { " \n "      _damage = _oldDamage; " \n "    } else { " \n "      _this set[ 2, _damage ]; " \n "      _damage = _this call bis_fnc_reviveEhHandleDamage; " \n "    }; " \n "  }; " \n "  _damage " \n "}]";
			};
			id=293;
		};
		class Item89
		{
			dataType="Group";
			side="West";
			class Entities
			{
				items=1;
				class Item0
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={1259.4006,51.04855,534.29651};
						angles[]={0,1.5916864,0};
					};
					side="West";
					flags=7;
					class Attributes
					{
						init="this addEventHandler [ ""HandleDamage"", { " \n "  params [""_unit"", ""_hitSelection"", ""_damage"",""_source"",""_projectile"",""_hitPartIndex"", ""_instigator"", ""_hitPoint""]; " \n " " \n "  private _damageMultiplierHead = 0.4; " \n "  private _damageMultiplierBody = 0.3; " \n "  private _damageMultiplierLimbs = 0.25; " \n "  private _damageMultiplierOverall = 0.25; " \n "  private _limitHead = 1.0; " \n "  private _limitBody = 0.25; " \n "  private _limitLimbs = 0.1; " \n "  private _limitOverall = 0.25; " \n "  private _oldDamage = 0; " \n "  if (_hitSelection isEqualTo """") then {_oldDamage = damage _unit} else {_oldDamage = _unit getHit _hitSelection}; " \n "  private _newDamage = _damage - _oldDamage max 0; " \n "  private _incomingDamage = _newDamage; " \n "  private _playerHealth = damage _unit; " \n " " \n "  if (_newDamage > 0 && !(_projectile isEqualTo """")) then { " \n "    private _damageMultiplier = _damageMultiplierBody; " \n "    private _upperLimit = _limitBody; " \n "    switch (_hitSelection) do { " \n "      case ""face_hub""; " \n "      case ""head"": { " \n "        _damageMultiplier = _damageMultiplierHead; " \n "        _upperLimit = _limitHead; " \n "      }; " \n "      case ""arms""; " \n "      case ""hands""; " \n "      case ""legs"": { " \n "        _damageMultiplier = _damageMultiplierLimbs; " \n "        _upperLimit = _limitLimbs; " \n "      }; " \n "      case """": { " \n "        _damageMultiplier = _damageMultiplierOverall; " \n "        _upperLimit = _limitOverall; " \n "      }; " \n "      default { " \n "        _damageMultiplier = _damageMultiplierBody; " \n "        _upperLimit = _limitBody; " \n "      }; " \n "    }; " \n "    _newDamage = _newDamage * _damageMultiplier; " \n "    if (_newDamage > _upperLimit) then { " \n "      _newDamage = _upperLimit; " \n "    }; " \n " " \n "    _damage = _oldDamage + _newDamage; " \n "  }; " \n " " \n "  if ( isPlayer _unit ) then { " \n "    if ( lifeState _unit == ""INCAPACITATED"" ) then { " \n "      _damage = _oldDamage; " \n "    } else { " \n "      _this set[ 2, _damage ]; " \n "      _damage = _this call bis_fnc_reviveEhHandleDamage; " \n "    }; " \n "  }; " \n "  _damage " \n "}]";
						isPlayable=1;
						class Inventory
						{
							class primaryWeapon
							{
								name="vn_m1carbine";
								class primaryMuzzleMag
								{
									name="vn_carbine_15_mag";
									ammoLeft=15;
								};
							};
							class secondaryWeapon
							{
								name="vn_m127";
								class primaryMuzzleMag
								{
									name="vn_m127_mag";
									ammoLeft=1;
								};
							};
							class handgun
							{
								name="vn_mx991";
							};
							class binocular
							{
								name="vn_m19_binocs_grey";
							};
							class uniform
							{
								typeName="vn_b_uniform_macv_01_02";
								isBackpack=0;
								class MagazineCargo
								{
									items=1;
									class Item0
									{
										name="vn_prop_food_fresh_01";
										count=24;
										ammoLeft=100;
									};
								};
								class ItemCargo
								{
									items=1;
									class Item0
									{
										name="vn_b_item_firstaidkit";
										count=8;
									};
								};
							};
							class vest
							{
								typeName="vn_b_vest_usarmy_03";
								isBackpack=0;
								class MagazineCargo
								{
									items=1;
									class Item0
									{
										name="vn_m61_grenade_mag";
										count=9;
										ammoLeft=1;
									};
								};
							};
							class backpack
							{
								typeName="vn_b_pack_03";
								isBackpack=1;
								class MagazineCargo
								{
									items=6;
									class Item0
									{
										name="vn_m129_mag";
										count=5;
										ammoLeft=1;
									};
									class Item1
									{
										name="vn_carbine_15_t_mag";
										count=12;
										ammoLeft=15;
									};
									class Item2
									{
										name="vn_m34_grenade_mag";
										count=1;
										ammoLeft=1;
									};
									class Item3
									{
										name="vn_m18_purple_mag";
										count=2;
										ammoLeft=1;
									};
									class Item4
									{
										name="vn_m18_red_mag";
										count=2;
										ammoLeft=1;
									};
									class Item5
									{
										name="vn_mine_m112_remote_mag";
										count=5;
										ammoLeft=1;
									};
								};
								class ItemCargo
								{
									items=2;
									class Item0
									{
										name="vn_b_item_firstaidkit";
										count=2;
									};
									class Item1
									{
										name="vn_b_item_trapkit";
										count=1;
									};
								};
							};
							map="vn_b_item_map";
							compass="vn_b_item_compass";
							watch="vn_b_item_watch";
							radio="vn_b_item_radio_urc10";
							headgear="vn_b_boonie_02_02";
						};
					};
					id=296;
					type="vn_b_men_sf_06";
					class CustomAttributes
					{
						class Attribute0
						{
							property="speaker";
							expression="_this setspeaker _value;";
							class Value
							{
								class data
								{
									singleType="STRING";
									value="Male02ENG";
								};
							};
						};
						class Attribute1
						{
							property="pitch";
							expression="_this setpitch _value;";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1.04;
								};
							};
						};
						class Attribute2
						{
							property="enableStamina";
							expression="_this enablestamina _value;";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=0;
								};
							};
						};
						nAttributes=3;
					};
				};
			};
			class Attributes
			{
				init="this addEventHandler [ ""HandleDamage"", { " \n "  params [""_unit"", ""_hitSelection"", ""_damage"",""_source"",""_projectile"",""_hitPartIndex"", ""_instigator"", ""_hitPoint""]; " \n " " \n "  private _damageMultiplierHead = 0.4; " \n "  private _damageMultiplierBody = 0.3; " \n "  private _damageMultiplierLimbs = 0.35; " \n "  private _damageMultiplierOverall = 0.3; " \n "  private _limitHead = 1.0; " \n "  private _limitBody = 0.25; " \n "  private _limitLimbs = 0.1; " \n "  private _limitOverall = 0.25; " \n "  private _oldDamage = 0; " \n "  if (_hitSelection isEqualTo """") then {_oldDamage = damage _unit} else {_oldDamage = _unit getHit _hitSelection}; " \n "  private _newDamage = _damage - _oldDamage max 0; " \n "  private _incomingDamage = _newDamage; " \n "  private _playerHealth = damage _unit; " \n " " \n "  if (_newDamage > 0 && !(_projectile isEqualTo """")) then { " \n "    private _damageMultiplier = _damageMultiplierBody; " \n "    private _upperLimit = _limitBody; " \n "    switch (_hitSelection) do { " \n "      case ""face_hub""; " \n "      case ""head"": { " \n "        _damageMultiplier = _damageMultiplierHead; " \n "        _upperLimit = _limitHead; " \n "      }; " \n "      case ""arms""; " \n "      case ""hands""; " \n "      case ""legs"": { " \n "        _damageMultiplier = _damageMultiplierLimbs; " \n "        _upperLimit = _limitLimbs; " \n "      }; " \n "      case """": { " \n "        _damageMultiplier = _damageMultiplierOverall; " \n "        _upperLimit = _limitOverall; " \n "      }; " \n "      default { " \n "        _damageMultiplier = _damageMultiplierBody; " \n "        _upperLimit = _limitBody; " \n "      }; " \n "    }; " \n "    _newDamage = _newDamage * _damageMultiplier; " \n "    if (_newDamage > _upperLimit) then { " \n "      _newDamage = _upperLimit; " \n "    }; " \n " " \n "    _damage = _oldDamage + _newDamage; " \n "  }; " \n " " \n "  if ( isPlayer _unit ) then { " \n "    if ( lifeState _unit == ""INCAPACITATED"" ) then { " \n "      _damage = _oldDamage; " \n "    } else { " \n "      _this set[ 2, _damage ]; " \n "      _damage = _this call bis_fnc_reviveEhHandleDamage; " \n "    }; " \n "  }; " \n "  _damage " \n "}]";
			};
			id=295;
		};
		class Item90
		{
			dataType="Group";
			side="West";
			class Entities
			{
				items=1;
				class Item0
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={1259.467,51.02058,535.71643};
						angles[]={0,1.5916864,0};
					};
					side="West";
					flags=7;
					class Attributes
					{
						init="this addEventHandler [ ""HandleDamage"", { " \n "  params [""_unit"", ""_hitSelection"", ""_damage"",""_source"",""_projectile"",""_hitPartIndex"", ""_instigator"", ""_hitPoint""]; " \n " " \n "  private _damageMultiplierHead = 0.4; " \n "  private _damageMultiplierBody = 0.3; " \n "  private _damageMultiplierLimbs = 0.25; " \n "  private _damageMultiplierOverall = 0.25; " \n "  private _limitHead = 1.0; " \n "  private _limitBody = 0.25; " \n "  private _limitLimbs = 0.1; " \n "  private _limitOverall = 0.25; " \n "  private _oldDamage = 0; " \n "  if (_hitSelection isEqualTo """") then {_oldDamage = damage _unit} else {_oldDamage = _unit getHit _hitSelection}; " \n "  private _newDamage = _damage - _oldDamage max 0; " \n "  private _incomingDamage = _newDamage; " \n "  private _playerHealth = damage _unit; " \n " " \n "  if (_newDamage > 0 && !(_projectile isEqualTo """")) then { " \n "    private _damageMultiplier = _damageMultiplierBody; " \n "    private _upperLimit = _limitBody; " \n "    switch (_hitSelection) do { " \n "      case ""face_hub""; " \n "      case ""head"": { " \n "        _damageMultiplier = _damageMultiplierHead; " \n "        _upperLimit = _limitHead; " \n "      }; " \n "      case ""arms""; " \n "      case ""hands""; " \n "      case ""legs"": { " \n "        _damageMultiplier = _damageMultiplierLimbs; " \n "        _upperLimit = _limitLimbs; " \n "      }; " \n "      case """": { " \n "        _damageMultiplier = _damageMultiplierOverall; " \n "        _upperLimit = _limitOverall; " \n "      }; " \n "      default { " \n "        _damageMultiplier = _damageMultiplierBody; " \n "        _upperLimit = _limitBody; " \n "      }; " \n "    }; " \n "    _newDamage = _newDamage * _damageMultiplier; " \n "    if (_newDamage > _upperLimit) then { " \n "      _newDamage = _upperLimit; " \n "    }; " \n " " \n "    _damage = _oldDamage + _newDamage; " \n "  }; " \n " " \n "  if ( isPlayer _unit ) then { " \n "    if ( lifeState _unit == ""INCAPACITATED"" ) then { " \n "      _damage = _oldDamage; " \n "    } else { " \n "      _this set[ 2, _damage ]; " \n "      _damage = _this call bis_fnc_reviveEhHandleDamage; " \n "    }; " \n "  }; " \n "  _damage " \n "}]";
						isPlayable=1;
						class Inventory
						{
							class primaryWeapon
							{
								name="vn_m1carbine";
								class primaryMuzzleMag
								{
									name="vn_carbine_15_mag";
									ammoLeft=15;
								};
							};
							class secondaryWeapon
							{
								name="vn_m127";
								class primaryMuzzleMag
								{
									name="vn_m127_mag";
									ammoLeft=1;
								};
							};
							class handgun
							{
								name="vn_mx991";
							};
							class binocular
							{
								name="vn_m19_binocs_grey";
							};
							class uniform
							{
								typeName="vn_b_uniform_macv_01_02";
								isBackpack=0;
								class MagazineCargo
								{
									items=1;
									class Item0
									{
										name="vn_prop_food_fresh_01";
										count=24;
										ammoLeft=100;
									};
								};
								class ItemCargo
								{
									items=1;
									class Item0
									{
										name="vn_b_item_firstaidkit";
										count=8;
									};
								};
							};
							class vest
							{
								typeName="vn_b_vest_usarmy_03";
								isBackpack=0;
								class MagazineCargo
								{
									items=1;
									class Item0
									{
										name="vn_m61_grenade_mag";
										count=9;
										ammoLeft=1;
									};
								};
							};
							class backpack
							{
								typeName="vn_b_pack_03";
								isBackpack=1;
								class MagazineCargo
								{
									items=6;
									class Item0
									{
										name="vn_m129_mag";
										count=5;
										ammoLeft=1;
									};
									class Item1
									{
										name="vn_carbine_15_t_mag";
										count=12;
										ammoLeft=15;
									};
									class Item2
									{
										name="vn_m34_grenade_mag";
										count=1;
										ammoLeft=1;
									};
									class Item3
									{
										name="vn_m18_purple_mag";
										count=2;
										ammoLeft=1;
									};
									class Item4
									{
										name="vn_m18_red_mag";
										count=2;
										ammoLeft=1;
									};
									class Item5
									{
										name="vn_mine_m112_remote_mag";
										count=5;
										ammoLeft=1;
									};
								};
								class ItemCargo
								{
									items=2;
									class Item0
									{
										name="vn_b_item_firstaidkit";
										count=2;
									};
									class Item1
									{
										name="vn_b_item_trapkit";
										count=1;
									};
								};
							};
							map="vn_b_item_map";
							compass="vn_b_item_compass";
							watch="vn_b_item_watch";
							radio="vn_b_item_radio_urc10";
							headgear="vn_b_boonie_02_02";
						};
					};
					id=298;
					type="vn_b_men_sf_06";
					class CustomAttributes
					{
						class Attribute0
						{
							property="speaker";
							expression="_this setspeaker _value;";
							class Value
							{
								class data
								{
									singleType="STRING";
									value="Male02ENG";
								};
							};
						};
						class Attribute1
						{
							property="pitch";
							expression="_this setpitch _value;";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1.04;
								};
							};
						};
						class Attribute2
						{
							property="enableStamina";
							expression="_this enablestamina _value;";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=0;
								};
							};
						};
						nAttributes=3;
					};
				};
			};
			class Attributes
			{
				init="this addEventHandler [ ""HandleDamage"", { " \n "  params [""_unit"", ""_hitSelection"", ""_damage"",""_source"",""_projectile"",""_hitPartIndex"", ""_instigator"", ""_hitPoint""]; " \n " " \n "  private _damageMultiplierHead = 0.4; " \n "  private _damageMultiplierBody = 0.3; " \n "  private _damageMultiplierLimbs = 0.35; " \n "  private _damageMultiplierOverall = 0.3; " \n "  private _limitHead = 1.0; " \n "  private _limitBody = 0.25; " \n "  private _limitLimbs = 0.1; " \n "  private _limitOverall = 0.25; " \n "  private _oldDamage = 0; " \n "  if (_hitSelection isEqualTo """") then {_oldDamage = damage _unit} else {_oldDamage = _unit getHit _hitSelection}; " \n "  private _newDamage = _damage - _oldDamage max 0; " \n "  private _incomingDamage = _newDamage; " \n "  private _playerHealth = damage _unit; " \n " " \n "  if (_newDamage > 0 && !(_projectile isEqualTo """")) then { " \n "    private _damageMultiplier = _damageMultiplierBody; " \n "    private _upperLimit = _limitBody; " \n "    switch (_hitSelection) do { " \n "      case ""face_hub""; " \n "      case ""head"": { " \n "        _damageMultiplier = _damageMultiplierHead; " \n "        _upperLimit = _limitHead; " \n "      }; " \n "      case ""arms""; " \n "      case ""hands""; " \n "      case ""legs"": { " \n "        _damageMultiplier = _damageMultiplierLimbs; " \n "        _upperLimit = _limitLimbs; " \n "      }; " \n "      case """": { " \n "        _damageMultiplier = _damageMultiplierOverall; " \n "        _upperLimit = _limitOverall; " \n "      }; " \n "      default { " \n "        _damageMultiplier = _damageMultiplierBody; " \n "        _upperLimit = _limitBody; " \n "      }; " \n "    }; " \n "    _newDamage = _newDamage * _damageMultiplier; " \n "    if (_newDamage > _upperLimit) then { " \n "      _newDamage = _upperLimit; " \n "    }; " \n " " \n "    _damage = _oldDamage + _newDamage; " \n "  }; " \n " " \n "  if ( isPlayer _unit ) then { " \n "    if ( lifeState _unit == ""INCAPACITATED"" ) then { " \n "      _damage = _oldDamage; " \n "    } else { " \n "      _this set[ 2, _damage ]; " \n "      _damage = _this call bis_fnc_reviveEhHandleDamage; " \n "    }; " \n "  }; " \n "  _damage " \n "}]";
			};
			id=297;
		};
		class Item91
		{
			dataType="Group";
			side="West";
			class Entities
			{
				items=1;
				class Item0
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={1259.595,50.996651,537.09827};
						angles[]={0,1.5916864,0};
					};
					side="West";
					flags=7;
					class Attributes
					{
						init="this addEventHandler [ ""HandleDamage"", { " \n "  params [""_unit"", ""_hitSelection"", ""_damage"",""_source"",""_projectile"",""_hitPartIndex"", ""_instigator"", ""_hitPoint""]; " \n " " \n "  private _damageMultiplierHead = 0.4; " \n "  private _damageMultiplierBody = 0.3; " \n "  private _damageMultiplierLimbs = 0.25; " \n "  private _damageMultiplierOverall = 0.25; " \n "  private _limitHead = 1.0; " \n "  private _limitBody = 0.25; " \n "  private _limitLimbs = 0.1; " \n "  private _limitOverall = 0.25; " \n "  private _oldDamage = 0; " \n "  if (_hitSelection isEqualTo """") then {_oldDamage = damage _unit} else {_oldDamage = _unit getHit _hitSelection}; " \n "  private _newDamage = _damage - _oldDamage max 0; " \n "  private _incomingDamage = _newDamage; " \n "  private _playerHealth = damage _unit; " \n " " \n "  if (_newDamage > 0 && !(_projectile isEqualTo """")) then { " \n "    private _damageMultiplier = _damageMultiplierBody; " \n "    private _upperLimit = _limitBody; " \n "    switch (_hitSelection) do { " \n "      case ""face_hub""; " \n "      case ""head"": { " \n "        _damageMultiplier = _damageMultiplierHead; " \n "        _upperLimit = _limitHead; " \n "      }; " \n "      case ""arms""; " \n "      case ""hands""; " \n "      case ""legs"": { " \n "        _damageMultiplier = _damageMultiplierLimbs; " \n "        _upperLimit = _limitLimbs; " \n "      }; " \n "      case """": { " \n "        _damageMultiplier = _damageMultiplierOverall; " \n "        _upperLimit = _limitOverall; " \n "      }; " \n "      default { " \n "        _damageMultiplier = _damageMultiplierBody; " \n "        _upperLimit = _limitBody; " \n "      }; " \n "    }; " \n "    _newDamage = _newDamage * _damageMultiplier; " \n "    if (_newDamage > _upperLimit) then { " \n "      _newDamage = _upperLimit; " \n "    }; " \n " " \n "    _damage = _oldDamage + _newDamage; " \n "  }; " \n " " \n "  if ( isPlayer _unit ) then { " \n "    if ( lifeState _unit == ""INCAPACITATED"" ) then { " \n "      _damage = _oldDamage; " \n "    } else { " \n "      _this set[ 2, _damage ]; " \n "      _damage = _this call bis_fnc_reviveEhHandleDamage; " \n "    }; " \n "  }; " \n "  _damage " \n "}]";
						isPlayable=1;
						class Inventory
						{
							class primaryWeapon
							{
								name="vn_m1carbine";
								class primaryMuzzleMag
								{
									name="vn_carbine_15_mag";
									ammoLeft=15;
								};
							};
							class secondaryWeapon
							{
								name="vn_m127";
								class primaryMuzzleMag
								{
									name="vn_m127_mag";
									ammoLeft=1;
								};
							};
							class handgun
							{
								name="vn_mx991";
							};
							class binocular
							{
								name="vn_m19_binocs_grey";
							};
							class uniform
							{
								typeName="vn_b_uniform_macv_01_02";
								isBackpack=0;
								class MagazineCargo
								{
									items=1;
									class Item0
									{
										name="vn_prop_food_fresh_01";
										count=24;
										ammoLeft=100;
									};
								};
								class ItemCargo
								{
									items=1;
									class Item0
									{
										name="vn_b_item_firstaidkit";
										count=8;
									};
								};
							};
							class vest
							{
								typeName="vn_b_vest_usarmy_03";
								isBackpack=0;
								class MagazineCargo
								{
									items=1;
									class Item0
									{
										name="vn_m61_grenade_mag";
										count=9;
										ammoLeft=1;
									};
								};
							};
							class backpack
							{
								typeName="vn_b_pack_03";
								isBackpack=1;
								class MagazineCargo
								{
									items=6;
									class Item0
									{
										name="vn_m129_mag";
										count=5;
										ammoLeft=1;
									};
									class Item1
									{
										name="vn_carbine_15_t_mag";
										count=12;
										ammoLeft=15;
									};
									class Item2
									{
										name="vn_m34_grenade_mag";
										count=1;
										ammoLeft=1;
									};
									class Item3
									{
										name="vn_m18_purple_mag";
										count=2;
										ammoLeft=1;
									};
									class Item4
									{
										name="vn_m18_red_mag";
										count=2;
										ammoLeft=1;
									};
									class Item5
									{
										name="vn_mine_m112_remote_mag";
										count=5;
										ammoLeft=1;
									};
								};
								class ItemCargo
								{
									items=2;
									class Item0
									{
										name="vn_b_item_firstaidkit";
										count=2;
									};
									class Item1
									{
										name="vn_b_item_trapkit";
										count=1;
									};
								};
							};
							map="vn_b_item_map";
							compass="vn_b_item_compass";
							watch="vn_b_item_watch";
							radio="vn_b_item_radio_urc10";
							headgear="vn_b_boonie_02_02";
						};
					};
					id=300;
					type="vn_b_men_sf_06";
					class CustomAttributes
					{
						class Attribute0
						{
							property="speaker";
							expression="_this setspeaker _value;";
							class Value
							{
								class data
								{
									singleType="STRING";
									value="Male02ENG";
								};
							};
						};
						class Attribute1
						{
							property="pitch";
							expression="_this setpitch _value;";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1.04;
								};
							};
						};
						class Attribute2
						{
							property="enableStamina";
							expression="_this enablestamina _value;";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=0;
								};
							};
						};
						nAttributes=3;
					};
				};
			};
			class Attributes
			{
				init="this addEventHandler [ ""HandleDamage"", { " \n "  params [""_unit"", ""_hitSelection"", ""_damage"",""_source"",""_projectile"",""_hitPartIndex"", ""_instigator"", ""_hitPoint""]; " \n " " \n "  private _damageMultiplierHead = 0.4; " \n "  private _damageMultiplierBody = 0.3; " \n "  private _damageMultiplierLimbs = 0.35; " \n "  private _damageMultiplierOverall = 0.3; " \n "  private _limitHead = 1.0; " \n "  private _limitBody = 0.25; " \n "  private _limitLimbs = 0.1; " \n "  private _limitOverall = 0.25; " \n "  private _oldDamage = 0; " \n "  if (_hitSelection isEqualTo """") then {_oldDamage = damage _unit} else {_oldDamage = _unit getHit _hitSelection}; " \n "  private _newDamage = _damage - _oldDamage max 0; " \n "  private _incomingDamage = _newDamage; " \n "  private _playerHealth = damage _unit; " \n " " \n "  if (_newDamage > 0 && !(_projectile isEqualTo """")) then { " \n "    private _damageMultiplier = _damageMultiplierBody; " \n "    private _upperLimit = _limitBody; " \n "    switch (_hitSelection) do { " \n "      case ""face_hub""; " \n "      case ""head"": { " \n "        _damageMultiplier = _damageMultiplierHead; " \n "        _upperLimit = _limitHead; " \n "      }; " \n "      case ""arms""; " \n "      case ""hands""; " \n "      case ""legs"": { " \n "        _damageMultiplier = _damageMultiplierLimbs; " \n "        _upperLimit = _limitLimbs; " \n "      }; " \n "      case """": { " \n "        _damageMultiplier = _damageMultiplierOverall; " \n "        _upperLimit = _limitOverall; " \n "      }; " \n "      default { " \n "        _damageMultiplier = _damageMultiplierBody; " \n "        _upperLimit = _limitBody; " \n "      }; " \n "    }; " \n "    _newDamage = _newDamage * _damageMultiplier; " \n "    if (_newDamage > _upperLimit) then { " \n "      _newDamage = _upperLimit; " \n "    }; " \n " " \n "    _damage = _oldDamage + _newDamage; " \n "  }; " \n " " \n "  if ( isPlayer _unit ) then { " \n "    if ( lifeState _unit == ""INCAPACITATED"" ) then { " \n "      _damage = _oldDamage; " \n "    } else { " \n "      _this set[ 2, _damage ]; " \n "      _damage = _this call bis_fnc_reviveEhHandleDamage; " \n "    }; " \n "  }; " \n "  _damage " \n "}]";
			};
			id=299;
		};
		class Item92
		{
			dataType="Group";
			side="West";
			class Entities
			{
				items=1;
				class Item0
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={1259.6165,50.981129,538.24133};
						angles[]={0,1.5916864,0};
					};
					side="West";
					flags=7;
					class Attributes
					{
						init="this addEventHandler [ ""HandleDamage"", { " \n "  params [""_unit"", ""_hitSelection"", ""_damage"",""_source"",""_projectile"",""_hitPartIndex"", ""_instigator"", ""_hitPoint""]; " \n " " \n "  private _damageMultiplierHead = 0.4; " \n "  private _damageMultiplierBody = 0.3; " \n "  private _damageMultiplierLimbs = 0.25; " \n "  private _damageMultiplierOverall = 0.25; " \n "  private _limitHead = 1.0; " \n "  private _limitBody = 0.25; " \n "  private _limitLimbs = 0.1; " \n "  private _limitOverall = 0.25; " \n "  private _oldDamage = 0; " \n "  if (_hitSelection isEqualTo """") then {_oldDamage = damage _unit} else {_oldDamage = _unit getHit _hitSelection}; " \n "  private _newDamage = _damage - _oldDamage max 0; " \n "  private _incomingDamage = _newDamage; " \n "  private _playerHealth = damage _unit; " \n " " \n "  if (_newDamage > 0 && !(_projectile isEqualTo """")) then { " \n "    private _damageMultiplier = _damageMultiplierBody; " \n "    private _upperLimit = _limitBody; " \n "    switch (_hitSelection) do { " \n "      case ""face_hub""; " \n "      case ""head"": { " \n "        _damageMultiplier = _damageMultiplierHead; " \n "        _upperLimit = _limitHead; " \n "      }; " \n "      case ""arms""; " \n "      case ""hands""; " \n "      case ""legs"": { " \n "        _damageMultiplier = _damageMultiplierLimbs; " \n "        _upperLimit = _limitLimbs; " \n "      }; " \n "      case """": { " \n "        _damageMultiplier = _damageMultiplierOverall; " \n "        _upperLimit = _limitOverall; " \n "      }; " \n "      default { " \n "        _damageMultiplier = _damageMultiplierBody; " \n "        _upperLimit = _limitBody; " \n "      }; " \n "    }; " \n "    _newDamage = _newDamage * _damageMultiplier; " \n "    if (_newDamage > _upperLimit) then { " \n "      _newDamage = _upperLimit; " \n "    }; " \n " " \n "    _damage = _oldDamage + _newDamage; " \n "  }; " \n " " \n "  if ( isPlayer _unit ) then { " \n "    if ( lifeState _unit == ""INCAPACITATED"" ) then { " \n "      _damage = _oldDamage; " \n "    } else { " \n "      _this set[ 2, _damage ]; " \n "      _damage = _this call bis_fnc_reviveEhHandleDamage; " \n "    }; " \n "  }; " \n "  _damage " \n "}]";
						isPlayable=1;
						class Inventory
						{
							class primaryWeapon
							{
								name="vn_m1carbine";
								class primaryMuzzleMag
								{
									name="vn_carbine_15_mag";
									ammoLeft=15;
								};
							};
							class secondaryWeapon
							{
								name="vn_m127";
								class primaryMuzzleMag
								{
									name="vn_m127_mag";
									ammoLeft=1;
								};
							};
							class handgun
							{
								name="vn_mx991";
							};
							class binocular
							{
								name="vn_m19_binocs_grey";
							};
							class uniform
							{
								typeName="vn_b_uniform_macv_01_02";
								isBackpack=0;
								class MagazineCargo
								{
									items=1;
									class Item0
									{
										name="vn_prop_food_fresh_01";
										count=24;
										ammoLeft=100;
									};
								};
								class ItemCargo
								{
									items=1;
									class Item0
									{
										name="vn_b_item_firstaidkit";
										count=8;
									};
								};
							};
							class vest
							{
								typeName="vn_b_vest_usarmy_03";
								isBackpack=0;
								class MagazineCargo
								{
									items=1;
									class Item0
									{
										name="vn_m61_grenade_mag";
										count=9;
										ammoLeft=1;
									};
								};
							};
							class backpack
							{
								typeName="vn_b_pack_03";
								isBackpack=1;
								class MagazineCargo
								{
									items=6;
									class Item0
									{
										name="vn_m129_mag";
										count=5;
										ammoLeft=1;
									};
									class Item1
									{
										name="vn_carbine_15_t_mag";
										count=12;
										ammoLeft=15;
									};
									class Item2
									{
										name="vn_m34_grenade_mag";
										count=1;
										ammoLeft=1;
									};
									class Item3
									{
										name="vn_m18_purple_mag";
										count=2;
										ammoLeft=1;
									};
									class Item4
									{
										name="vn_m18_red_mag";
										count=2;
										ammoLeft=1;
									};
									class Item5
									{
										name="vn_mine_m112_remote_mag";
										count=5;
										ammoLeft=1;
									};
								};
								class ItemCargo
								{
									items=2;
									class Item0
									{
										name="vn_b_item_firstaidkit";
										count=2;
									};
									class Item1
									{
										name="vn_b_item_trapkit";
										count=1;
									};
								};
							};
							map="vn_b_item_map";
							compass="vn_b_item_compass";
							watch="vn_b_item_watch";
							radio="vn_b_item_radio_urc10";
							headgear="vn_b_boonie_02_02";
						};
					};
					id=302;
					type="vn_b_men_sf_06";
					class CustomAttributes
					{
						class Attribute0
						{
							property="speaker";
							expression="_this setspeaker _value;";
							class Value
							{
								class data
								{
									singleType="STRING";
									value="Male02ENG";
								};
							};
						};
						class Attribute1
						{
							property="pitch";
							expression="_this setpitch _value;";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1.04;
								};
							};
						};
						class Attribute2
						{
							property="enableStamina";
							expression="_this enablestamina _value;";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=0;
								};
							};
						};
						nAttributes=3;
					};
				};
			};
			class Attributes
			{
				init="this addEventHandler [ ""HandleDamage"", { " \n "  params [""_unit"", ""_hitSelection"", ""_damage"",""_source"",""_projectile"",""_hitPartIndex"", ""_instigator"", ""_hitPoint""]; " \n " " \n "  private _damageMultiplierHead = 0.4; " \n "  private _damageMultiplierBody = 0.3; " \n "  private _damageMultiplierLimbs = 0.35; " \n "  private _damageMultiplierOverall = 0.3; " \n "  private _limitHead = 1.0; " \n "  private _limitBody = 0.25; " \n "  private _limitLimbs = 0.1; " \n "  private _limitOverall = 0.25; " \n "  private _oldDamage = 0; " \n "  if (_hitSelection isEqualTo """") then {_oldDamage = damage _unit} else {_oldDamage = _unit getHit _hitSelection}; " \n "  private _newDamage = _damage - _oldDamage max 0; " \n "  private _incomingDamage = _newDamage; " \n "  private _playerHealth = damage _unit; " \n " " \n "  if (_newDamage > 0 && !(_projectile isEqualTo """")) then { " \n "    private _damageMultiplier = _damageMultiplierBody; " \n "    private _upperLimit = _limitBody; " \n "    switch (_hitSelection) do { " \n "      case ""face_hub""; " \n "      case ""head"": { " \n "        _damageMultiplier = _damageMultiplierHead; " \n "        _upperLimit = _limitHead; " \n "      }; " \n "      case ""arms""; " \n "      case ""hands""; " \n "      case ""legs"": { " \n "        _damageMultiplier = _damageMultiplierLimbs; " \n "        _upperLimit = _limitLimbs; " \n "      }; " \n "      case """": { " \n "        _damageMultiplier = _damageMultiplierOverall; " \n "        _upperLimit = _limitOverall; " \n "      }; " \n "      default { " \n "        _damageMultiplier = _damageMultiplierBody; " \n "        _upperLimit = _limitBody; " \n "      }; " \n "    }; " \n "    _newDamage = _newDamage * _damageMultiplier; " \n "    if (_newDamage > _upperLimit) then { " \n "      _newDamage = _upperLimit; " \n "    }; " \n " " \n "    _damage = _oldDamage + _newDamage; " \n "  }; " \n " " \n "  if ( isPlayer _unit ) then { " \n "    if ( lifeState _unit == ""INCAPACITATED"" ) then { " \n "      _damage = _oldDamage; " \n "    } else { " \n "      _this set[ 2, _damage ]; " \n "      _damage = _this call bis_fnc_reviveEhHandleDamage; " \n "    }; " \n "  }; " \n "  _damage " \n "}]";
			};
			id=301;
		};
		class Item93
		{
			dataType="Group";
			side="West";
			class Entities
			{
				items=1;
				class Item0
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={1256.3895,51.108883,526.93909};
						angles[]={0,1.5916864,0};
					};
					side="West";
					flags=7;
					class Attributes
					{
						init="this addEventHandler [ ""HandleDamage"", { " \n "  params [""_unit"", ""_hitSelection"", ""_damage"",""_source"",""_projectile"",""_hitPartIndex"", ""_instigator"", ""_hitPoint""]; " \n " " \n "  private _damageMultiplierHead = 0.4; " \n "  private _damageMultiplierBody = 0.3; " \n "  private _damageMultiplierLimbs = 0.25; " \n "  private _damageMultiplierOverall = 0.25; " \n "  private _limitHead = 1.0; " \n "  private _limitBody = 0.25; " \n "  private _limitLimbs = 0.1; " \n "  private _limitOverall = 0.25; " \n "  private _oldDamage = 0; " \n "  if (_hitSelection isEqualTo """") then {_oldDamage = damage _unit} else {_oldDamage = _unit getHit _hitSelection}; " \n "  private _newDamage = _damage - _oldDamage max 0; " \n "  private _incomingDamage = _newDamage; " \n "  private _playerHealth = damage _unit; " \n " " \n "  if (_newDamage > 0 && !(_projectile isEqualTo """")) then { " \n "    private _damageMultiplier = _damageMultiplierBody; " \n "    private _upperLimit = _limitBody; " \n "    switch (_hitSelection) do { " \n "      case ""face_hub""; " \n "      case ""head"": { " \n "        _damageMultiplier = _damageMultiplierHead; " \n "        _upperLimit = _limitHead; " \n "      }; " \n "      case ""arms""; " \n "      case ""hands""; " \n "      case ""legs"": { " \n "        _damageMultiplier = _damageMultiplierLimbs; " \n "        _upperLimit = _limitLimbs; " \n "      }; " \n "      case """": { " \n "        _damageMultiplier = _damageMultiplierOverall; " \n "        _upperLimit = _limitOverall; " \n "      }; " \n "      default { " \n "        _damageMultiplier = _damageMultiplierBody; " \n "        _upperLimit = _limitBody; " \n "      }; " \n "    }; " \n "    _newDamage = _newDamage * _damageMultiplier; " \n "    if (_newDamage > _upperLimit) then { " \n "      _newDamage = _upperLimit; " \n "    }; " \n " " \n "    _damage = _oldDamage + _newDamage; " \n "  }; " \n " " \n "  if ( isPlayer _unit ) then { " \n "    if ( lifeState _unit == ""INCAPACITATED"" ) then { " \n "      _damage = _oldDamage; " \n "    } else { " \n "      _this set[ 2, _damage ]; " \n "      _damage = _this call bis_fnc_reviveEhHandleDamage; " \n "    }; " \n "  }; " \n "  _damage " \n "}]";
						isPlayable=1;
						class Inventory
						{
							class primaryWeapon
							{
								name="vn_m1carbine";
								class primaryMuzzleMag
								{
									name="vn_carbine_15_mag";
									ammoLeft=15;
								};
							};
							class secondaryWeapon
							{
								name="vn_m127";
								class primaryMuzzleMag
								{
									name="vn_m127_mag";
									ammoLeft=1;
								};
							};
							class handgun
							{
								name="vn_mx991";
							};
							class binocular
							{
								name="vn_m19_binocs_grey";
							};
							class uniform
							{
								typeName="vn_b_uniform_macv_01_02";
								isBackpack=0;
								class MagazineCargo
								{
									items=1;
									class Item0
									{
										name="vn_prop_food_fresh_01";
										count=24;
										ammoLeft=100;
									};
								};
								class ItemCargo
								{
									items=1;
									class Item0
									{
										name="vn_b_item_firstaidkit";
										count=8;
									};
								};
							};
							class vest
							{
								typeName="vn_b_vest_usarmy_03";
								isBackpack=0;
								class MagazineCargo
								{
									items=1;
									class Item0
									{
										name="vn_m61_grenade_mag";
										count=9;
										ammoLeft=1;
									};
								};
							};
							class backpack
							{
								typeName="vn_b_pack_03";
								isBackpack=1;
								class MagazineCargo
								{
									items=6;
									class Item0
									{
										name="vn_m129_mag";
										count=5;
										ammoLeft=1;
									};
									class Item1
									{
										name="vn_carbine_15_t_mag";
										count=12;
										ammoLeft=15;
									};
									class Item2
									{
										name="vn_m34_grenade_mag";
										count=1;
										ammoLeft=1;
									};
									class Item3
									{
										name="vn_m18_purple_mag";
										count=2;
										ammoLeft=1;
									};
									class Item4
									{
										name="vn_m18_red_mag";
										count=2;
										ammoLeft=1;
									};
									class Item5
									{
										name="vn_mine_m112_remote_mag";
										count=5;
										ammoLeft=1;
									};
								};
								class ItemCargo
								{
									items=2;
									class Item0
									{
										name="vn_b_item_firstaidkit";
										count=2;
									};
									class Item1
									{
										name="vn_b_item_trapkit";
										count=1;
									};
								};
							};
							map="vn_b_item_map";
							compass="vn_b_item_compass";
							watch="vn_b_item_watch";
							radio="vn_b_item_radio_urc10";
							headgear="vn_b_boonie_02_02";
						};
					};
					id=304;
					type="vn_b_men_sf_06";
					atlOffset=7.6293945e-006;
					class CustomAttributes
					{
						class Attribute0
						{
							property="speaker";
							expression="_this setspeaker _value;";
							class Value
							{
								class data
								{
									singleType="STRING";
									value="Male02ENG";
								};
							};
						};
						class Attribute1
						{
							property="pitch";
							expression="_this setpitch _value;";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1.04;
								};
							};
						};
						class Attribute2
						{
							property="enableStamina";
							expression="_this enablestamina _value;";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=0;
								};
							};
						};
						nAttributes=3;
					};
				};
			};
			class Attributes
			{
				init="this addEventHandler [ ""HandleDamage"", { " \n "  params [""_unit"", ""_hitSelection"", ""_damage"",""_source"",""_projectile"",""_hitPartIndex"", ""_instigator"", ""_hitPoint""]; " \n " " \n "  private _damageMultiplierHead = 0.4; " \n "  private _damageMultiplierBody = 0.3; " \n "  private _damageMultiplierLimbs = 0.35; " \n "  private _damageMultiplierOverall = 0.3; " \n "  private _limitHead = 1.0; " \n "  private _limitBody = 0.25; " \n "  private _limitLimbs = 0.1; " \n "  private _limitOverall = 0.25; " \n "  private _oldDamage = 0; " \n "  if (_hitSelection isEqualTo """") then {_oldDamage = damage _unit} else {_oldDamage = _unit getHit _hitSelection}; " \n "  private _newDamage = _damage - _oldDamage max 0; " \n "  private _incomingDamage = _newDamage; " \n "  private _playerHealth = damage _unit; " \n " " \n "  if (_newDamage > 0 && !(_projectile isEqualTo """")) then { " \n "    private _damageMultiplier = _damageMultiplierBody; " \n "    private _upperLimit = _limitBody; " \n "    switch (_hitSelection) do { " \n "      case ""face_hub""; " \n "      case ""head"": { " \n "        _damageMultiplier = _damageMultiplierHead; " \n "        _upperLimit = _limitHead; " \n "      }; " \n "      case ""arms""; " \n "      case ""hands""; " \n "      case ""legs"": { " \n "        _damageMultiplier = _damageMultiplierLimbs; " \n "        _upperLimit = _limitLimbs; " \n "      }; " \n "      case """": { " \n "        _damageMultiplier = _damageMultiplierOverall; " \n "        _upperLimit = _limitOverall; " \n "      }; " \n "      default { " \n "        _damageMultiplier = _damageMultiplierBody; " \n "        _upperLimit = _limitBody; " \n "      }; " \n "    }; " \n "    _newDamage = _newDamage * _damageMultiplier; " \n "    if (_newDamage > _upperLimit) then { " \n "      _newDamage = _upperLimit; " \n "    }; " \n " " \n "    _damage = _oldDamage + _newDamage; " \n "  }; " \n " " \n "  if ( isPlayer _unit ) then { " \n "    if ( lifeState _unit == ""INCAPACITATED"" ) then { " \n "      _damage = _oldDamage; " \n "    } else { " \n "      _this set[ 2, _damage ]; " \n "      _damage = _this call bis_fnc_reviveEhHandleDamage; " \n "    }; " \n "  }; " \n "  _damage " \n "}]";
			};
			id=303;
			atlOffset=7.6293945e-006;
		};
		class Item94
		{
			dataType="Group";
			side="West";
			class Entities
			{
				items=1;
				class Item0
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={1256.3768,51.056862,528.13293};
						angles[]={0,1.5916864,0};
					};
					side="West";
					flags=7;
					class Attributes
					{
						init="this addEventHandler [ ""HandleDamage"", { " \n "  params [""_unit"", ""_hitSelection"", ""_damage"",""_source"",""_projectile"",""_hitPartIndex"", ""_instigator"", ""_hitPoint""]; " \n " " \n "  private _damageMultiplierHead = 0.4; " \n "  private _damageMultiplierBody = 0.3; " \n "  private _damageMultiplierLimbs = 0.25; " \n "  private _damageMultiplierOverall = 0.25; " \n "  private _limitHead = 1.0; " \n "  private _limitBody = 0.25; " \n "  private _limitLimbs = 0.1; " \n "  private _limitOverall = 0.25; " \n "  private _oldDamage = 0; " \n "  if (_hitSelection isEqualTo """") then {_oldDamage = damage _unit} else {_oldDamage = _unit getHit _hitSelection}; " \n "  private _newDamage = _damage - _oldDamage max 0; " \n "  private _incomingDamage = _newDamage; " \n "  private _playerHealth = damage _unit; " \n " " \n "  if (_newDamage > 0 && !(_projectile isEqualTo """")) then { " \n "    private _damageMultiplier = _damageMultiplierBody; " \n "    private _upperLimit = _limitBody; " \n "    switch (_hitSelection) do { " \n "      case ""face_hub""; " \n "      case ""head"": { " \n "        _damageMultiplier = _damageMultiplierHead; " \n "        _upperLimit = _limitHead; " \n "      }; " \n "      case ""arms""; " \n "      case ""hands""; " \n "      case ""legs"": { " \n "        _damageMultiplier = _damageMultiplierLimbs; " \n "        _upperLimit = _limitLimbs; " \n "      }; " \n "      case """": { " \n "        _damageMultiplier = _damageMultiplierOverall; " \n "        _upperLimit = _limitOverall; " \n "      }; " \n "      default { " \n "        _damageMultiplier = _damageMultiplierBody; " \n "        _upperLimit = _limitBody; " \n "      }; " \n "    }; " \n "    _newDamage = _newDamage * _damageMultiplier; " \n "    if (_newDamage > _upperLimit) then { " \n "      _newDamage = _upperLimit; " \n "    }; " \n " " \n "    _damage = _oldDamage + _newDamage; " \n "  }; " \n " " \n "  if ( isPlayer _unit ) then { " \n "    if ( lifeState _unit == ""INCAPACITATED"" ) then { " \n "      _damage = _oldDamage; " \n "    } else { " \n "      _this set[ 2, _damage ]; " \n "      _damage = _this call bis_fnc_reviveEhHandleDamage; " \n "    }; " \n "  }; " \n "  _damage " \n "}]";
						isPlayable=1;
						class Inventory
						{
							class primaryWeapon
							{
								name="vn_m1carbine";
								class primaryMuzzleMag
								{
									name="vn_carbine_15_mag";
									ammoLeft=15;
								};
							};
							class secondaryWeapon
							{
								name="vn_m127";
								class primaryMuzzleMag
								{
									name="vn_m127_mag";
									ammoLeft=1;
								};
							};
							class handgun
							{
								name="vn_mx991";
							};
							class binocular
							{
								name="vn_m19_binocs_grey";
							};
							class uniform
							{
								typeName="vn_b_uniform_macv_01_02";
								isBackpack=0;
								class MagazineCargo
								{
									items=1;
									class Item0
									{
										name="vn_prop_food_fresh_01";
										count=24;
										ammoLeft=100;
									};
								};
								class ItemCargo
								{
									items=1;
									class Item0
									{
										name="vn_b_item_firstaidkit";
										count=8;
									};
								};
							};
							class vest
							{
								typeName="vn_b_vest_usarmy_03";
								isBackpack=0;
								class MagazineCargo
								{
									items=1;
									class Item0
									{
										name="vn_m61_grenade_mag";
										count=9;
										ammoLeft=1;
									};
								};
							};
							class backpack
							{
								typeName="vn_b_pack_03";
								isBackpack=1;
								class MagazineCargo
								{
									items=6;
									class Item0
									{
										name="vn_m129_mag";
										count=5;
										ammoLeft=1;
									};
									class Item1
									{
										name="vn_carbine_15_t_mag";
										count=12;
										ammoLeft=15;
									};
									class Item2
									{
										name="vn_m34_grenade_mag";
										count=1;
										ammoLeft=1;
									};
									class Item3
									{
										name="vn_m18_purple_mag";
										count=2;
										ammoLeft=1;
									};
									class Item4
									{
										name="vn_m18_red_mag";
										count=2;
										ammoLeft=1;
									};
									class Item5
									{
										name="vn_mine_m112_remote_mag";
										count=5;
										ammoLeft=1;
									};
								};
								class ItemCargo
								{
									items=2;
									class Item0
									{
										name="vn_b_item_firstaidkit";
										count=2;
									};
									class Item1
									{
										name="vn_b_item_trapkit";
										count=1;
									};
								};
							};
							map="vn_b_item_map";
							compass="vn_b_item_compass";
							watch="vn_b_item_watch";
							radio="vn_b_item_radio_urc10";
							headgear="vn_b_boonie_02_02";
						};
					};
					id=306;
					type="vn_b_men_sf_06";
					atlOffset=3.8146973e-006;
					class CustomAttributes
					{
						class Attribute0
						{
							property="speaker";
							expression="_this setspeaker _value;";
							class Value
							{
								class data
								{
									singleType="STRING";
									value="Male02ENG";
								};
							};
						};
						class Attribute1
						{
							property="pitch";
							expression="_this setpitch _value;";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1.04;
								};
							};
						};
						class Attribute2
						{
							property="enableStamina";
							expression="_this enablestamina _value;";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=0;
								};
							};
						};
						nAttributes=3;
					};
				};
			};
			class Attributes
			{
				init="this addEventHandler [ ""HandleDamage"", { " \n "  params [""_unit"", ""_hitSelection"", ""_damage"",""_source"",""_projectile"",""_hitPartIndex"", ""_instigator"", ""_hitPoint""]; " \n " " \n "  private _damageMultiplierHead = 0.4; " \n "  private _damageMultiplierBody = 0.3; " \n "  private _damageMultiplierLimbs = 0.35; " \n "  private _damageMultiplierOverall = 0.3; " \n "  private _limitHead = 1.0; " \n "  private _limitBody = 0.25; " \n "  private _limitLimbs = 0.1; " \n "  private _limitOverall = 0.25; " \n "  private _oldDamage = 0; " \n "  if (_hitSelection isEqualTo """") then {_oldDamage = damage _unit} else {_oldDamage = _unit getHit _hitSelection}; " \n "  private _newDamage = _damage - _oldDamage max 0; " \n "  private _incomingDamage = _newDamage; " \n "  private _playerHealth = damage _unit; " \n " " \n "  if (_newDamage > 0 && !(_projectile isEqualTo """")) then { " \n "    private _damageMultiplier = _damageMultiplierBody; " \n "    private _upperLimit = _limitBody; " \n "    switch (_hitSelection) do { " \n "      case ""face_hub""; " \n "      case ""head"": { " \n "        _damageMultiplier = _damageMultiplierHead; " \n "        _upperLimit = _limitHead; " \n "      }; " \n "      case ""arms""; " \n "      case ""hands""; " \n "      case ""legs"": { " \n "        _damageMultiplier = _damageMultiplierLimbs; " \n "        _upperLimit = _limitLimbs; " \n "      }; " \n "      case """": { " \n "        _damageMultiplier = _damageMultiplierOverall; " \n "        _upperLimit = _limitOverall; " \n "      }; " \n "      default { " \n "        _damageMultiplier = _damageMultiplierBody; " \n "        _upperLimit = _limitBody; " \n "      }; " \n "    }; " \n "    _newDamage = _newDamage * _damageMultiplier; " \n "    if (_newDamage > _upperLimit) then { " \n "      _newDamage = _upperLimit; " \n "    }; " \n " " \n "    _damage = _oldDamage + _newDamage; " \n "  }; " \n " " \n "  if ( isPlayer _unit ) then { " \n "    if ( lifeState _unit == ""INCAPACITATED"" ) then { " \n "      _damage = _oldDamage; " \n "    } else { " \n "      _this set[ 2, _damage ]; " \n "      _damage = _this call bis_fnc_reviveEhHandleDamage; " \n "    }; " \n "  }; " \n "  _damage " \n "}]";
			};
			id=305;
			atlOffset=3.8146973e-006;
		};
		class Item95
		{
			dataType="Group";
			side="West";
			class Entities
			{
				items=1;
				class Item0
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={1256.6034,51.021683,529.50403};
						angles[]={0,1.5916864,0};
					};
					side="West";
					flags=7;
					class Attributes
					{
						init="this addEventHandler [ ""HandleDamage"", { " \n "  params [""_unit"", ""_hitSelection"", ""_damage"",""_source"",""_projectile"",""_hitPartIndex"", ""_instigator"", ""_hitPoint""]; " \n " " \n "  private _damageMultiplierHead = 0.4; " \n "  private _damageMultiplierBody = 0.3; " \n "  private _damageMultiplierLimbs = 0.25; " \n "  private _damageMultiplierOverall = 0.25; " \n "  private _limitHead = 1.0; " \n "  private _limitBody = 0.25; " \n "  private _limitLimbs = 0.1; " \n "  private _limitOverall = 0.25; " \n "  private _oldDamage = 0; " \n "  if (_hitSelection isEqualTo """") then {_oldDamage = damage _unit} else {_oldDamage = _unit getHit _hitSelection}; " \n "  private _newDamage = _damage - _oldDamage max 0; " \n "  private _incomingDamage = _newDamage; " \n "  private _playerHealth = damage _unit; " \n " " \n "  if (_newDamage > 0 && !(_projectile isEqualTo """")) then { " \n "    private _damageMultiplier = _damageMultiplierBody; " \n "    private _upperLimit = _limitBody; " \n "    switch (_hitSelection) do { " \n "      case ""face_hub""; " \n "      case ""head"": { " \n "        _damageMultiplier = _damageMultiplierHead; " \n "        _upperLimit = _limitHead; " \n "      }; " \n "      case ""arms""; " \n "      case ""hands""; " \n "      case ""legs"": { " \n "        _damageMultiplier = _damageMultiplierLimbs; " \n "        _upperLimit = _limitLimbs; " \n "      }; " \n "      case """": { " \n "        _damageMultiplier = _damageMultiplierOverall; " \n "        _upperLimit = _limitOverall; " \n "      }; " \n "      default { " \n "        _damageMultiplier = _damageMultiplierBody; " \n "        _upperLimit = _limitBody; " \n "      }; " \n "    }; " \n "    _newDamage = _newDamage * _damageMultiplier; " \n "    if (_newDamage > _upperLimit) then { " \n "      _newDamage = _upperLimit; " \n "    }; " \n " " \n "    _damage = _oldDamage + _newDamage; " \n "  }; " \n " " \n "  if ( isPlayer _unit ) then { " \n "    if ( lifeState _unit == ""INCAPACITATED"" ) then { " \n "      _damage = _oldDamage; " \n "    } else { " \n "      _this set[ 2, _damage ]; " \n "      _damage = _this call bis_fnc_reviveEhHandleDamage; " \n "    }; " \n "  }; " \n "  _damage " \n "}]";
						isPlayable=1;
						class Inventory
						{
							class primaryWeapon
							{
								name="vn_m1carbine";
								class primaryMuzzleMag
								{
									name="vn_carbine_15_mag";
									ammoLeft=15;
								};
							};
							class secondaryWeapon
							{
								name="vn_m127";
								class primaryMuzzleMag
								{
									name="vn_m127_mag";
									ammoLeft=1;
								};
							};
							class handgun
							{
								name="vn_mx991";
							};
							class binocular
							{
								name="vn_m19_binocs_grey";
							};
							class uniform
							{
								typeName="vn_b_uniform_macv_01_02";
								isBackpack=0;
								class MagazineCargo
								{
									items=1;
									class Item0
									{
										name="vn_prop_food_fresh_01";
										count=24;
										ammoLeft=100;
									};
								};
								class ItemCargo
								{
									items=1;
									class Item0
									{
										name="vn_b_item_firstaidkit";
										count=8;
									};
								};
							};
							class vest
							{
								typeName="vn_b_vest_usarmy_03";
								isBackpack=0;
								class MagazineCargo
								{
									items=1;
									class Item0
									{
										name="vn_m61_grenade_mag";
										count=9;
										ammoLeft=1;
									};
								};
							};
							class backpack
							{
								typeName="vn_b_pack_03";
								isBackpack=1;
								class MagazineCargo
								{
									items=6;
									class Item0
									{
										name="vn_m129_mag";
										count=5;
										ammoLeft=1;
									};
									class Item1
									{
										name="vn_carbine_15_t_mag";
										count=12;
										ammoLeft=15;
									};
									class Item2
									{
										name="vn_m34_grenade_mag";
										count=1;
										ammoLeft=1;
									};
									class Item3
									{
										name="vn_m18_purple_mag";
										count=2;
										ammoLeft=1;
									};
									class Item4
									{
										name="vn_m18_red_mag";
										count=2;
										ammoLeft=1;
									};
									class Item5
									{
										name="vn_mine_m112_remote_mag";
										count=5;
										ammoLeft=1;
									};
								};
								class ItemCargo
								{
									items=2;
									class Item0
									{
										name="vn_b_item_firstaidkit";
										count=2;
									};
									class Item1
									{
										name="vn_b_item_trapkit";
										count=1;
									};
								};
							};
							map="vn_b_item_map";
							compass="vn_b_item_compass";
							watch="vn_b_item_watch";
							radio="vn_b_item_radio_urc10";
							headgear="vn_b_boonie_02_02";
						};
					};
					id=308;
					type="vn_b_men_sf_06";
					class CustomAttributes
					{
						class Attribute0
						{
							property="speaker";
							expression="_this setspeaker _value;";
							class Value
							{
								class data
								{
									singleType="STRING";
									value="Male02ENG";
								};
							};
						};
						class Attribute1
						{
							property="pitch";
							expression="_this setpitch _value;";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1.04;
								};
							};
						};
						class Attribute2
						{
							property="enableStamina";
							expression="_this enablestamina _value;";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=0;
								};
							};
						};
						nAttributes=3;
					};
				};
			};
			class Attributes
			{
				init="this addEventHandler [ ""HandleDamage"", { " \n "  params [""_unit"", ""_hitSelection"", ""_damage"",""_source"",""_projectile"",""_hitPartIndex"", ""_instigator"", ""_hitPoint""]; " \n " " \n "  private _damageMultiplierHead = 0.4; " \n "  private _damageMultiplierBody = 0.3; " \n "  private _damageMultiplierLimbs = 0.35; " \n "  private _damageMultiplierOverall = 0.3; " \n "  private _limitHead = 1.0; " \n "  private _limitBody = 0.25; " \n "  private _limitLimbs = 0.1; " \n "  private _limitOverall = 0.25; " \n "  private _oldDamage = 0; " \n "  if (_hitSelection isEqualTo """") then {_oldDamage = damage _unit} else {_oldDamage = _unit getHit _hitSelection}; " \n "  private _newDamage = _damage - _oldDamage max 0; " \n "  private _incomingDamage = _newDamage; " \n "  private _playerHealth = damage _unit; " \n " " \n "  if (_newDamage > 0 && !(_projectile isEqualTo """")) then { " \n "    private _damageMultiplier = _damageMultiplierBody; " \n "    private _upperLimit = _limitBody; " \n "    switch (_hitSelection) do { " \n "      case ""face_hub""; " \n "      case ""head"": { " \n "        _damageMultiplier = _damageMultiplierHead; " \n "        _upperLimit = _limitHead; " \n "      }; " \n "      case ""arms""; " \n "      case ""hands""; " \n "      case ""legs"": { " \n "        _damageMultiplier = _damageMultiplierLimbs; " \n "        _upperLimit = _limitLimbs; " \n "      }; " \n "      case """": { " \n "        _damageMultiplier = _damageMultiplierOverall; " \n "        _upperLimit = _limitOverall; " \n "      }; " \n "      default { " \n "        _damageMultiplier = _damageMultiplierBody; " \n "        _upperLimit = _limitBody; " \n "      }; " \n "    }; " \n "    _newDamage = _newDamage * _damageMultiplier; " \n "    if (_newDamage > _upperLimit) then { " \n "      _newDamage = _upperLimit; " \n "    }; " \n " " \n "    _damage = _oldDamage + _newDamage; " \n "  }; " \n " " \n "  if ( isPlayer _unit ) then { " \n "    if ( lifeState _unit == ""INCAPACITATED"" ) then { " \n "      _damage = _oldDamage; " \n "    } else { " \n "      _this set[ 2, _damage ]; " \n "      _damage = _this call bis_fnc_reviveEhHandleDamage; " \n "    }; " \n "  }; " \n "  _damage " \n "}]";
			};
			id=307;
		};
		class Item96
		{
			dataType="Group";
			side="West";
			class Entities
			{
				items=1;
				class Item0
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={1256.7948,50.987034,530.797};
						angles[]={0,1.5916864,0};
					};
					side="West";
					flags=7;
					class Attributes
					{
						init="this addEventHandler [ ""HandleDamage"", { " \n "  params [""_unit"", ""_hitSelection"", ""_damage"",""_source"",""_projectile"",""_hitPartIndex"", ""_instigator"", ""_hitPoint""]; " \n " " \n "  private _damageMultiplierHead = 0.4; " \n "  private _damageMultiplierBody = 0.3; " \n "  private _damageMultiplierLimbs = 0.25; " \n "  private _damageMultiplierOverall = 0.25; " \n "  private _limitHead = 1.0; " \n "  private _limitBody = 0.25; " \n "  private _limitLimbs = 0.1; " \n "  private _limitOverall = 0.25; " \n "  private _oldDamage = 0; " \n "  if (_hitSelection isEqualTo """") then {_oldDamage = damage _unit} else {_oldDamage = _unit getHit _hitSelection}; " \n "  private _newDamage = _damage - _oldDamage max 0; " \n "  private _incomingDamage = _newDamage; " \n "  private _playerHealth = damage _unit; " \n " " \n "  if (_newDamage > 0 && !(_projectile isEqualTo """")) then { " \n "    private _damageMultiplier = _damageMultiplierBody; " \n "    private _upperLimit = _limitBody; " \n "    switch (_hitSelection) do { " \n "      case ""face_hub""; " \n "      case ""head"": { " \n "        _damageMultiplier = _damageMultiplierHead; " \n "        _upperLimit = _limitHead; " \n "      }; " \n "      case ""arms""; " \n "      case ""hands""; " \n "      case ""legs"": { " \n "        _damageMultiplier = _damageMultiplierLimbs; " \n "        _upperLimit = _limitLimbs; " \n "      }; " \n "      case """": { " \n "        _damageMultiplier = _damageMultiplierOverall; " \n "        _upperLimit = _limitOverall; " \n "      }; " \n "      default { " \n "        _damageMultiplier = _damageMultiplierBody; " \n "        _upperLimit = _limitBody; " \n "      }; " \n "    }; " \n "    _newDamage = _newDamage * _damageMultiplier; " \n "    if (_newDamage > _upperLimit) then { " \n "      _newDamage = _upperLimit; " \n "    }; " \n " " \n "    _damage = _oldDamage + _newDamage; " \n "  }; " \n " " \n "  if ( isPlayer _unit ) then { " \n "    if ( lifeState _unit == ""INCAPACITATED"" ) then { " \n "      _damage = _oldDamage; " \n "    } else { " \n "      _this set[ 2, _damage ]; " \n "      _damage = _this call bis_fnc_reviveEhHandleDamage; " \n "    }; " \n "  }; " \n "  _damage " \n "}]";
						isPlayable=1;
						class Inventory
						{
							class primaryWeapon
							{
								name="vn_m1carbine";
								class primaryMuzzleMag
								{
									name="vn_carbine_15_mag";
									ammoLeft=15;
								};
							};
							class secondaryWeapon
							{
								name="vn_m127";
								class primaryMuzzleMag
								{
									name="vn_m127_mag";
									ammoLeft=1;
								};
							};
							class handgun
							{
								name="vn_mx991";
							};
							class binocular
							{
								name="vn_m19_binocs_grey";
							};
							class uniform
							{
								typeName="vn_b_uniform_macv_01_02";
								isBackpack=0;
								class MagazineCargo
								{
									items=1;
									class Item0
									{
										name="vn_prop_food_fresh_01";
										count=24;
										ammoLeft=100;
									};
								};
								class ItemCargo
								{
									items=1;
									class Item0
									{
										name="vn_b_item_firstaidkit";
										count=8;
									};
								};
							};
							class vest
							{
								typeName="vn_b_vest_usarmy_03";
								isBackpack=0;
								class MagazineCargo
								{
									items=1;
									class Item0
									{
										name="vn_m61_grenade_mag";
										count=9;
										ammoLeft=1;
									};
								};
							};
							class backpack
							{
								typeName="vn_b_pack_03";
								isBackpack=1;
								class MagazineCargo
								{
									items=6;
									class Item0
									{
										name="vn_m129_mag";
										count=5;
										ammoLeft=1;
									};
									class Item1
									{
										name="vn_carbine_15_t_mag";
										count=12;
										ammoLeft=15;
									};
									class Item2
									{
										name="vn_m34_grenade_mag";
										count=1;
										ammoLeft=1;
									};
									class Item3
									{
										name="vn_m18_purple_mag";
										count=2;
										ammoLeft=1;
									};
									class Item4
									{
										name="vn_m18_red_mag";
										count=2;
										ammoLeft=1;
									};
									class Item5
									{
										name="vn_mine_m112_remote_mag";
										count=5;
										ammoLeft=1;
									};
								};
								class ItemCargo
								{
									items=2;
									class Item0
									{
										name="vn_b_item_firstaidkit";
										count=2;
									};
									class Item1
									{
										name="vn_b_item_trapkit";
										count=1;
									};
								};
							};
							map="vn_b_item_map";
							compass="vn_b_item_compass";
							watch="vn_b_item_watch";
							radio="vn_b_item_radio_urc10";
							headgear="vn_b_boonie_02_02";
						};
					};
					id=310;
					type="vn_b_men_sf_06";
					class CustomAttributes
					{
						class Attribute0
						{
							property="speaker";
							expression="_this setspeaker _value;";
							class Value
							{
								class data
								{
									singleType="STRING";
									value="Male02ENG";
								};
							};
						};
						class Attribute1
						{
							property="pitch";
							expression="_this setpitch _value;";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1.04;
								};
							};
						};
						class Attribute2
						{
							property="enableStamina";
							expression="_this enablestamina _value;";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=0;
								};
							};
						};
						nAttributes=3;
					};
				};
			};
			class Attributes
			{
				init="this addEventHandler [ ""HandleDamage"", { " \n "  params [""_unit"", ""_hitSelection"", ""_damage"",""_source"",""_projectile"",""_hitPartIndex"", ""_instigator"", ""_hitPoint""]; " \n " " \n "  private _damageMultiplierHead = 0.4; " \n "  private _damageMultiplierBody = 0.3; " \n "  private _damageMultiplierLimbs = 0.35; " \n "  private _damageMultiplierOverall = 0.3; " \n "  private _limitHead = 1.0; " \n "  private _limitBody = 0.25; " \n "  private _limitLimbs = 0.1; " \n "  private _limitOverall = 0.25; " \n "  private _oldDamage = 0; " \n "  if (_hitSelection isEqualTo """") then {_oldDamage = damage _unit} else {_oldDamage = _unit getHit _hitSelection}; " \n "  private _newDamage = _damage - _oldDamage max 0; " \n "  private _incomingDamage = _newDamage; " \n "  private _playerHealth = damage _unit; " \n " " \n "  if (_newDamage > 0 && !(_projectile isEqualTo """")) then { " \n "    private _damageMultiplier = _damageMultiplierBody; " \n "    private _upperLimit = _limitBody; " \n "    switch (_hitSelection) do { " \n "      case ""face_hub""; " \n "      case ""head"": { " \n "        _damageMultiplier = _damageMultiplierHead; " \n "        _upperLimit = _limitHead; " \n "      }; " \n "      case ""arms""; " \n "      case ""hands""; " \n "      case ""legs"": { " \n "        _damageMultiplier = _damageMultiplierLimbs; " \n "        _upperLimit = _limitLimbs; " \n "      }; " \n "      case """": { " \n "        _damageMultiplier = _damageMultiplierOverall; " \n "        _upperLimit = _limitOverall; " \n "      }; " \n "      default { " \n "        _damageMultiplier = _damageMultiplierBody; " \n "        _upperLimit = _limitBody; " \n "      }; " \n "    }; " \n "    _newDamage = _newDamage * _damageMultiplier; " \n "    if (_newDamage > _upperLimit) then { " \n "      _newDamage = _upperLimit; " \n "    }; " \n " " \n "    _damage = _oldDamage + _newDamage; " \n "  }; " \n " " \n "  if ( isPlayer _unit ) then { " \n "    if ( lifeState _unit == ""INCAPACITATED"" ) then { " \n "      _damage = _oldDamage; " \n "    } else { " \n "      _this set[ 2, _damage ]; " \n "      _damage = _this call bis_fnc_reviveEhHandleDamage; " \n "    }; " \n "  }; " \n "  _damage " \n "}]";
			};
			id=309;
		};
		class Item97
		{
			dataType="Group";
			side="West";
			class Entities
			{
				items=1;
				class Item0
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={1256.7655,50.952389,531.88293};
						angles[]={0,1.5916864,0};
					};
					side="West";
					flags=7;
					class Attributes
					{
						init="this addEventHandler [ ""HandleDamage"", { " \n "  params [""_unit"", ""_hitSelection"", ""_damage"",""_source"",""_projectile"",""_hitPartIndex"", ""_instigator"", ""_hitPoint""]; " \n " " \n "  private _damageMultiplierHead = 0.4; " \n "  private _damageMultiplierBody = 0.3; " \n "  private _damageMultiplierLimbs = 0.25; " \n "  private _damageMultiplierOverall = 0.25; " \n "  private _limitHead = 1.0; " \n "  private _limitBody = 0.25; " \n "  private _limitLimbs = 0.1; " \n "  private _limitOverall = 0.25; " \n "  private _oldDamage = 0; " \n "  if (_hitSelection isEqualTo """") then {_oldDamage = damage _unit} else {_oldDamage = _unit getHit _hitSelection}; " \n "  private _newDamage = _damage - _oldDamage max 0; " \n "  private _incomingDamage = _newDamage; " \n "  private _playerHealth = damage _unit; " \n " " \n "  if (_newDamage > 0 && !(_projectile isEqualTo """")) then { " \n "    private _damageMultiplier = _damageMultiplierBody; " \n "    private _upperLimit = _limitBody; " \n "    switch (_hitSelection) do { " \n "      case ""face_hub""; " \n "      case ""head"": { " \n "        _damageMultiplier = _damageMultiplierHead; " \n "        _upperLimit = _limitHead; " \n "      }; " \n "      case ""arms""; " \n "      case ""hands""; " \n "      case ""legs"": { " \n "        _damageMultiplier = _damageMultiplierLimbs; " \n "        _upperLimit = _limitLimbs; " \n "      }; " \n "      case """": { " \n "        _damageMultiplier = _damageMultiplierOverall; " \n "        _upperLimit = _limitOverall; " \n "      }; " \n "      default { " \n "        _damageMultiplier = _damageMultiplierBody; " \n "        _upperLimit = _limitBody; " \n "      }; " \n "    }; " \n "    _newDamage = _newDamage * _damageMultiplier; " \n "    if (_newDamage > _upperLimit) then { " \n "      _newDamage = _upperLimit; " \n "    }; " \n " " \n "    _damage = _oldDamage + _newDamage; " \n "  }; " \n " " \n "  if ( isPlayer _unit ) then { " \n "    if ( lifeState _unit == ""INCAPACITATED"" ) then { " \n "      _damage = _oldDamage; " \n "    } else { " \n "      _this set[ 2, _damage ]; " \n "      _damage = _this call bis_fnc_reviveEhHandleDamage; " \n "    }; " \n "  }; " \n "  _damage " \n "}]";
						isPlayable=1;
						class Inventory
						{
							class primaryWeapon
							{
								name="vn_m1carbine";
								class primaryMuzzleMag
								{
									name="vn_carbine_15_mag";
									ammoLeft=15;
								};
							};
							class secondaryWeapon
							{
								name="vn_m127";
								class primaryMuzzleMag
								{
									name="vn_m127_mag";
									ammoLeft=1;
								};
							};
							class handgun
							{
								name="vn_mx991";
							};
							class binocular
							{
								name="vn_m19_binocs_grey";
							};
							class uniform
							{
								typeName="vn_b_uniform_macv_01_02";
								isBackpack=0;
								class MagazineCargo
								{
									items=1;
									class Item0
									{
										name="vn_prop_food_fresh_01";
										count=24;
										ammoLeft=100;
									};
								};
								class ItemCargo
								{
									items=1;
									class Item0
									{
										name="vn_b_item_firstaidkit";
										count=8;
									};
								};
							};
							class vest
							{
								typeName="vn_b_vest_usarmy_03";
								isBackpack=0;
								class MagazineCargo
								{
									items=1;
									class Item0
									{
										name="vn_m61_grenade_mag";
										count=9;
										ammoLeft=1;
									};
								};
							};
							class backpack
							{
								typeName="vn_b_pack_03";
								isBackpack=1;
								class MagazineCargo
								{
									items=6;
									class Item0
									{
										name="vn_m129_mag";
										count=5;
										ammoLeft=1;
									};
									class Item1
									{
										name="vn_carbine_15_t_mag";
										count=12;
										ammoLeft=15;
									};
									class Item2
									{
										name="vn_m34_grenade_mag";
										count=1;
										ammoLeft=1;
									};
									class Item3
									{
										name="vn_m18_purple_mag";
										count=2;
										ammoLeft=1;
									};
									class Item4
									{
										name="vn_m18_red_mag";
										count=2;
										ammoLeft=1;
									};
									class Item5
									{
										name="vn_mine_m112_remote_mag";
										count=5;
										ammoLeft=1;
									};
								};
								class ItemCargo
								{
									items=2;
									class Item0
									{
										name="vn_b_item_firstaidkit";
										count=2;
									};
									class Item1
									{
										name="vn_b_item_trapkit";
										count=1;
									};
								};
							};
							map="vn_b_item_map";
							compass="vn_b_item_compass";
							watch="vn_b_item_watch";
							radio="vn_b_item_radio_urc10";
							headgear="vn_b_boonie_02_02";
						};
					};
					id=312;
					type="vn_b_men_sf_06";
					atlOffset=7.6293945e-006;
					class CustomAttributes
					{
						class Attribute0
						{
							property="speaker";
							expression="_this setspeaker _value;";
							class Value
							{
								class data
								{
									singleType="STRING";
									value="Male02ENG";
								};
							};
						};
						class Attribute1
						{
							property="pitch";
							expression="_this setpitch _value;";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1.04;
								};
							};
						};
						class Attribute2
						{
							property="enableStamina";
							expression="_this enablestamina _value;";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=0;
								};
							};
						};
						nAttributes=3;
					};
				};
			};
			class Attributes
			{
				init="this addEventHandler [ ""HandleDamage"", { " \n "  params [""_unit"", ""_hitSelection"", ""_damage"",""_source"",""_projectile"",""_hitPartIndex"", ""_instigator"", ""_hitPoint""]; " \n " " \n "  private _damageMultiplierHead = 0.4; " \n "  private _damageMultiplierBody = 0.3; " \n "  private _damageMultiplierLimbs = 0.35; " \n "  private _damageMultiplierOverall = 0.3; " \n "  private _limitHead = 1.0; " \n "  private _limitBody = 0.25; " \n "  private _limitLimbs = 0.1; " \n "  private _limitOverall = 0.25; " \n "  private _oldDamage = 0; " \n "  if (_hitSelection isEqualTo """") then {_oldDamage = damage _unit} else {_oldDamage = _unit getHit _hitSelection}; " \n "  private _newDamage = _damage - _oldDamage max 0; " \n "  private _incomingDamage = _newDamage; " \n "  private _playerHealth = damage _unit; " \n " " \n "  if (_newDamage > 0 && !(_projectile isEqualTo """")) then { " \n "    private _damageMultiplier = _damageMultiplierBody; " \n "    private _upperLimit = _limitBody; " \n "    switch (_hitSelection) do { " \n "      case ""face_hub""; " \n "      case ""head"": { " \n "        _damageMultiplier = _damageMultiplierHead; " \n "        _upperLimit = _limitHead; " \n "      }; " \n "      case ""arms""; " \n "      case ""hands""; " \n "      case ""legs"": { " \n "        _damageMultiplier = _damageMultiplierLimbs; " \n "        _upperLimit = _limitLimbs; " \n "      }; " \n "      case """": { " \n "        _damageMultiplier = _damageMultiplierOverall; " \n "        _upperLimit = _limitOverall; " \n "      }; " \n "      default { " \n "        _damageMultiplier = _damageMultiplierBody; " \n "        _upperLimit = _limitBody; " \n "      }; " \n "    }; " \n "    _newDamage = _newDamage * _damageMultiplier; " \n "    if (_newDamage > _upperLimit) then { " \n "      _newDamage = _upperLimit; " \n "    }; " \n " " \n "    _damage = _oldDamage + _newDamage; " \n "  }; " \n " " \n "  if ( isPlayer _unit ) then { " \n "    if ( lifeState _unit == ""INCAPACITATED"" ) then { " \n "      _damage = _oldDamage; " \n "    } else { " \n "      _this set[ 2, _damage ]; " \n "      _damage = _this call bis_fnc_reviveEhHandleDamage; " \n "    }; " \n "  }; " \n "  _damage " \n "}]";
			};
			id=311;
			atlOffset=7.6293945e-006;
		};
		class Item98
		{
			dataType="Group";
			side="West";
			class Entities
			{
				items=1;
				class Item0
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={1256.9667,50.923763,533.23938};
						angles[]={0,1.5916864,0};
					};
					side="West";
					flags=7;
					class Attributes
					{
						init="this addEventHandler [ ""HandleDamage"", { " \n "  params [""_unit"", ""_hitSelection"", ""_damage"",""_source"",""_projectile"",""_hitPartIndex"", ""_instigator"", ""_hitPoint""]; " \n " " \n "  private _damageMultiplierHead = 0.4; " \n "  private _damageMultiplierBody = 0.3; " \n "  private _damageMultiplierLimbs = 0.25; " \n "  private _damageMultiplierOverall = 0.25; " \n "  private _limitHead = 1.0; " \n "  private _limitBody = 0.25; " \n "  private _limitLimbs = 0.1; " \n "  private _limitOverall = 0.25; " \n "  private _oldDamage = 0; " \n "  if (_hitSelection isEqualTo """") then {_oldDamage = damage _unit} else {_oldDamage = _unit getHit _hitSelection}; " \n "  private _newDamage = _damage - _oldDamage max 0; " \n "  private _incomingDamage = _newDamage; " \n "  private _playerHealth = damage _unit; " \n " " \n "  if (_newDamage > 0 && !(_projectile isEqualTo """")) then { " \n "    private _damageMultiplier = _damageMultiplierBody; " \n "    private _upperLimit = _limitBody; " \n "    switch (_hitSelection) do { " \n "      case ""face_hub""; " \n "      case ""head"": { " \n "        _damageMultiplier = _damageMultiplierHead; " \n "        _upperLimit = _limitHead; " \n "      }; " \n "      case ""arms""; " \n "      case ""hands""; " \n "      case ""legs"": { " \n "        _damageMultiplier = _damageMultiplierLimbs; " \n "        _upperLimit = _limitLimbs; " \n "      }; " \n "      case """": { " \n "        _damageMultiplier = _damageMultiplierOverall; " \n "        _upperLimit = _limitOverall; " \n "      }; " \n "      default { " \n "        _damageMultiplier = _damageMultiplierBody; " \n "        _upperLimit = _limitBody; " \n "      }; " \n "    }; " \n "    _newDamage = _newDamage * _damageMultiplier; " \n "    if (_newDamage > _upperLimit) then { " \n "      _newDamage = _upperLimit; " \n "    }; " \n " " \n "    _damage = _oldDamage + _newDamage; " \n "  }; " \n " " \n "  if ( isPlayer _unit ) then { " \n "    if ( lifeState _unit == ""INCAPACITATED"" ) then { " \n "      _damage = _oldDamage; " \n "    } else { " \n "      _this set[ 2, _damage ]; " \n "      _damage = _this call bis_fnc_reviveEhHandleDamage; " \n "    }; " \n "  }; " \n "  _damage " \n "}]";
						isPlayable=1;
						class Inventory
						{
							class primaryWeapon
							{
								name="vn_m1carbine";
								class primaryMuzzleMag
								{
									name="vn_carbine_15_mag";
									ammoLeft=15;
								};
							};
							class secondaryWeapon
							{
								name="vn_m127";
								class primaryMuzzleMag
								{
									name="vn_m127_mag";
									ammoLeft=1;
								};
							};
							class handgun
							{
								name="vn_mx991";
							};
							class binocular
							{
								name="vn_m19_binocs_grey";
							};
							class uniform
							{
								typeName="vn_b_uniform_macv_01_02";
								isBackpack=0;
								class MagazineCargo
								{
									items=1;
									class Item0
									{
										name="vn_prop_food_fresh_01";
										count=24;
										ammoLeft=100;
									};
								};
								class ItemCargo
								{
									items=1;
									class Item0
									{
										name="vn_b_item_firstaidkit";
										count=8;
									};
								};
							};
							class vest
							{
								typeName="vn_b_vest_usarmy_03";
								isBackpack=0;
								class MagazineCargo
								{
									items=1;
									class Item0
									{
										name="vn_m61_grenade_mag";
										count=9;
										ammoLeft=1;
									};
								};
							};
							class backpack
							{
								typeName="vn_b_pack_03";
								isBackpack=1;
								class MagazineCargo
								{
									items=6;
									class Item0
									{
										name="vn_m129_mag";
										count=5;
										ammoLeft=1;
									};
									class Item1
									{
										name="vn_carbine_15_t_mag";
										count=12;
										ammoLeft=15;
									};
									class Item2
									{
										name="vn_m34_grenade_mag";
										count=1;
										ammoLeft=1;
									};
									class Item3
									{
										name="vn_m18_purple_mag";
										count=2;
										ammoLeft=1;
									};
									class Item4
									{
										name="vn_m18_red_mag";
										count=2;
										ammoLeft=1;
									};
									class Item5
									{
										name="vn_mine_m112_remote_mag";
										count=5;
										ammoLeft=1;
									};
								};
								class ItemCargo
								{
									items=2;
									class Item0
									{
										name="vn_b_item_firstaidkit";
										count=2;
									};
									class Item1
									{
										name="vn_b_item_trapkit";
										count=1;
									};
								};
							};
							map="vn_b_item_map";
							compass="vn_b_item_compass";
							watch="vn_b_item_watch";
							radio="vn_b_item_radio_urc10";
							headgear="vn_b_boonie_02_02";
						};
					};
					id=314;
					type="vn_b_men_sf_06";
					atlOffset=3.8146973e-006;
					class CustomAttributes
					{
						class Attribute0
						{
							property="speaker";
							expression="_this setspeaker _value;";
							class Value
							{
								class data
								{
									singleType="STRING";
									value="Male02ENG";
								};
							};
						};
						class Attribute1
						{
							property="pitch";
							expression="_this setpitch _value;";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1.04;
								};
							};
						};
						class Attribute2
						{
							property="enableStamina";
							expression="_this enablestamina _value;";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=0;
								};
							};
						};
						nAttributes=3;
					};
				};
			};
			class Attributes
			{
				init="this addEventHandler [ ""HandleDamage"", { " \n "  params [""_unit"", ""_hitSelection"", ""_damage"",""_source"",""_projectile"",""_hitPartIndex"", ""_instigator"", ""_hitPoint""]; " \n " " \n "  private _damageMultiplierHead = 0.4; " \n "  private _damageMultiplierBody = 0.3; " \n "  private _damageMultiplierLimbs = 0.35; " \n "  private _damageMultiplierOverall = 0.3; " \n "  private _limitHead = 1.0; " \n "  private _limitBody = 0.25; " \n "  private _limitLimbs = 0.1; " \n "  private _limitOverall = 0.25; " \n "  private _oldDamage = 0; " \n "  if (_hitSelection isEqualTo """") then {_oldDamage = damage _unit} else {_oldDamage = _unit getHit _hitSelection}; " \n "  private _newDamage = _damage - _oldDamage max 0; " \n "  private _incomingDamage = _newDamage; " \n "  private _playerHealth = damage _unit; " \n " " \n "  if (_newDamage > 0 && !(_projectile isEqualTo """")) then { " \n "    private _damageMultiplier = _damageMultiplierBody; " \n "    private _upperLimit = _limitBody; " \n "    switch (_hitSelection) do { " \n "      case ""face_hub""; " \n "      case ""head"": { " \n "        _damageMultiplier = _damageMultiplierHead; " \n "        _upperLimit = _limitHead; " \n "      }; " \n "      case ""arms""; " \n "      case ""hands""; " \n "      case ""legs"": { " \n "        _damageMultiplier = _damageMultiplierLimbs; " \n "        _upperLimit = _limitLimbs; " \n "      }; " \n "      case """": { " \n "        _damageMultiplier = _damageMultiplierOverall; " \n "        _upperLimit = _limitOverall; " \n "      }; " \n "      default { " \n "        _damageMultiplier = _damageMultiplierBody; " \n "        _upperLimit = _limitBody; " \n "      }; " \n "    }; " \n "    _newDamage = _newDamage * _damageMultiplier; " \n "    if (_newDamage > _upperLimit) then { " \n "      _newDamage = _upperLimit; " \n "    }; " \n " " \n "    _damage = _oldDamage + _newDamage; " \n "  }; " \n " " \n "  if ( isPlayer _unit ) then { " \n "    if ( lifeState _unit == ""INCAPACITATED"" ) then { " \n "      _damage = _oldDamage; " \n "    } else { " \n "      _this set[ 2, _damage ]; " \n "      _damage = _this call bis_fnc_reviveEhHandleDamage; " \n "    }; " \n "  }; " \n "  _damage " \n "}]";
			};
			id=313;
			atlOffset=3.8146973e-006;
		};
		class Item99
		{
			dataType="Group";
			side="West";
			class Entities
			{
				items=1;
				class Item0
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={1257.0331,50.89135,534.6593};
						angles[]={0,1.5916864,0};
					};
					side="West";
					flags=7;
					class Attributes
					{
						init="this addEventHandler [ ""HandleDamage"", { " \n "  params [""_unit"", ""_hitSelection"", ""_damage"",""_source"",""_projectile"",""_hitPartIndex"", ""_instigator"", ""_hitPoint""]; " \n " " \n "  private _damageMultiplierHead = 0.4; " \n "  private _damageMultiplierBody = 0.3; " \n "  private _damageMultiplierLimbs = 0.25; " \n "  private _damageMultiplierOverall = 0.25; " \n "  private _limitHead = 1.0; " \n "  private _limitBody = 0.25; " \n "  private _limitLimbs = 0.1; " \n "  private _limitOverall = 0.25; " \n "  private _oldDamage = 0; " \n "  if (_hitSelection isEqualTo """") then {_oldDamage = damage _unit} else {_oldDamage = _unit getHit _hitSelection}; " \n "  private _newDamage = _damage - _oldDamage max 0; " \n "  private _incomingDamage = _newDamage; " \n "  private _playerHealth = damage _unit; " \n " " \n "  if (_newDamage > 0 && !(_projectile isEqualTo """")) then { " \n "    private _damageMultiplier = _damageMultiplierBody; " \n "    private _upperLimit = _limitBody; " \n "    switch (_hitSelection) do { " \n "      case ""face_hub""; " \n "      case ""head"": { " \n "        _damageMultiplier = _damageMultiplierHead; " \n "        _upperLimit = _limitHead; " \n "      }; " \n "      case ""arms""; " \n "      case ""hands""; " \n "      case ""legs"": { " \n "        _damageMultiplier = _damageMultiplierLimbs; " \n "        _upperLimit = _limitLimbs; " \n "      }; " \n "      case """": { " \n "        _damageMultiplier = _damageMultiplierOverall; " \n "        _upperLimit = _limitOverall; " \n "      }; " \n "      default { " \n "        _damageMultiplier = _damageMultiplierBody; " \n "        _upperLimit = _limitBody; " \n "      }; " \n "    }; " \n "    _newDamage = _newDamage * _damageMultiplier; " \n "    if (_newDamage > _upperLimit) then { " \n "      _newDamage = _upperLimit; " \n "    }; " \n " " \n "    _damage = _oldDamage + _newDamage; " \n "  }; " \n " " \n "  if ( isPlayer _unit ) then { " \n "    if ( lifeState _unit == ""INCAPACITATED"" ) then { " \n "      _damage = _oldDamage; " \n "    } else { " \n "      _this set[ 2, _damage ]; " \n "      _damage = _this call bis_fnc_reviveEhHandleDamage; " \n "    }; " \n "  }; " \n "  _damage " \n "}]";
						isPlayable=1;
						class Inventory
						{
							class primaryWeapon
							{
								name="vn_m1carbine";
								class primaryMuzzleMag
								{
									name="vn_carbine_15_mag";
									ammoLeft=15;
								};
							};
							class secondaryWeapon
							{
								name="vn_m127";
								class primaryMuzzleMag
								{
									name="vn_m127_mag";
									ammoLeft=1;
								};
							};
							class handgun
							{
								name="vn_mx991";
							};
							class binocular
							{
								name="vn_m19_binocs_grey";
							};
							class uniform
							{
								typeName="vn_b_uniform_macv_01_02";
								isBackpack=0;
								class MagazineCargo
								{
									items=1;
									class Item0
									{
										name="vn_prop_food_fresh_01";
										count=24;
										ammoLeft=100;
									};
								};
								class ItemCargo
								{
									items=1;
									class Item0
									{
										name="vn_b_item_firstaidkit";
										count=8;
									};
								};
							};
							class vest
							{
								typeName="vn_b_vest_usarmy_03";
								isBackpack=0;
								class MagazineCargo
								{
									items=1;
									class Item0
									{
										name="vn_m61_grenade_mag";
										count=9;
										ammoLeft=1;
									};
								};
							};
							class backpack
							{
								typeName="vn_b_pack_03";
								isBackpack=1;
								class MagazineCargo
								{
									items=6;
									class Item0
									{
										name="vn_m129_mag";
										count=5;
										ammoLeft=1;
									};
									class Item1
									{
										name="vn_carbine_15_t_mag";
										count=12;
										ammoLeft=15;
									};
									class Item2
									{
										name="vn_m34_grenade_mag";
										count=1;
										ammoLeft=1;
									};
									class Item3
									{
										name="vn_m18_purple_mag";
										count=2;
										ammoLeft=1;
									};
									class Item4
									{
										name="vn_m18_red_mag";
										count=2;
										ammoLeft=1;
									};
									class Item5
									{
										name="vn_mine_m112_remote_mag";
										count=5;
										ammoLeft=1;
									};
								};
								class ItemCargo
								{
									items=2;
									class Item0
									{
										name="vn_b_item_firstaidkit";
										count=2;
									};
									class Item1
									{
										name="vn_b_item_trapkit";
										count=1;
									};
								};
							};
							map="vn_b_item_map";
							compass="vn_b_item_compass";
							watch="vn_b_item_watch";
							radio="vn_b_item_radio_urc10";
							headgear="vn_b_boonie_02_02";
						};
					};
					id=316;
					type="vn_b_men_sf_06";
					class CustomAttributes
					{
						class Attribute0
						{
							property="speaker";
							expression="_this setspeaker _value;";
							class Value
							{
								class data
								{
									singleType="STRING";
									value="Male02ENG";
								};
							};
						};
						class Attribute1
						{
							property="pitch";
							expression="_this setpitch _value;";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1.04;
								};
							};
						};
						class Attribute2
						{
							property="enableStamina";
							expression="_this enablestamina _value;";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=0;
								};
							};
						};
						nAttributes=3;
					};
				};
			};
			class Attributes
			{
				init="this addEventHandler [ ""HandleDamage"", { " \n "  params [""_unit"", ""_hitSelection"", ""_damage"",""_source"",""_projectile"",""_hitPartIndex"", ""_instigator"", ""_hitPoint""]; " \n " " \n "  private _damageMultiplierHead = 0.4; " \n "  private _damageMultiplierBody = 0.3; " \n "  private _damageMultiplierLimbs = 0.35; " \n "  private _damageMultiplierOverall = 0.3; " \n "  private _limitHead = 1.0; " \n "  private _limitBody = 0.25; " \n "  private _limitLimbs = 0.1; " \n "  private _limitOverall = 0.25; " \n "  private _oldDamage = 0; " \n "  if (_hitSelection isEqualTo """") then {_oldDamage = damage _unit} else {_oldDamage = _unit getHit _hitSelection}; " \n "  private _newDamage = _damage - _oldDamage max 0; " \n "  private _incomingDamage = _newDamage; " \n "  private _playerHealth = damage _unit; " \n " " \n "  if (_newDamage > 0 && !(_projectile isEqualTo """")) then { " \n "    private _damageMultiplier = _damageMultiplierBody; " \n "    private _upperLimit = _limitBody; " \n "    switch (_hitSelection) do { " \n "      case ""face_hub""; " \n "      case ""head"": { " \n "        _damageMultiplier = _damageMultiplierHead; " \n "        _upperLimit = _limitHead; " \n "      }; " \n "      case ""arms""; " \n "      case ""hands""; " \n "      case ""legs"": { " \n "        _damageMultiplier = _damageMultiplierLimbs; " \n "        _upperLimit = _limitLimbs; " \n "      }; " \n "      case """": { " \n "        _damageMultiplier = _damageMultiplierOverall; " \n "        _upperLimit = _limitOverall; " \n "      }; " \n "      default { " \n "        _damageMultiplier = _damageMultiplierBody; " \n "        _upperLimit = _limitBody; " \n "      }; " \n "    }; " \n "    _newDamage = _newDamage * _damageMultiplier; " \n "    if (_newDamage > _upperLimit) then { " \n "      _newDamage = _upperLimit; " \n "    }; " \n " " \n "    _damage = _oldDamage + _newDamage; " \n "  }; " \n " " \n "  if ( isPlayer _unit ) then { " \n "    if ( lifeState _unit == ""INCAPACITATED"" ) then { " \n "      _damage = _oldDamage; " \n "    } else { " \n "      _this set[ 2, _damage ]; " \n "      _damage = _this call bis_fnc_reviveEhHandleDamage; " \n "    }; " \n "  }; " \n "  _damage " \n "}]";
			};
			id=315;
		};
		class Item100
		{
			dataType="Group";
			side="West";
			class Entities
			{
				items=1;
				class Item0
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={1257.0995,50.867157,536.07922};
						angles[]={0,1.5916864,0};
					};
					side="West";
					flags=7;
					class Attributes
					{
						init="this addEventHandler [ ""HandleDamage"", { " \n "  params [""_unit"", ""_hitSelection"", ""_damage"",""_source"",""_projectile"",""_hitPartIndex"", ""_instigator"", ""_hitPoint""]; " \n " " \n "  private _damageMultiplierHead = 0.4; " \n "  private _damageMultiplierBody = 0.3; " \n "  private _damageMultiplierLimbs = 0.25; " \n "  private _damageMultiplierOverall = 0.25; " \n "  private _limitHead = 1.0; " \n "  private _limitBody = 0.25; " \n "  private _limitLimbs = 0.1; " \n "  private _limitOverall = 0.25; " \n "  private _oldDamage = 0; " \n "  if (_hitSelection isEqualTo """") then {_oldDamage = damage _unit} else {_oldDamage = _unit getHit _hitSelection}; " \n "  private _newDamage = _damage - _oldDamage max 0; " \n "  private _incomingDamage = _newDamage; " \n "  private _playerHealth = damage _unit; " \n " " \n "  if (_newDamage > 0 && !(_projectile isEqualTo """")) then { " \n "    private _damageMultiplier = _damageMultiplierBody; " \n "    private _upperLimit = _limitBody; " \n "    switch (_hitSelection) do { " \n "      case ""face_hub""; " \n "      case ""head"": { " \n "        _damageMultiplier = _damageMultiplierHead; " \n "        _upperLimit = _limitHead; " \n "      }; " \n "      case ""arms""; " \n "      case ""hands""; " \n "      case ""legs"": { " \n "        _damageMultiplier = _damageMultiplierLimbs; " \n "        _upperLimit = _limitLimbs; " \n "      }; " \n "      case """": { " \n "        _damageMultiplier = _damageMultiplierOverall; " \n "        _upperLimit = _limitOverall; " \n "      }; " \n "      default { " \n "        _damageMultiplier = _damageMultiplierBody; " \n "        _upperLimit = _limitBody; " \n "      }; " \n "    }; " \n "    _newDamage = _newDamage * _damageMultiplier; " \n "    if (_newDamage > _upperLimit) then { " \n "      _newDamage = _upperLimit; " \n "    }; " \n " " \n "    _damage = _oldDamage + _newDamage; " \n "  }; " \n " " \n "  if ( isPlayer _unit ) then { " \n "    if ( lifeState _unit == ""INCAPACITATED"" ) then { " \n "      _damage = _oldDamage; " \n "    } else { " \n "      _this set[ 2, _damage ]; " \n "      _damage = _this call bis_fnc_reviveEhHandleDamage; " \n "    }; " \n "  }; " \n "  _damage " \n "}]";
						isPlayable=1;
						class Inventory
						{
							class primaryWeapon
							{
								name="vn_m1carbine";
								class primaryMuzzleMag
								{
									name="vn_carbine_15_mag";
									ammoLeft=15;
								};
							};
							class secondaryWeapon
							{
								name="vn_m127";
								class primaryMuzzleMag
								{
									name="vn_m127_mag";
									ammoLeft=1;
								};
							};
							class handgun
							{
								name="vn_mx991";
							};
							class binocular
							{
								name="vn_m19_binocs_grey";
							};
							class uniform
							{
								typeName="vn_b_uniform_macv_01_02";
								isBackpack=0;
								class MagazineCargo
								{
									items=1;
									class Item0
									{
										name="vn_prop_food_fresh_01";
										count=24;
										ammoLeft=100;
									};
								};
								class ItemCargo
								{
									items=1;
									class Item0
									{
										name="vn_b_item_firstaidkit";
										count=8;
									};
								};
							};
							class vest
							{
								typeName="vn_b_vest_usarmy_03";
								isBackpack=0;
								class MagazineCargo
								{
									items=1;
									class Item0
									{
										name="vn_m61_grenade_mag";
										count=9;
										ammoLeft=1;
									};
								};
							};
							class backpack
							{
								typeName="vn_b_pack_03";
								isBackpack=1;
								class MagazineCargo
								{
									items=6;
									class Item0
									{
										name="vn_m129_mag";
										count=5;
										ammoLeft=1;
									};
									class Item1
									{
										name="vn_carbine_15_t_mag";
										count=12;
										ammoLeft=15;
									};
									class Item2
									{
										name="vn_m34_grenade_mag";
										count=1;
										ammoLeft=1;
									};
									class Item3
									{
										name="vn_m18_purple_mag";
										count=2;
										ammoLeft=1;
									};
									class Item4
									{
										name="vn_m18_red_mag";
										count=2;
										ammoLeft=1;
									};
									class Item5
									{
										name="vn_mine_m112_remote_mag";
										count=5;
										ammoLeft=1;
									};
								};
								class ItemCargo
								{
									items=2;
									class Item0
									{
										name="vn_b_item_firstaidkit";
										count=2;
									};
									class Item1
									{
										name="vn_b_item_trapkit";
										count=1;
									};
								};
							};
							map="vn_b_item_map";
							compass="vn_b_item_compass";
							watch="vn_b_item_watch";
							radio="vn_b_item_radio_urc10";
							headgear="vn_b_boonie_02_02";
						};
					};
					id=318;
					type="vn_b_men_sf_06";
					class CustomAttributes
					{
						class Attribute0
						{
							property="speaker";
							expression="_this setspeaker _value;";
							class Value
							{
								class data
								{
									singleType="STRING";
									value="Male02ENG";
								};
							};
						};
						class Attribute1
						{
							property="pitch";
							expression="_this setpitch _value;";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1.04;
								};
							};
						};
						class Attribute2
						{
							property="enableStamina";
							expression="_this enablestamina _value;";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=0;
								};
							};
						};
						nAttributes=3;
					};
				};
			};
			class Attributes
			{
				init="this addEventHandler [ ""HandleDamage"", { " \n "  params [""_unit"", ""_hitSelection"", ""_damage"",""_source"",""_projectile"",""_hitPartIndex"", ""_instigator"", ""_hitPoint""]; " \n " " \n "  private _damageMultiplierHead = 0.4; " \n "  private _damageMultiplierBody = 0.3; " \n "  private _damageMultiplierLimbs = 0.35; " \n "  private _damageMultiplierOverall = 0.3; " \n "  private _limitHead = 1.0; " \n "  private _limitBody = 0.25; " \n "  private _limitLimbs = 0.1; " \n "  private _limitOverall = 0.25; " \n "  private _oldDamage = 0; " \n "  if (_hitSelection isEqualTo """") then {_oldDamage = damage _unit} else {_oldDamage = _unit getHit _hitSelection}; " \n "  private _newDamage = _damage - _oldDamage max 0; " \n "  private _incomingDamage = _newDamage; " \n "  private _playerHealth = damage _unit; " \n " " \n "  if (_newDamage > 0 && !(_projectile isEqualTo """")) then { " \n "    private _damageMultiplier = _damageMultiplierBody; " \n "    private _upperLimit = _limitBody; " \n "    switch (_hitSelection) do { " \n "      case ""face_hub""; " \n "      case ""head"": { " \n "        _damageMultiplier = _damageMultiplierHead; " \n "        _upperLimit = _limitHead; " \n "      }; " \n "      case ""arms""; " \n "      case ""hands""; " \n "      case ""legs"": { " \n "        _damageMultiplier = _damageMultiplierLimbs; " \n "        _upperLimit = _limitLimbs; " \n "      }; " \n "      case """": { " \n "        _damageMultiplier = _damageMultiplierOverall; " \n "        _upperLimit = _limitOverall; " \n "      }; " \n "      default { " \n "        _damageMultiplier = _damageMultiplierBody; " \n "        _upperLimit = _limitBody; " \n "      }; " \n "    }; " \n "    _newDamage = _newDamage * _damageMultiplier; " \n "    if (_newDamage > _upperLimit) then { " \n "      _newDamage = _upperLimit; " \n "    }; " \n " " \n "    _damage = _oldDamage + _newDamage; " \n "  }; " \n " " \n "  if ( isPlayer _unit ) then { " \n "    if ( lifeState _unit == ""INCAPACITATED"" ) then { " \n "      _damage = _oldDamage; " \n "    } else { " \n "      _this set[ 2, _damage ]; " \n "      _damage = _this call bis_fnc_reviveEhHandleDamage; " \n "    }; " \n "  }; " \n "  _damage " \n "}]";
			};
			id=317;
		};
		class Item101
		{
			dataType="Group";
			side="West";
			class Entities
			{
				items=1;
				class Item0
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={1257.2274,50.850971,537.46106};
						angles[]={0,1.5916864,0};
					};
					side="West";
					flags=7;
					class Attributes
					{
						init="this addEventHandler [ ""HandleDamage"", { " \n "  params [""_unit"", ""_hitSelection"", ""_damage"",""_source"",""_projectile"",""_hitPartIndex"", ""_instigator"", ""_hitPoint""]; " \n " " \n "  private _damageMultiplierHead = 0.4; " \n "  private _damageMultiplierBody = 0.3; " \n "  private _damageMultiplierLimbs = 0.25; " \n "  private _damageMultiplierOverall = 0.25; " \n "  private _limitHead = 1.0; " \n "  private _limitBody = 0.25; " \n "  private _limitLimbs = 0.1; " \n "  private _limitOverall = 0.25; " \n "  private _oldDamage = 0; " \n "  if (_hitSelection isEqualTo """") then {_oldDamage = damage _unit} else {_oldDamage = _unit getHit _hitSelection}; " \n "  private _newDamage = _damage - _oldDamage max 0; " \n "  private _incomingDamage = _newDamage; " \n "  private _playerHealth = damage _unit; " \n " " \n "  if (_newDamage > 0 && !(_projectile isEqualTo """")) then { " \n "    private _damageMultiplier = _damageMultiplierBody; " \n "    private _upperLimit = _limitBody; " \n "    switch (_hitSelection) do { " \n "      case ""face_hub""; " \n "      case ""head"": { " \n "        _damageMultiplier = _damageMultiplierHead; " \n "        _upperLimit = _limitHead; " \n "      }; " \n "      case ""arms""; " \n "      case ""hands""; " \n "      case ""legs"": { " \n "        _damageMultiplier = _damageMultiplierLimbs; " \n "        _upperLimit = _limitLimbs; " \n "      }; " \n "      case """": { " \n "        _damageMultiplier = _damageMultiplierOverall; " \n "        _upperLimit = _limitOverall; " \n "      }; " \n "      default { " \n "        _damageMultiplier = _damageMultiplierBody; " \n "        _upperLimit = _limitBody; " \n "      }; " \n "    }; " \n "    _newDamage = _newDamage * _damageMultiplier; " \n "    if (_newDamage > _upperLimit) then { " \n "      _newDamage = _upperLimit; " \n "    }; " \n " " \n "    _damage = _oldDamage + _newDamage; " \n "  }; " \n " " \n "  if ( isPlayer _unit ) then { " \n "    if ( lifeState _unit == ""INCAPACITATED"" ) then { " \n "      _damage = _oldDamage; " \n "    } else { " \n "      _this set[ 2, _damage ]; " \n "      _damage = _this call bis_fnc_reviveEhHandleDamage; " \n "    }; " \n "  }; " \n "  _damage " \n "}]";
						isPlayable=1;
						class Inventory
						{
							class primaryWeapon
							{
								name="vn_m1carbine";
								class primaryMuzzleMag
								{
									name="vn_carbine_15_mag";
									ammoLeft=15;
								};
							};
							class secondaryWeapon
							{
								name="vn_m127";
								class primaryMuzzleMag
								{
									name="vn_m127_mag";
									ammoLeft=1;
								};
							};
							class handgun
							{
								name="vn_mx991";
							};
							class binocular
							{
								name="vn_m19_binocs_grey";
							};
							class uniform
							{
								typeName="vn_b_uniform_macv_01_02";
								isBackpack=0;
								class MagazineCargo
								{
									items=1;
									class Item0
									{
										name="vn_prop_food_fresh_01";
										count=24;
										ammoLeft=100;
									};
								};
								class ItemCargo
								{
									items=1;
									class Item0
									{
										name="vn_b_item_firstaidkit";
										count=8;
									};
								};
							};
							class vest
							{
								typeName="vn_b_vest_usarmy_03";
								isBackpack=0;
								class MagazineCargo
								{
									items=1;
									class Item0
									{
										name="vn_m61_grenade_mag";
										count=9;
										ammoLeft=1;
									};
								};
							};
							class backpack
							{
								typeName="vn_b_pack_03";
								isBackpack=1;
								class MagazineCargo
								{
									items=6;
									class Item0
									{
										name="vn_m129_mag";
										count=5;
										ammoLeft=1;
									};
									class Item1
									{
										name="vn_carbine_15_t_mag";
										count=12;
										ammoLeft=15;
									};
									class Item2
									{
										name="vn_m34_grenade_mag";
										count=1;
										ammoLeft=1;
									};
									class Item3
									{
										name="vn_m18_purple_mag";
										count=2;
										ammoLeft=1;
									};
									class Item4
									{
										name="vn_m18_red_mag";
										count=2;
										ammoLeft=1;
									};
									class Item5
									{
										name="vn_mine_m112_remote_mag";
										count=5;
										ammoLeft=1;
									};
								};
								class ItemCargo
								{
									items=2;
									class Item0
									{
										name="vn_b_item_firstaidkit";
										count=2;
									};
									class Item1
									{
										name="vn_b_item_trapkit";
										count=1;
									};
								};
							};
							map="vn_b_item_map";
							compass="vn_b_item_compass";
							watch="vn_b_item_watch";
							radio="vn_b_item_radio_urc10";
							headgear="vn_b_boonie_02_02";
						};
					};
					id=320;
					type="vn_b_men_sf_06";
					class CustomAttributes
					{
						class Attribute0
						{
							property="speaker";
							expression="_this setspeaker _value;";
							class Value
							{
								class data
								{
									singleType="STRING";
									value="Male02ENG";
								};
							};
						};
						class Attribute1
						{
							property="pitch";
							expression="_this setpitch _value;";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1.04;
								};
							};
						};
						class Attribute2
						{
							property="enableStamina";
							expression="_this enablestamina _value;";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=0;
								};
							};
						};
						nAttributes=3;
					};
				};
			};
			class Attributes
			{
				init="this addEventHandler [ ""HandleDamage"", { " \n "  params [""_unit"", ""_hitSelection"", ""_damage"",""_source"",""_projectile"",""_hitPartIndex"", ""_instigator"", ""_hitPoint""]; " \n " " \n "  private _damageMultiplierHead = 0.4; " \n "  private _damageMultiplierBody = 0.3; " \n "  private _damageMultiplierLimbs = 0.35; " \n "  private _damageMultiplierOverall = 0.3; " \n "  private _limitHead = 1.0; " \n "  private _limitBody = 0.25; " \n "  private _limitLimbs = 0.1; " \n "  private _limitOverall = 0.25; " \n "  private _oldDamage = 0; " \n "  if (_hitSelection isEqualTo """") then {_oldDamage = damage _unit} else {_oldDamage = _unit getHit _hitSelection}; " \n "  private _newDamage = _damage - _oldDamage max 0; " \n "  private _incomingDamage = _newDamage; " \n "  private _playerHealth = damage _unit; " \n " " \n "  if (_newDamage > 0 && !(_projectile isEqualTo """")) then { " \n "    private _damageMultiplier = _damageMultiplierBody; " \n "    private _upperLimit = _limitBody; " \n "    switch (_hitSelection) do { " \n "      case ""face_hub""; " \n "      case ""head"": { " \n "        _damageMultiplier = _damageMultiplierHead; " \n "        _upperLimit = _limitHead; " \n "      }; " \n "      case ""arms""; " \n "      case ""hands""; " \n "      case ""legs"": { " \n "        _damageMultiplier = _damageMultiplierLimbs; " \n "        _upperLimit = _limitLimbs; " \n "      }; " \n "      case """": { " \n "        _damageMultiplier = _damageMultiplierOverall; " \n "        _upperLimit = _limitOverall; " \n "      }; " \n "      default { " \n "        _damageMultiplier = _damageMultiplierBody; " \n "        _upperLimit = _limitBody; " \n "      }; " \n "    }; " \n "    _newDamage = _newDamage * _damageMultiplier; " \n "    if (_newDamage > _upperLimit) then { " \n "      _newDamage = _upperLimit; " \n "    }; " \n " " \n "    _damage = _oldDamage + _newDamage; " \n "  }; " \n " " \n "  if ( isPlayer _unit ) then { " \n "    if ( lifeState _unit == ""INCAPACITATED"" ) then { " \n "      _damage = _oldDamage; " \n "    } else { " \n "      _this set[ 2, _damage ]; " \n "      _damage = _this call bis_fnc_reviveEhHandleDamage; " \n "    }; " \n "  }; " \n "  _damage " \n "}]";
			};
			id=319;
		};
		class Item102
		{
			dataType="Group";
			side="West";
			class Entities
			{
				items=1;
				class Item0
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={1257.2489,50.840832,538.60413};
						angles[]={0,1.5916864,0};
					};
					side="West";
					flags=7;
					class Attributes
					{
						init="this addEventHandler [ ""HandleDamage"", { " \n "  params [""_unit"", ""_hitSelection"", ""_damage"",""_source"",""_projectile"",""_hitPartIndex"", ""_instigator"", ""_hitPoint""]; " \n " " \n "  private _damageMultiplierHead = 0.4; " \n "  private _damageMultiplierBody = 0.3; " \n "  private _damageMultiplierLimbs = 0.25; " \n "  private _damageMultiplierOverall = 0.25; " \n "  private _limitHead = 1.0; " \n "  private _limitBody = 0.25; " \n "  private _limitLimbs = 0.1; " \n "  private _limitOverall = 0.25; " \n "  private _oldDamage = 0; " \n "  if (_hitSelection isEqualTo """") then {_oldDamage = damage _unit} else {_oldDamage = _unit getHit _hitSelection}; " \n "  private _newDamage = _damage - _oldDamage max 0; " \n "  private _incomingDamage = _newDamage; " \n "  private _playerHealth = damage _unit; " \n " " \n "  if (_newDamage > 0 && !(_projectile isEqualTo """")) then { " \n "    private _damageMultiplier = _damageMultiplierBody; " \n "    private _upperLimit = _limitBody; " \n "    switch (_hitSelection) do { " \n "      case ""face_hub""; " \n "      case ""head"": { " \n "        _damageMultiplier = _damageMultiplierHead; " \n "        _upperLimit = _limitHead; " \n "      }; " \n "      case ""arms""; " \n "      case ""hands""; " \n "      case ""legs"": { " \n "        _damageMultiplier = _damageMultiplierLimbs; " \n "        _upperLimit = _limitLimbs; " \n "      }; " \n "      case """": { " \n "        _damageMultiplier = _damageMultiplierOverall; " \n "        _upperLimit = _limitOverall; " \n "      }; " \n "      default { " \n "        _damageMultiplier = _damageMultiplierBody; " \n "        _upperLimit = _limitBody; " \n "      }; " \n "    }; " \n "    _newDamage = _newDamage * _damageMultiplier; " \n "    if (_newDamage > _upperLimit) then { " \n "      _newDamage = _upperLimit; " \n "    }; " \n " " \n "    _damage = _oldDamage + _newDamage; " \n "  }; " \n " " \n "  if ( isPlayer _unit ) then { " \n "    if ( lifeState _unit == ""INCAPACITATED"" ) then { " \n "      _damage = _oldDamage; " \n "    } else { " \n "      _this set[ 2, _damage ]; " \n "      _damage = _this call bis_fnc_reviveEhHandleDamage; " \n "    }; " \n "  }; " \n "  _damage " \n "}]";
						isPlayable=1;
						class Inventory
						{
							class primaryWeapon
							{
								name="vn_m1carbine";
								class primaryMuzzleMag
								{
									name="vn_carbine_15_mag";
									ammoLeft=15;
								};
							};
							class secondaryWeapon
							{
								name="vn_m127";
								class primaryMuzzleMag
								{
									name="vn_m127_mag";
									ammoLeft=1;
								};
							};
							class handgun
							{
								name="vn_mx991";
							};
							class binocular
							{
								name="vn_m19_binocs_grey";
							};
							class uniform
							{
								typeName="vn_b_uniform_macv_01_02";
								isBackpack=0;
								class MagazineCargo
								{
									items=1;
									class Item0
									{
										name="vn_prop_food_fresh_01";
										count=24;
										ammoLeft=100;
									};
								};
								class ItemCargo
								{
									items=1;
									class Item0
									{
										name="vn_b_item_firstaidkit";
										count=8;
									};
								};
							};
							class vest
							{
								typeName="vn_b_vest_usarmy_03";
								isBackpack=0;
								class MagazineCargo
								{
									items=1;
									class Item0
									{
										name="vn_m61_grenade_mag";
										count=9;
										ammoLeft=1;
									};
								};
							};
							class backpack
							{
								typeName="vn_b_pack_03";
								isBackpack=1;
								class MagazineCargo
								{
									items=6;
									class Item0
									{
										name="vn_m129_mag";
										count=5;
										ammoLeft=1;
									};
									class Item1
									{
										name="vn_carbine_15_t_mag";
										count=12;
										ammoLeft=15;
									};
									class Item2
									{
										name="vn_m34_grenade_mag";
										count=1;
										ammoLeft=1;
									};
									class Item3
									{
										name="vn_m18_purple_mag";
										count=2;
										ammoLeft=1;
									};
									class Item4
									{
										name="vn_m18_red_mag";
										count=2;
										ammoLeft=1;
									};
									class Item5
									{
										name="vn_mine_m112_remote_mag";
										count=5;
										ammoLeft=1;
									};
								};
								class ItemCargo
								{
									items=2;
									class Item0
									{
										name="vn_b_item_firstaidkit";
										count=2;
									};
									class Item1
									{
										name="vn_b_item_trapkit";
										count=1;
									};
								};
							};
							map="vn_b_item_map";
							compass="vn_b_item_compass";
							watch="vn_b_item_watch";
							radio="vn_b_item_radio_urc10";
							headgear="vn_b_boonie_02_02";
						};
					};
					id=322;
					type="vn_b_men_sf_06";
					class CustomAttributes
					{
						class Attribute0
						{
							property="speaker";
							expression="_this setspeaker _value;";
							class Value
							{
								class data
								{
									singleType="STRING";
									value="Male02ENG";
								};
							};
						};
						class Attribute1
						{
							property="pitch";
							expression="_this setpitch _value;";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1.04;
								};
							};
						};
						class Attribute2
						{
							property="enableStamina";
							expression="_this enablestamina _value;";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=0;
								};
							};
						};
						nAttributes=3;
					};
				};
			};
			class Attributes
			{
				init="this addEventHandler [ ""HandleDamage"", { " \n "  params [""_unit"", ""_hitSelection"", ""_damage"",""_source"",""_projectile"",""_hitPartIndex"", ""_instigator"", ""_hitPoint""]; " \n " " \n "  private _damageMultiplierHead = 0.4; " \n "  private _damageMultiplierBody = 0.3; " \n "  private _damageMultiplierLimbs = 0.35; " \n "  private _damageMultiplierOverall = 0.3; " \n "  private _limitHead = 1.0; " \n "  private _limitBody = 0.25; " \n "  private _limitLimbs = 0.1; " \n "  private _limitOverall = 0.25; " \n "  private _oldDamage = 0; " \n "  if (_hitSelection isEqualTo """") then {_oldDamage = damage _unit} else {_oldDamage = _unit getHit _hitSelection}; " \n "  private _newDamage = _damage - _oldDamage max 0; " \n "  private _incomingDamage = _newDamage; " \n "  private _playerHealth = damage _unit; " \n " " \n "  if (_newDamage > 0 && !(_projectile isEqualTo """")) then { " \n "    private _damageMultiplier = _damageMultiplierBody; " \n "    private _upperLimit = _limitBody; " \n "    switch (_hitSelection) do { " \n "      case ""face_hub""; " \n "      case ""head"": { " \n "        _damageMultiplier = _damageMultiplierHead; " \n "        _upperLimit = _limitHead; " \n "      }; " \n "      case ""arms""; " \n "      case ""hands""; " \n "      case ""legs"": { " \n "        _damageMultiplier = _damageMultiplierLimbs; " \n "        _upperLimit = _limitLimbs; " \n "      }; " \n "      case """": { " \n "        _damageMultiplier = _damageMultiplierOverall; " \n "        _upperLimit = _limitOverall; " \n "      }; " \n "      default { " \n "        _damageMultiplier = _damageMultiplierBody; " \n "        _upperLimit = _limitBody; " \n "      }; " \n "    }; " \n "    _newDamage = _newDamage * _damageMultiplier; " \n "    if (_newDamage > _upperLimit) then { " \n "      _newDamage = _upperLimit; " \n "    }; " \n " " \n "    _damage = _oldDamage + _newDamage; " \n "  }; " \n " " \n "  if ( isPlayer _unit ) then { " \n "    if ( lifeState _unit == ""INCAPACITATED"" ) then { " \n "      _damage = _oldDamage; " \n "    } else { " \n "      _this set[ 2, _damage ]; " \n "      _damage = _this call bis_fnc_reviveEhHandleDamage; " \n "    }; " \n "  }; " \n "  _damage " \n "}]";
			};
			id=321;
		};
		class Item103
		{
			dataType="Logic";
			class PositionInfo
			{
				position[]={1246.358,39.044704,-150.51601};
				angles[]={0.063948862,0,6.2610197};
			};
			id=324;
			type="SPE_Module_Advanced_Revive";
			class CustomAttributes
			{
				class Attribute0
				{
					property="spe_module_advanced_revive_SPE_ReviveBleedOutDelay";
					expression="_this setVariable ['SPE_ReviveBleedOutDelay',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=300;
						};
					};
				};
				class Attribute1
				{
					property="spe_module_advanced_revive_SPE_ReviveFakAmount";
					expression="_this setVariable ['SPE_ReviveFakAmount',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=1;
						};
					};
				};
				class Attribute2
				{
					property="spe_module_advanced_revive_SPE_ReviveUnits";
					expression="_this setVariable ['SPE_ReviveUnits',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=0;
						};
					};
				};
				class Attribute3
				{
					property="spe_module_advanced_revive_SPE_ReviveAutoWithstand";
					expression="_this setVariable ['SPE_ReviveAutoWithstand',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=1;
						};
					};
				};
				class Attribute4
				{
					property="spe_module_advanced_revive_SPE_ReviveEnabled";
					expression="_this setVariable ['SPE_ReviveEnabled',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=0;
						};
					};
				};
				class Attribute5
				{
					property="spe_module_advanced_revive_SPE_WithstandEnabled";
					expression="_this setVariable ['SPE_WithstandEnabled',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=2;
						};
					};
				};
				class Attribute6
				{
					property="spe_module_advanced_revive_SPE_WithstandExtraFAK";
					expression="_this setVariable ['SPE_WithstandExtraFAK',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=1;
						};
					};
				};
				class Attribute7
				{
					property="spe_module_advanced_revive_SPE_ReviveDelay";
					expression="_this setVariable ['SPE_ReviveDelay',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=24;
						};
					};
				};
				class Attribute8
				{
					property="spe_module_advanced_revive_SPE_ReviveIcons";
					expression="_this setVariable ['SPE_ReviveIcons',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=1;
						};
					};
				};
				class Attribute9
				{
					property="spe_module_advanced_revive_SPE_ReviveRequiredTrait";
					expression="_this setVariable ['SPE_ReviveRequiredTrait',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=1;
						};
					};
				};
				class Attribute10
				{
					property="spe_module_advanced_revive_SPE_ReviveMedicSpeedMultiplier";
					expression="_this setVariable ['SPE_ReviveMedicSpeedMultiplier',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=4;
						};
					};
				};
				class Attribute11
				{
					property="spe_module_advanced_revive_SPE_ReviveAutoCall";
					expression="_this setVariable ['SPE_ReviveAutoCall',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=1;
						};
					};
				};
				class Attribute12
				{
					property="spe_module_advanced_revive_SPE_ReviveForceRespawnDelay";
					expression="_this setVariable ['SPE_ReviveForceRespawnDelay',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=20;
						};
					};
				};
				class Attribute13
				{
					property="spe_module_advanced_revive_SPE_WithstandEnabledAI";
					expression="_this setVariable ['SPE_WithstandEnabledAI',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=2;
						};
					};
				};
				class Attribute14
				{
					property="spe_module_advanced_revive_SPE_ReviveMode";
					expression="_this setVariable ['SPE_ReviveMode',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=1;
						};
					};
				};
				nAttributes=15;
			};
		};
		class Item104
		{
			dataType="Logic";
			class PositionInfo
			{
				position[]={1816.877,34.389603,-158.84};
				angles[]={0.061732296,0,6.2282596};
			};
			id=326;
			type="SPE_AmbientWarSounds_ModuleGlobal_3DEN";
			class CustomAttributes
			{
				class Attribute0
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_maxwait";
					expression="_this setVariable ['SPE_AmbientWarSounds_maxwait',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=15;
						};
					};
				};
				class Attribute1
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_minwait";
					expression="_this setVariable ['SPE_AmbientWarSounds_minwait',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=1;
						};
					};
				};
				class Attribute2
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_switchranges";
					expression="_this setVariable ['SPE_AmbientWarSounds_switchranges',_value,true];";
					class Value
					{
						class data
						{
							singleType="STRING";
							value="[175,600]";
						};
					};
				};
				class Attribute3
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_condition";
					expression="_this setVariable ['SPE_AmbientWarSounds_condition',_value,true];";
					class Value
					{
						class data
						{
							singleType="STRING";
							value="true";
						};
					};
				};
				class Attribute4
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_customratio";
					expression="_this setVariable ['SPE_AmbientWarSounds_customratio',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=0;
						};
					};
				};
				class Attribute5
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_mg42ratio";
					expression="_this setVariable ['SPE_AmbientWarSounds_mg42ratio',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=25;
						};
					};
				};
				class Attribute6
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_cannonratio";
					expression="_this setVariable ['SPE_AmbientWarSounds_cannonratio',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=25;
						};
					};
				};
				class Attribute7
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_mgratio";
					expression="_this setVariable ['SPE_AmbientWarSounds_mgratio',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=25;
						};
					};
				};
				class Attribute8
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_maxdist";
					expression="_this setVariable ['SPE_AmbientWarSounds_maxdist',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=4000;
						};
					};
				};
				class Attribute9
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_rifleratio";
					expression="_this setVariable ['SPE_AmbientWarSounds_rifleratio',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=25;
						};
					};
				};
				class Attribute10
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_mindist";
					expression="_this setVariable ['SPE_AmbientWarSounds_mindist',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=2000;
						};
					};
				};
				nAttributes=11;
			};
		};
		class Item105
		{
			dataType="Logic";
			class PositionInfo
			{
				position[]={1275.8174,38.470303,-151.88672};
				angles[]={0.062594086,0,0.026782926};
			};
			id=327;
			type="SPE_Module_Indirect_Fire_Support";
			class CustomAttributes
			{
				class Attribute0
				{
					property="SPE_IFS_CASAvailability_Side";
					expression="if (isNil '') then {SPE_IFS_CASAvailability_Side = []}; 		if (_value param [0, -1] > -1) then {SPE_IFS_CASAvailability_Side append [west]}; 		if (_value param [1, -1] > -1) then {SPE_IFS_CASAvailability_Side append [east]}; 		if (_value param [2, -1] > -1) then {SPE_IFS_CASAvailability_Side append [independent]};";
					class Value
					{
						class data
						{
							singleType="ARRAY";
							class value
							{
								items=4;
								class Item0
								{
									class data
									{
										singleType="SCALAR";
										value=-1;
									};
								};
								class Item1
								{
									class data
									{
										singleType="SCALAR";
										value=-1;
									};
								};
								class Item2
								{
									class data
									{
										singleType="SCALAR";
										value=-1;
									};
								};
								class Item3
								{
									class data
									{
										singleType="SCALAR";
										value=-1;
									};
								};
							};
						};
					};
				};
				class Attribute1
				{
					property="SPE_IFS_CounterBatteryFireIsPriority";
					expression="missionNamespace setVariable ['SPE_IFS_CounterBatteryFireIsPriority', _value]";
					class Value
					{
						class data
						{
							singleType="BOOL";
							value=1;
						};
					};
				};
				class Attribute2
				{
					property="SPE_IFS_AllowAdvancedHints";
					expression="missionNamespace setVariable ['SPE_IFS_AllowAdvancedHints', _value]";
					class Value
					{
						class data
						{
							singleType="BOOL";
							value=1;
						};
					};
				};
				class Attribute3
				{
					property="SPE_IFS_RequestedMortarAmount";
					expression="missionNamespace setVariable ['SPE_IFS_RequestedMortarAmount', _value]";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=6;
						};
					};
				};
				class Attribute4
				{
					property="SPE_IFS_DSAvailability_Side";
					expression="if (isNil '') then {SPE_IFS_DSAvailability_Side = []}; 		if (_value param [0, -1] > -1) then {SPE_IFS_DSAvailability_Side append [west]}; 		if (_value param [1, -1] > -1) then {SPE_IFS_DSAvailability_Side append [east]}; 		if (_value param [2, -1] > -1) then {SPE_IFS_DSAvailability_Side append [independent]};";
					class Value
					{
						class data
						{
							singleType="ARRAY";
							class value
							{
								items=4;
								class Item0
								{
									class data
									{
										singleType="SCALAR";
										value=-1;
									};
								};
								class Item1
								{
									class data
									{
										singleType="SCALAR";
										value=-1;
									};
								};
								class Item2
								{
									class data
									{
										singleType="SCALAR";
										value=-1;
									};
								};
								class Item3
								{
									class data
									{
										singleType="SCALAR";
										value=-1;
									};
								};
							};
						};
					};
				};
				class Attribute5
				{
					property="SPE_IFS_FOClass";
					expression="missionNamespace setVariable ['SPE_IFS_FOClass', _value]";
					class Value
					{
						class data
						{
							singleType="ARRAY";
							class value
							{
								items=18;
								class Item0
								{
									class data
									{
										singleType="STRING";
										value="spe_us_rangers_radioman";
									};
								};
								class Item1
								{
									class data
									{
										singleType="STRING";
										value="spe_us_rangers_sniper";
									};
								};
								class Item2
								{
									class data
									{
										singleType="STRING";
										value="spe_us_radioman";
									};
								};
								class Item3
								{
									class data
									{
										singleType="STRING";
										value="spe_us_sniper";
									};
								};
								class Item4
								{
									class data
									{
										singleType="STRING";
										value="spe_fr_sniper";
									};
								};
								class Item5
								{
									class data
									{
										singleType="STRING";
										value="spe_fr_radioman";
									};
								};
								class Item6
								{
									class data
									{
										singleType="STRING";
										value="spe_ger_radioman";
									};
								};
								class Item7
								{
									class data
									{
										singleType="STRING";
										value="spe_ger_scout_assist_squadlead";
									};
								};
								class Item8
								{
									class data
									{
										singleType="STRING";
										value="spe_ger_scout_ober_grenadier";
									};
								};
								class Item9
								{
									class data
									{
										singleType="STRING";
										value="spe_ger_scout_lieutenant";
									};
								};
								class Item10
								{
									class data
									{
										singleType="STRING";
										value="spe_ger_scout_mgunner2";
									};
								};
								class Item11
								{
									class data
									{
										singleType="STRING";
										value="spe_ger_scout_mgunner";
									};
								};
								class Item12
								{
									class data
									{
										singleType="STRING";
										value="spe_ger_scout_ober_rifleman";
									};
								};
								class Item13
								{
									class data
									{
										singleType="STRING";
										value="spe_ger_scout_rifleman";
									};
								};
								class Item14
								{
									class data
									{
										singleType="STRING";
										value="spe_ger_scout_squadlead";
									};
								};
								class Item15
								{
									class data
									{
										singleType="STRING";
										value="spe_ger_scout_sniper";
									};
								};
								class Item16
								{
									class data
									{
										singleType="STRING";
										value="spe_sturmtrooper_radioman";
									};
								};
								class Item17
								{
									class data
									{
										singleType="STRING";
										value="spe_sturmtrooper_sniper";
									};
								};
							};
						};
					};
				};
				class Attribute6
				{
					property="SPE_IFS_RequestedMortarETA";
					expression="missionNamespace setVariable ['SPE_IFS_RequestedMortarETA', _value]";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=15;
						};
					};
				};
				class Attribute7
				{
					property="SPE_IFS_RequestedHeavyArtyAmount";
					expression="missionNamespace setVariable ['SPE_IFS_RequestedHeavyArtyAmount', _value]";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=6;
						};
					};
				};
				class Attribute8
				{
					property="SPE_IFS_AllowMortarsAgainstTanks";
					expression="missionNamespace setVariable ['SPE_IFS_AllowMortarsAgainstTanks', _value]";
					class Value
					{
						class data
						{
							singleType="BOOL";
							value=1;
						};
					};
				};
				class Attribute9
				{
					property="SPE_IFS_AmountMultiplier_Hard";
					expression="if (isNil 'SPE_IFS_AmountMultiplier') then {SPE_IFS_AmountMultiplier = [0, 0, 0]}; SPE_IFS_AmountMultiplier set [2, _value]";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=1;
						};
					};
				};
				class Attribute10
				{
					property="SPE_IFS_RequestedHeavyArtyETA";
					expression="missionNamespace setVariable ['SPE_IFS_RequestedHeavyArtyETA', _value]";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=30;
						};
					};
				};
				class Attribute11
				{
					property="SPE_IFS_RequestedMortarSpread";
					expression="missionNamespace setVariable ['SPE_IFS_RequestedMortarSpread', _value]";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=100;
						};
					};
				};
				class Attribute12
				{
					property="SPE_IFS_AmountMultiplier_Infantry";
					expression="if (isNil 'SPE_IFS_AmountMultiplier') then {SPE_IFS_AmountMultiplier = [0, 0, 0]}; SPE_IFS_AmountMultiplier set [0, _value]";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=0.32999998;
						};
					};
				};
				class Attribute13
				{
					property="SPE_IFS_DS_CheckFriendlyFire";
					expression="missionNamespace setVariable ['SPE_IFS_DS_CheckFriendlyFire', _value]";
					class Value
					{
						class data
						{
							singleType="BOOL";
							value=1;
						};
					};
				};
				class Attribute14
				{
					property="SPE_IFS_AcceptedRadioBackpacks";
					expression="missionNamespace setVariable ['SPE_IFS_AcceptedRadioBackpacks', _value]";
					class Value
					{
						class data
						{
							singleType="ARRAY";
							class value
							{
								items=2;
								class Item0
								{
									class data
									{
										singleType="STRING";
										value="b_spe_ger_radio";
									};
								};
								class Item1
								{
									class data
									{
										singleType="STRING";
										value="b_spe_us_radio";
									};
								};
							};
						};
					};
				};
				class Attribute15
				{
					property="SPE_IFS_Amount";
					expression="missionNamespace setVariable ['SPE_IFS_Amount', _value]";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=6;
						};
					};
				};
				class Attribute16
				{
					property="SPE_IFS_AmountMultiplier_Soft";
					expression="if (isNil 'SPE_IFS_AmountMultiplier') then {SPE_IFS_AmountMultiplier = [0, 0, 0]}; SPE_IFS_AmountMultiplier set [1, _value]";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=0.5;
						};
					};
				};
				class Attribute17
				{
					property="SPE_IFS_ArtyActive";
					expression="missionNamespace setVariable ['SPE_IFS_ArtyActive', _value]";
					class Value
					{
						class data
						{
							singleType="BOOL";
							value=1;
						};
					};
				};
				class Attribute18
				{
					property="SPE_IFS_RequestedHeavyArtySpread";
					expression="missionNamespace setVariable ['SPE_IFS_RequestedHeavyArtySpread', _value]";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=150;
						};
					};
				};
				class Attribute19
				{
					property="SPE_IFS_AvailableCalls";
					expression="missionNamespace setVariable ['SPE_IFS_AvailableCalls', _value]";
					class Value
					{
						class data
						{
							singleType="ARRAY";
							class value
							{
								items=4;
								class Item0
								{
									class data
									{
										singleType="ARRAY";
										class value
										{
											items=3;
											class Item0
											{
												class data
												{
													singleType="SCALAR";
													value=-1;
												};
											};
											class Item1
											{
												class data
												{
													singleType="SCALAR";
													value=-1;
												};
											};
											class Item2
											{
												class data
												{
													singleType="SCALAR";
													value=-1;
												};
											};
										};
									};
								};
								class Item1
								{
									class data
									{
										singleType="ARRAY";
										class value
										{
											items=3;
											class Item0
											{
												class data
												{
													singleType="SCALAR";
													value=-1;
												};
											};
											class Item1
											{
												class data
												{
													singleType="SCALAR";
													value=-1;
												};
											};
											class Item2
											{
												class data
												{
													singleType="SCALAR";
													value=-1;
												};
											};
										};
									};
								};
								class Item2
								{
									class data
									{
										singleType="ARRAY";
										class value
										{
											items=3;
											class Item0
											{
												class data
												{
													singleType="SCALAR";
													value=-1;
												};
											};
											class Item1
											{
												class data
												{
													singleType="SCALAR";
													value=-1;
												};
											};
											class Item2
											{
												class data
												{
													singleType="SCALAR";
													value=-1;
												};
											};
										};
									};
								};
								class Item3
								{
									class data
									{
										singleType="ARRAY";
										class value
										{
											items=3;
											class Item0
											{
												class data
												{
													singleType="SCALAR";
													value=-1;
												};
											};
											class Item1
											{
												class data
												{
													singleType="SCALAR";
													value=-1;
												};
											};
											class Item2
											{
												class data
												{
													singleType="SCALAR";
													value=-1;
												};
											};
										};
									};
								};
							};
						};
					};
				};
				class Attribute20
				{
					property="SPE_IFS_IncomingMarkRange";
					expression="missionNamespace setVariable ['SPE_IFS_IncomingMarkRange', _value]";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=1000;
						};
					};
				};
				class Attribute21
				{
					property="SPE_IFS_CASActive";
					expression="missionNamespace setVariable ['SPE_IFS_CASActive', _value]";
					class Value
					{
						class data
						{
							singleType="BOOL";
							value=1;
						};
					};
				};
				class Attribute22
				{
					property="SPE_IFS_Acc";
					expression="missionNamespace setVariable ['SPE_IFS_Acc', _value]";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=2;
						};
					};
				};
				class Attribute23
				{
					property="SPE_IFS_ArtyAvailability_Side";
					expression="if (isNil '') then {SPE_IFS_ArtyAvailability_Side = []}; 		if (_value param [0, -1] > -1) then {SPE_IFS_ArtyAvailability_Side append [west]}; 		if (_value param [1, -1] > -1) then {SPE_IFS_ArtyAvailability_Side append [east]}; 		if (_value param [2, -1] > -1) then {SPE_IFS_ArtyAvailability_Side append [independent]};";
					class Value
					{
						class data
						{
							singleType="ARRAY";
							class value
							{
								items=4;
								class Item0
								{
									class data
									{
										singleType="SCALAR";
										value=-1;
									};
								};
								class Item1
								{
									class data
									{
										singleType="SCALAR";
										value=-1;
									};
								};
								class Item2
								{
									class data
									{
										singleType="SCALAR";
										value=-1;
									};
								};
								class Item3
								{
									class data
									{
										singleType="SCALAR";
										value=-1;
									};
								};
							};
						};
					};
				};
				class Attribute24
				{
					property="SPE_IFS_IncomingNotificationRange";
					expression="missionNamespace setVariable ['SPE_IFS_IncomingNotificationRange', _value]";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=300;
						};
					};
				};
				nAttributes=25;
			};
		};
		class Item106
		{
			dataType="Logic";
			class PositionInfo
			{
				position[]={1313.498,37.806362,-149.146};
			};
			id=328;
			type="SPE_Module_AI_Systems";
			class CustomAttributes
			{
				class Attribute0
				{
					property="SPE_Active_TweakAI";
					expression="missionNamespace setVariable ['SPE_Active_TweakAI', _value]";
					class Value
					{
						class data
						{
							singleType="BOOL";
							value=1;
						};
					};
				};
				class Attribute1
				{
					property="SPE_AffectOurSide";
					expression="missionNamespace setVariable ['SPE_AffectOurSide', _value]";
					class Value
					{
						class data
						{
							singleType="BOOL";
							value=1;
						};
					};
				};
				class Attribute2
				{
					property="SPE_DoReliableEmbarking";
					expression="missionNamespace setVariable ['SPE_DoReliableEmbarking', _value]";
					class Value
					{
						class data
						{
							singleType="BOOL";
							value=1;
						};
					};
				};
				class Attribute3
				{
					property="SPE_DoManTurrets";
					expression="missionNamespace setVariable ['SPE_DoManTurrets', _value]";
					class Value
					{
						class data
						{
							singleType="BOOL";
							value=1;
						};
					};
				};
				class Attribute4
				{
					property="SPE_CleanUp_Distances_Surrendered";
					expression="if (isNil 'SPE_CleanUp_Distances') then {SPE_CleanUp_Distances = [0, 0, 0]}; SPE_CleanUp_Distances set [1, _value]";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=1080.4399;
						};
					};
				};
				class Attribute5
				{
					property="SPE_DoTweakDisembarkInCombat";
					expression="missionNamespace setVariable ['SPE_DoTweakDisembarkInCombat', _value]";
					class Value
					{
						class data
						{
							singleType="BOOL";
							value=0;
						};
					};
				};
				class Attribute6
				{
					property="SPE_OurSide";
					expression="missionNamespace setVariable ['SPE_OurSide', [east, west, independent, civilian] select _value]";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=1;
						};
					};
				};
				class Attribute7
				{
					property="SPE_PermanentShockProb";
					expression="missionNamespace setVariable ['SPE_PermanentShockProb', _value]";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=0.1;
						};
					};
				};
				class Attribute8
				{
					property="SPE_DoHandleBlockingStuff";
					expression="missionNamespace setVariable ['SPE_DoHandleBlockingStuff', _value]";
					class Value
					{
						class data
						{
							singleType="BOOL";
							value=1;
						};
					};
				};
				class Attribute9
				{
					property="SPE_CleanUp_Distances_Panicked:";
					expression="if (isNil 'SPE_CleanUp_Distances') then {SPE_CleanUp_Distances = [0, 0, 0]}; SPE_CleanUp_Distances set [2, _value]";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=-1;
						};
					};
				};
				class Attribute10
				{
					property="SPE_RFSThresholds_MultiplierRF";
					expression="false";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=1;
						};
					};
				};
				class Attribute11
				{
					property="SPE_RFSThresholds_Multipliers";
					expression="false";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=1;
						};
					};
				};
				class Attribute12
				{
					property="SPE_DoDiamondInCombat";
					expression="missionNamespace setVariable ['SPE_DoDiamondInCombat', _value]";
					class Value
					{
						class data
						{
							singleType="BOOL";
							value=1;
						};
					};
				};
				class Attribute13
				{
					property="SPE_PlayerStressMultiplier";
					expression="false";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=1;
						};
					};
				};
				class Attribute14
				{
					property="SPE_Unstuck_HiddenOnly";
					expression="missionNamespace setVariable ['SPE_Unstuck_HiddenOnly', _value]";
					class Value
					{
						class data
						{
							singleType="BOOL";
							value=0;
						};
					};
				};
				class Attribute15
				{
					property="SPE_NonCombatantKillsAllowed";
					expression="missionNamespace setVariable ['SPE_NonCombatantKillsAllowed', _value]";
					class Value
					{
						class data
						{
							singleType="BOOL";
							value=1;
						};
					};
				};
				class Attribute16
				{
					property="SPE_RFS_POWWalkTimer";
					expression="missionNamespace setVariable ['SPE_RFS_POWWalkTimer', _value]";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=60;
						};
					};
				};
				class Attribute17
				{
					property="SPE_Active_Unstuck";
					expression="missionNamespace setVariable ['SPE_Active_Unstuck', _value]";
					class Value
					{
						class data
						{
							singleType="BOOL";
							value=1;
						};
					};
				};
				class Attribute18
				{
					property="SPE_DoLeaveFootmobilesBehind";
					expression="missionNamespace setVariable ['SPE_DoLeaveFootmobilesBehind', _value]";
					class Value
					{
						class data
						{
							singleType="BOOL";
							value=1;
						};
					};
				};
				class Attribute19
				{
					property="SPE_DoCatchUp";
					expression="missionNamespace setVariable ['SPE_DoCatchUp', _value]";
					class Value
					{
						class data
						{
							singleType="BOOL";
							value=1;
						};
					};
				};
				class Attribute20
				{
					property="SPE_Active_Flee";
					expression="missionNamespace setVariable ['SPE_Active_Flee', _value]";
					class Value
					{
						class data
						{
							singleType="BOOL";
							value=1;
						};
					};
				};
				class Attribute21
				{
					property="SPE_Active_TweakAI_Rearm";
					expression="missionNamespace setVariable ['SPE_Active_TweakAI_Rearm', _value]";
					class Value
					{
						class data
						{
							singleType="BOOL";
							value=1;
						};
					};
				};
				class Attribute22
				{
					property="SPE_ReliableEmbarking";
					expression="if (isNil 'SPE_ReliableEmbarking') then {SPE_ReliableEmbarking = []}; 		if (_value param [0, -1] > -1) then {SPE_ReliableEmbarking append [west]}; 		if (_value param [1, -1] > -1) then {SPE_ReliableEmbarking append [east]}; 		if (_value param [2, -1] > -1) then {SPE_ReliableEmbarking append [independent]}; 		if (_value param [3, -1] > -1) then {SPE_ReliableEmbarking append [civilian]};";
					class Value
					{
						class data
						{
							singleType="ARRAY";
							class value
							{
								items=4;
								class Item0
								{
									class data
									{
										singleType="SCALAR";
										value=1;
									};
								};
								class Item1
								{
									class data
									{
										singleType="SCALAR";
										value=0;
									};
								};
								class Item2
								{
									class data
									{
										singleType="SCALAR";
										value=2;
									};
								};
								class Item3
								{
									class data
									{
										singleType="SCALAR";
										value=3;
									};
								};
							};
						};
					};
				};
				class Attribute23
				{
					property="SPE_Active_InfoSharing";
					expression="missionNamespace setVariable ['SPE_Active_InfoSharing', _value]";
					class Value
					{
						class data
						{
							singleType="BOOL";
							value=1;
						};
					};
				};
				class Attribute24
				{
					property="SPE_DoHideBlockingFoliage";
					expression="missionNamespace setVariable ['SPE_DoHideBlockingFoliage', _value]";
					class Value
					{
						class data
						{
							singleType="BOOL";
							value=1;
						};
					};
				};
				class Attribute25
				{
					property="SPE_AddSpawnedGroups";
					expression="missionNamespace setVariable ['SPE_AddSpawnedGroups', _value]";
					class Value
					{
						class data
						{
							singleType="BOOL";
							value=1;
						};
					};
				};
				class Attribute26
				{
					property="SPE_Active_Surrender";
					expression="missionNamespace setVariable ['SPE_Active_Surrender', _value]";
					class Value
					{
						class data
						{
							singleType="BOOL";
							value=1;
						};
					};
				};
				class Attribute27
				{
					property="SPE_CrowdPsyche";
					expression="missionNamespace setVariable ['SPE_CrowdPsyche', _value]";
					class Value
					{
						class data
						{
							singleType="BOOL";
							value=1;
						};
					};
				};
				class Attribute28
				{
					property="SPE_CleanUp_Distances_Retreating";
					expression="if (isNil 'SPE_CleanUp_Distances') then {SPE_CleanUp_Distances = [0, 0, 0]}; SPE_CleanUp_Distances set [0, _value]";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=1080.4399;
						};
					};
				};
				class Attribute29
				{
					property="SPE_MoraleAffectingTargetsRange";
					expression="false";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=100;
						};
					};
				};
				nAttributes=30;
			};
		};
		class Item107
		{
			dataType="Object";
			class PositionInfo
			{
				position[]={1291.7788,56.324909,522.86682};
				angles[]={0.016666256,0,0.056606073};
			};
			side="Empty";
			flags=4;
			class Attributes
			{
				disableSimulation=1;
			};
			id=330;
			type="vn_b_armor_m41_01_01";
			atlOffset=3.8146973e-006;
			class CustomAttributes
			{
				class Attribute0
				{
					property="vn_flag";
					expression="_this setVariable ['vn_flag', _value, true];";
					class Value
					{
						class data
						{
							singleType="STRING";
							value="\vn\objects_f_vietnam\flags\vn_flag_01_usa_co.paa";
						};
					};
				};
				nAttributes=1;
			};
		};
		class Item108
		{
			dataType="Object";
			class PositionInfo
			{
				position[]={1302.1793,56.981049,519.55786};
				angles[]={0.0033296358,0,0.039979152};
			};
			side="Empty";
			flags=4;
			class Attributes
			{
				disableSimulation=1;
			};
			id=331;
			type="vn_b_armor_m41_01_01";
			class CustomAttributes
			{
				class Attribute0
				{
					property="vn_flag";
					expression="_this setVariable ['vn_flag', _value, true];";
					class Value
					{
						class data
						{
							singleType="STRING";
							value="\vn\objects_f_vietnam\flags\vn_flag_01_usa_co.paa";
						};
					};
				};
				nAttributes=1;
			};
		};
		class Item109
		{
			dataType="Object";
			class PositionInfo
			{
				position[]={1715.2167,50.144577,324.18564};
				angles[]={6.2731848,0,6.2598572};
			};
			side="Empty";
			flags=4;
			class Attributes
			{
			};
			id=333;
			type="SPE_P47";
		};
		class Item110
		{
			dataType="Marker";
			position[]={11945.81,46.681263,2410.1191};
			name="supply_officer_initial_4";
			text="Supply Officer";
			type="Empty";
			angle=339.04813;
			id=334;
			atlOffset=-3.8146973e-006;
		};
		class Item111
		{
			dataType="Marker";
			position[]={11955.009,47.479752,2419.7832};
			name="supply_drop_initial_4";
			text="Initial Supply Drop 4";
			type="Empty";
			colorName="ColorOrange";
			angle=34.675026;
			id=335;
		};
		class Item112
		{
			dataType="Object";
			class PositionInfo
			{
				position[]={11955.021,47.479549,2419.7637};
				angles[]={6.2332263,0.61195439,0.06656827};
			};
			side="Empty";
			flags=4;
			class Attributes
			{
			};
			id=336;
			type="Land_JumpTarget_F";
		};
		class Item113
		{
			dataType="Marker";
			position[]={11955.296,48.288357,2437.8945};
			name="marker_3";
			text="French Resistance Supply Stash";
			type="SPE_n_Icon_Flag_FFI";
			id=337;
		};
		class Item114
		{
			dataType="Group";
			side="West";
			class Entities
			{
				items=10;
				class Item0
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={11933.624,47.278332,2410.3528};
						angles[]={0,0.3453643,-0};
					};
					side="West";
					flags=5;
					class Attributes
					{
						skill=1;
						rank="CORPORAL";
						init="this disableAI ""PATH"";";
						stance="Up";
						class Inventory
						{
							class primaryWeapon
							{
								name="vn_m36";
								class primaryMuzzleMag
								{
									name="vn_m36_mag";
									ammoLeft=5;
								};
							};
							class binocular
							{
								name="SPE_Binocular_GER";
							};
							class uniform
							{
								typeName="U_SPE_CIV_pak2_zwart_swetr";
								isBackpack=0;
								class MagazineCargo
								{
									items=1;
									class Item0
									{
										name="vn_m36_mag";
										count=1;
										ammoLeft=5;
									};
								};
								class ItemCargo
								{
									items=1;
									class Item0
									{
										name="SPE_US_FirstAidKit";
										count=3;
									};
								};
							};
							class vest
							{
								typeName="V_SPE_FFI_Vest_rifle_pouch";
								isBackpack=0;
								class MagazineCargo
								{
									items=5;
									class Item0
									{
										name="SPE_M39";
										count=2;
										ammoLeft=1;
									};
									class Item1
									{
										name="SPE_US_M18";
										count=2;
										ammoLeft=1;
									};
									class Item2
									{
										name="SPE_US_M18_Violet";
										count=1;
										ammoLeft=1;
									};
									class Item3
									{
										name="SPE_US_M18_Red";
										count=1;
										ammoLeft=1;
									};
									class Item4
									{
										name="vn_m36_mag";
										count=7;
										ammoLeft=5;
									};
								};
							};
							class backpack
							{
								typeName="B_SPE_CIV_musette";
								isBackpack=1;
								class MagazineCargo
								{
									items=1;
									class Item0
									{
										name="vn_m36_mag";
										count=3;
										ammoLeft=5;
									};
								};
							};
							map="ItemMap";
							compass="SPE_US_ItemCompass";
							watch="SPE_US_ItemWatch";
							goggles="G_SPE_Ful_Vue";
							headgear="H_SPE_CIV_Worker_Cap_3";
						};
					};
					id=339;
					type="SPE_FFI_TeamLeader";
					atlOffset=2.2888184e-005;
					class CustomAttributes
					{
						class Attribute0
						{
							property="ENH_spotDistance";
							expression="if (_value == 0.5) exitWith {}; [_this, ['spotDistance', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute1
						{
							property="ENH_reloadingSpeed";
							expression="if (_value == 0.5) exitWith {}; [_this, ['reloadSpeed', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute2
						{
							property="ENH_aimingSpeed";
							expression="if (_value == 0.5) exitWith {}; [_this, ['aimingSpeed', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute3
						{
							property="ENH_unitTraits_engineer";
							expression="[_this, ['Engineer', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=1;
								};
							};
						};
						class Attribute4
						{
							property="ENH_aimingAccuracy";
							expression="if (_value == 0.5) exitWith {}; [_this, ['aimingAccuracy', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=0.69;
								};
							};
						};
						class Attribute5
						{
							property="ENH_unitTraits_audibleCoef";
							expression="[_this, ['AudibleCoef', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=0.40000001;
								};
							};
						};
						class Attribute6
						{
							property="enableStamina";
							expression="_this enablestamina _value;";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=0;
								};
							};
						};
						class Attribute7
						{
							property="ENH_unitTraits_medic";
							expression="[_this, ['Medic', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=1;
								};
							};
						};
						class Attribute8
						{
							property="speaker";
							expression="_this setspeaker _value;";
							class Value
							{
								class data
								{
									singleType="STRING";
									value="Male01FRE";
								};
							};
						};
						class Attribute9
						{
							property="ENH_commanding";
							expression="if (_value == 0.5) exitWith {}; [_this, ['commanding', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute10
						{
							property="ENH_unitTrait_UAVHacker";
							expression="[_this, ['UAVHacker', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=1;
								};
							};
						};
						class Attribute11
						{
							property="ENH_unitTraits_loadCoef";
							expression="[_this, ['LoadCoef', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=0.1;
								};
							};
						};
						class Attribute12
						{
							property="ENH_courage";
							expression="if (_value == 0.5) exitWith {}; [_this, ['courage', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute13
						{
							property="pitch";
							expression="_this setpitch _value;";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=0.99000001;
								};
							};
						};
						class Attribute14
						{
							property="ENH_unitTraits_camouflage";
							expression="[_this, ['CamouflageCoef', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=0.40000001;
								};
							};
						};
						class Attribute15
						{
							property="ENH_spotTime";
							expression="if (_value == 0.5) exitWith {}; [_this, ['spotTime', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute16
						{
							property="enh_general";
							expression="if (_value == 0.5) exitWith {}; [_this, ['general', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute17
						{
							property="ENH_unitTrait_explosiveSpecialist";
							expression="[_this, ['ExplosiveSpecialist', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=1;
								};
							};
						};
						class Attribute18
						{
							property="ENH_aimingShake";
							expression="if (_value == 0.5) exitWith {}; [_this, ['aimingShake', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=0.80000001;
								};
							};
						};
						nAttributes=19;
					};
				};
				class Item1
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={11941.659,46.685623,2406.4016};
						angles[]={0,5.4017148,-0};
					};
					side="West";
					flags=7;
					class Attributes
					{
						skill=1;
						init="this disableAI ""PATH"";";
						stance="Up";
						class Inventory
						{
							class primaryWeapon
							{
								name="SPE_M1_Carbine";
								class primaryMuzzleMag
								{
									name="SPE_15Rnd_762x33";
									ammoLeft=15;
								};
							};
							class uniform
							{
								typeName="U_SPE_FFI_Jacket_bruin";
								isBackpack=0;
								class ItemCargo
								{
									items=1;
									class Item0
									{
										name="SPE_US_FirstAidKit";
										count=7;
									};
								};
							};
							class vest
							{
								typeName="V_SPE_US_Vest_Carbine";
								isBackpack=0;
								class MagazineCargo
								{
									items=2;
									class Item0
									{
										name="SPE_15Rnd_762x33";
										count=20;
										ammoLeft=15;
									};
									class Item1
									{
										name="vn_f1_grenade_mag";
										count=3;
										ammoLeft=1;
									};
								};
							};
							class backpack
							{
								typeName="B_SPE_GER_Radio";
								isBackpack=1;
							};
							map="ItemMap";
							compass="SPE_US_ItemCompass";
							watch="SPE_US_ItemWatch";
							goggles="G_SPE_Pipe_Sir_Winston";
							hmd="SPE_GER_Headset";
							headgear="H_SPE_CIV_Worker_Cap_1";
						};
					};
					id=340;
					type="SPE_FFI_Militia";
					atlOffset=3.8146973e-006;
					class CustomAttributes
					{
						class Attribute0
						{
							property="ENH_spotDistance";
							expression="if (_value == 0.5) exitWith {}; [_this, ['spotDistance', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute1
						{
							property="ENH_reloadingSpeed";
							expression="if (_value == 0.5) exitWith {}; [_this, ['reloadSpeed', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute2
						{
							property="ENH_aimingSpeed";
							expression="if (_value == 0.5) exitWith {}; [_this, ['aimingSpeed', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute3
						{
							property="ENH_unitTraits_engineer";
							expression="[_this, ['Engineer', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=1;
								};
							};
						};
						class Attribute4
						{
							property="ENH_aimingAccuracy";
							expression="if (_value == 0.5) exitWith {}; [_this, ['aimingAccuracy', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=0.69;
								};
							};
						};
						class Attribute5
						{
							property="ENH_unitTraits_audibleCoef";
							expression="[_this, ['AudibleCoef', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=0.40000001;
								};
							};
						};
						class Attribute6
						{
							property="enableStamina";
							expression="_this enablestamina _value;";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=0;
								};
							};
						};
						class Attribute7
						{
							property="ENH_unitTraits_medic";
							expression="[_this, ['Medic', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=1;
								};
							};
						};
						class Attribute8
						{
							property="speaker";
							expression="_this setspeaker _value;";
							class Value
							{
								class data
								{
									singleType="STRING";
									value="Male01FRE";
								};
							};
						};
						class Attribute9
						{
							property="ENH_commanding";
							expression="if (_value == 0.5) exitWith {}; [_this, ['commanding', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute10
						{
							property="ENH_unitTrait_UAVHacker";
							expression="[_this, ['UAVHacker', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=1;
								};
							};
						};
						class Attribute11
						{
							property="ENH_unitTraits_loadCoef";
							expression="[_this, ['LoadCoef', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=0.1;
								};
							};
						};
						class Attribute12
						{
							property="ENH_courage";
							expression="if (_value == 0.5) exitWith {}; [_this, ['courage', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute13
						{
							property="pitch";
							expression="_this setpitch _value;";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1.02;
								};
							};
						};
						class Attribute14
						{
							property="ENH_unitTraits_camouflage";
							expression="[_this, ['CamouflageCoef', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=0.40000001;
								};
							};
						};
						class Attribute15
						{
							property="ENH_spotTime";
							expression="if (_value == 0.5) exitWith {}; [_this, ['spotTime', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute16
						{
							property="enh_general";
							expression="if (_value == 0.5) exitWith {}; [_this, ['general', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute17
						{
							property="ENH_unitTrait_explosiveSpecialist";
							expression="[_this, ['ExplosiveSpecialist', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=1;
								};
							};
						};
						class Attribute18
						{
							property="ENH_aimingShake";
							expression="if (_value == 0.5) exitWith {}; [_this, ['aimingShake', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=0.80000001;
								};
							};
						};
						nAttributes=19;
					};
				};
				class Item2
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={11936.819,47.377583,2418.4583};
						angles[]={0,0.39640912,-0};
					};
					side="West";
					flags=5;
					class Attributes
					{
						skill=1;
						init="this disableAI ""PATH"";";
						stance="Middle";
						class Inventory
						{
							class primaryWeapon
							{
								name="SPE_FM_24_M29";
								class primaryMuzzleMag
								{
									name="SPE_25Rnd_75x54";
									ammoLeft=25;
								};
							};
							class uniform
							{
								typeName="U_SPE_FFI_Casual_6_trop";
								isBackpack=0;
								class ItemCargo
								{
									items=1;
									class Item0
									{
										name="SPE_US_FirstAidKit";
										count=7;
									};
								};
							};
							class vest
							{
								typeName="V_SPE_GER_VestMG";
								isBackpack=0;
								class MagazineCargo
								{
									items=1;
									class Item0
									{
										name="SPE_25Rnd_75x54";
										count=12;
										ammoLeft=25;
									};
								};
							};
							class backpack
							{
								typeName="B_SPE_GER_Belt_bag";
								isBackpack=1;
							};
							map="ItemMap";
							compass="SPE_US_ItemCompass";
							watch="SPE_US_ItemWatch";
							goggles="G_SPE_Ful_Vue_Reinforced";
							headgear="H_SPE_FR_Adrian_ns";
						};
					};
					id=341;
					type="SPE_FFI_Militia";
					atlOffset=3.8146973e-006;
					class CustomAttributes
					{
						class Attribute0
						{
							property="ENH_spotDistance";
							expression="if (_value == 0.5) exitWith {}; [_this, ['spotDistance', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute1
						{
							property="ENH_reloadingSpeed";
							expression="if (_value == 0.5) exitWith {}; [_this, ['reloadSpeed', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute2
						{
							property="ENH_aimingSpeed";
							expression="if (_value == 0.5) exitWith {}; [_this, ['aimingSpeed', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute3
						{
							property="ENH_unitTraits_engineer";
							expression="[_this, ['Engineer', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=1;
								};
							};
						};
						class Attribute4
						{
							property="ENH_aimingAccuracy";
							expression="if (_value == 0.5) exitWith {}; [_this, ['aimingAccuracy', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=0.69;
								};
							};
						};
						class Attribute5
						{
							property="ENH_unitTraits_audibleCoef";
							expression="[_this, ['AudibleCoef', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=0.40000001;
								};
							};
						};
						class Attribute6
						{
							property="enableStamina";
							expression="_this enablestamina _value;";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=0;
								};
							};
						};
						class Attribute7
						{
							property="ENH_unitTraits_medic";
							expression="[_this, ['Medic', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=1;
								};
							};
						};
						class Attribute8
						{
							property="speaker";
							expression="_this setspeaker _value;";
							class Value
							{
								class data
								{
									singleType="STRING";
									value="Male01FRE";
								};
							};
						};
						class Attribute9
						{
							property="ENH_commanding";
							expression="if (_value == 0.5) exitWith {}; [_this, ['commanding', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute10
						{
							property="ENH_unitTrait_UAVHacker";
							expression="[_this, ['UAVHacker', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=1;
								};
							};
						};
						class Attribute11
						{
							property="ENH_unitTraits_loadCoef";
							expression="[_this, ['LoadCoef', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=0.1;
								};
							};
						};
						class Attribute12
						{
							property="ENH_courage";
							expression="if (_value == 0.5) exitWith {}; [_this, ['courage', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute13
						{
							property="ENH_unitTraits_camouflage";
							expression="[_this, ['CamouflageCoef', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=0.40000001;
								};
							};
						};
						class Attribute14
						{
							property="ENH_spotTime";
							expression="if (_value == 0.5) exitWith {}; [_this, ['spotTime', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute15
						{
							property="enh_general";
							expression="if (_value == 0.5) exitWith {}; [_this, ['general', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute16
						{
							property="ENH_unitTrait_explosiveSpecialist";
							expression="[_this, ['ExplosiveSpecialist', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=1;
								};
							};
						};
						class Attribute17
						{
							property="ENH_aimingShake";
							expression="if (_value == 0.5) exitWith {}; [_this, ['aimingShake', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=0.80000001;
								};
							};
						};
						nAttributes=18;
					};
				};
				class Item3
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={11931.229,45.788879,2375.0793};
						angles[]={0,2.6696954,-0};
					};
					side="West";
					flags=5;
					class Attributes
					{
						skill=1;
						init="this disableAI ""PATH"";";
						stance="Up";
						class Inventory
						{
							class primaryWeapon
							{
								name="SPE_Sten_Mk2";
								class primaryMuzzleMag
								{
									name="SPE_32Rnd_9x19_Sten";
									ammoLeft=32;
								};
							};
							class handgun
							{
								name="vn_p38";
								class primaryMuzzleMag
								{
									name="vn_p38_mag";
									ammoLeft=8;
								};
							};
							class uniform
							{
								typeName="U_SPE_FFI_Casual_6_trop";
								isBackpack=0;
								class ItemCargo
								{
									items=1;
									class Item0
									{
										name="SPE_US_FirstAidKit";
										count=7;
									};
								};
							};
							class vest
							{
								typeName="V_SPE_FFI_Vest_rifle_frag";
								isBackpack=0;
								class MagazineCargo
								{
									items=2;
									class Item0
									{
										name="vn_p38_mag";
										count=6;
										ammoLeft=8;
									};
									class Item1
									{
										name="SPE_32Rnd_9x19_Sten";
										count=8;
										ammoLeft=32;
									};
								};
							};
							class backpack
							{
								typeName="B_SPE_GER_MedicBackpack_Empty";
								isBackpack=1;
								class ItemCargo
								{
									items=2;
									class Item0
									{
										name="SPE_US_Medkit";
										count=1;
									};
									class Item1
									{
										name="SPE_US_FirstAidKit";
										count=3;
									};
								};
							};
							map="ItemMap";
							compass="SPE_US_ItemCompass";
							watch="SPE_US_ItemWatch";
							headgear="H_SPE_FR_Adrian_Medic_ns";
						};
					};
					id=342;
					type="SPE_FFI_Militia";
					class CustomAttributes
					{
						class Attribute0
						{
							property="ENH_spotDistance";
							expression="if (_value == 0.5) exitWith {}; [_this, ['spotDistance', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute1
						{
							property="ENH_reloadingSpeed";
							expression="if (_value == 0.5) exitWith {}; [_this, ['reloadSpeed', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute2
						{
							property="ENH_aimingSpeed";
							expression="if (_value == 0.5) exitWith {}; [_this, ['aimingSpeed', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute3
						{
							property="ENH_unitTraits_engineer";
							expression="[_this, ['Engineer', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=1;
								};
							};
						};
						class Attribute4
						{
							property="ENH_aimingAccuracy";
							expression="if (_value == 0.5) exitWith {}; [_this, ['aimingAccuracy', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=0.69;
								};
							};
						};
						class Attribute5
						{
							property="ENH_unitTraits_audibleCoef";
							expression="[_this, ['AudibleCoef', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=0.40000001;
								};
							};
						};
						class Attribute6
						{
							property="enableStamina";
							expression="_this enablestamina _value;";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=0;
								};
							};
						};
						class Attribute7
						{
							property="ENH_unitTraits_medic";
							expression="[_this, ['Medic', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=1;
								};
							};
						};
						class Attribute8
						{
							property="speaker";
							expression="_this setspeaker _value;";
							class Value
							{
								class data
								{
									singleType="STRING";
									value="Male01FRE";
								};
							};
						};
						class Attribute9
						{
							property="ENH_commanding";
							expression="if (_value == 0.5) exitWith {}; [_this, ['commanding', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute10
						{
							property="ENH_unitTrait_UAVHacker";
							expression="[_this, ['UAVHacker', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=1;
								};
							};
						};
						class Attribute11
						{
							property="ENH_unitTraits_loadCoef";
							expression="[_this, ['LoadCoef', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=0.1;
								};
							};
						};
						class Attribute12
						{
							property="ENH_courage";
							expression="if (_value == 0.5) exitWith {}; [_this, ['courage', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute13
						{
							property="pitch";
							expression="_this setpitch _value;";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=0.97000003;
								};
							};
						};
						class Attribute14
						{
							property="ENH_unitTraits_camouflage";
							expression="[_this, ['CamouflageCoef', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=0.40000001;
								};
							};
						};
						class Attribute15
						{
							property="ENH_spotTime";
							expression="if (_value == 0.5) exitWith {}; [_this, ['spotTime', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute16
						{
							property="enh_general";
							expression="if (_value == 0.5) exitWith {}; [_this, ['general', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute17
						{
							property="ENH_unitTrait_explosiveSpecialist";
							expression="[_this, ['ExplosiveSpecialist', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=1;
								};
							};
						};
						class Attribute18
						{
							property="ENH_aimingShake";
							expression="if (_value == 0.5) exitWith {}; [_this, ['aimingShake', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=0.80000001;
								};
							};
						};
						nAttributes=19;
					};
				};
				class Item4
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={11932.835,46.681442,2388.8792};
						angles[]={0.026790803,2.8420942,0.018971728};
					};
					side="West";
					flags=5;
					class Attributes
					{
						skill=1;
						init="this disableAI ""PATH"";";
						stance="Up";
					};
					id=343;
					type="SPE_FFI_Militia_Shotgun";
					class CustomAttributes
					{
						class Attribute0
						{
							property="ENH_spotDistance";
							expression="if (_value == 0.5) exitWith {}; [_this, ['spotDistance', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute1
						{
							property="ENH_reloadingSpeed";
							expression="if (_value == 0.5) exitWith {}; [_this, ['reloadSpeed', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute2
						{
							property="ENH_aimingSpeed";
							expression="if (_value == 0.5) exitWith {}; [_this, ['aimingSpeed', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute3
						{
							property="ENH_unitTraits_engineer";
							expression="[_this, ['Engineer', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=1;
								};
							};
						};
						class Attribute4
						{
							property="ENH_aimingAccuracy";
							expression="if (_value == 0.5) exitWith {}; [_this, ['aimingAccuracy', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=0.69;
								};
							};
						};
						class Attribute5
						{
							property="ENH_unitTraits_audibleCoef";
							expression="[_this, ['AudibleCoef', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=0.40000001;
								};
							};
						};
						class Attribute6
						{
							property="enableStamina";
							expression="_this enablestamina _value;";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=0;
								};
							};
						};
						class Attribute7
						{
							property="ENH_unitTraits_medic";
							expression="[_this, ['Medic', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=1;
								};
							};
						};
						class Attribute8
						{
							property="speaker";
							expression="_this setspeaker _value;";
							class Value
							{
								class data
								{
									singleType="STRING";
									value="Male01FRE";
								};
							};
						};
						class Attribute9
						{
							property="ENH_commanding";
							expression="if (_value == 0.5) exitWith {}; [_this, ['commanding', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute10
						{
							property="ENH_unitTrait_UAVHacker";
							expression="[_this, ['UAVHacker', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=1;
								};
							};
						};
						class Attribute11
						{
							property="ENH_unitTraits_loadCoef";
							expression="[_this, ['LoadCoef', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=0.1;
								};
							};
						};
						class Attribute12
						{
							property="ENH_courage";
							expression="if (_value == 0.5) exitWith {}; [_this, ['courage', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute13
						{
							property="pitch";
							expression="_this setpitch _value;";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1.01;
								};
							};
						};
						class Attribute14
						{
							property="ENH_unitTraits_camouflage";
							expression="[_this, ['CamouflageCoef', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=0.40000001;
								};
							};
						};
						class Attribute15
						{
							property="ENH_spotTime";
							expression="if (_value == 0.5) exitWith {}; [_this, ['spotTime', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute16
						{
							property="enh_general";
							expression="if (_value == 0.5) exitWith {}; [_this, ['general', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute17
						{
							property="ENH_unitTrait_explosiveSpecialist";
							expression="[_this, ['ExplosiveSpecialist', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=1;
								};
							};
						};
						class Attribute18
						{
							property="ENH_aimingShake";
							expression="if (_value == 0.5) exitWith {}; [_this, ['aimingShake', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=0.80000001;
								};
							};
						};
						nAttributes=19;
					};
				};
				class Item5
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={11946.741,46.746311,2406.4172};
						angles[]={0,0.4871006,-0};
					};
					side="West";
					flags=5;
					class Attributes
					{
						skill=1;
						init="this disableAI ""PATH"";";
						stance="Up";
					};
					id=344;
					type="SPE_FFI_Militia";
					class CustomAttributes
					{
						class Attribute0
						{
							property="ENH_spotDistance";
							expression="if (_value == 0.5) exitWith {}; [_this, ['spotDistance', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute1
						{
							property="ENH_reloadingSpeed";
							expression="if (_value == 0.5) exitWith {}; [_this, ['reloadSpeed', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute2
						{
							property="ENH_aimingSpeed";
							expression="if (_value == 0.5) exitWith {}; [_this, ['aimingSpeed', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute3
						{
							property="ENH_unitTraits_engineer";
							expression="[_this, ['Engineer', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=1;
								};
							};
						};
						class Attribute4
						{
							property="ENH_aimingAccuracy";
							expression="if (_value == 0.5) exitWith {}; [_this, ['aimingAccuracy', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=0.69;
								};
							};
						};
						class Attribute5
						{
							property="ENH_unitTraits_audibleCoef";
							expression="[_this, ['AudibleCoef', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=0.40000001;
								};
							};
						};
						class Attribute6
						{
							property="enableStamina";
							expression="_this enablestamina _value;";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=0;
								};
							};
						};
						class Attribute7
						{
							property="ENH_unitTraits_medic";
							expression="[_this, ['Medic', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=1;
								};
							};
						};
						class Attribute8
						{
							property="speaker";
							expression="_this setspeaker _value;";
							class Value
							{
								class data
								{
									singleType="STRING";
									value="Male01FRE";
								};
							};
						};
						class Attribute9
						{
							property="ENH_commanding";
							expression="if (_value == 0.5) exitWith {}; [_this, ['commanding', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute10
						{
							property="ENH_unitTrait_UAVHacker";
							expression="[_this, ['UAVHacker', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=1;
								};
							};
						};
						class Attribute11
						{
							property="ENH_unitTraits_loadCoef";
							expression="[_this, ['LoadCoef', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=0.1;
								};
							};
						};
						class Attribute12
						{
							property="ENH_courage";
							expression="if (_value == 0.5) exitWith {}; [_this, ['courage', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute13
						{
							property="pitch";
							expression="_this setpitch _value;";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=0.95999998;
								};
							};
						};
						class Attribute14
						{
							property="ENH_unitTraits_camouflage";
							expression="[_this, ['CamouflageCoef', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=0.40000001;
								};
							};
						};
						class Attribute15
						{
							property="ENH_spotTime";
							expression="if (_value == 0.5) exitWith {}; [_this, ['spotTime', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute16
						{
							property="enh_general";
							expression="if (_value == 0.5) exitWith {}; [_this, ['general', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute17
						{
							property="ENH_unitTrait_explosiveSpecialist";
							expression="[_this, ['ExplosiveSpecialist', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=1;
								};
							};
						};
						class Attribute18
						{
							property="ENH_aimingShake";
							expression="if (_value == 0.5) exitWith {}; [_this, ['aimingShake', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=0.80000001;
								};
							};
						};
						nAttributes=19;
					};
				};
				class Item6
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={11953.128,46.760506,2401.0071};
						angles[]={0,2.1505075,0};
					};
					side="West";
					flags=5;
					class Attributes
					{
						skill=1;
						rank="SERGEANT";
						init="this disableAI ""PATH"";";
						stance="Up";
						class Inventory
						{
							class primaryWeapon
							{
								name="SPE_K98ZF39";
								class primaryMuzzleMag
								{
									name="SPE_5Rnd_792x57";
									ammoLeft=5;
								};
							};
							class uniform
							{
								typeName="U_SPE_FFI_Casual_2_trop";
								isBackpack=0;
								class MagazineCargo
								{
									items=2;
									class Item0
									{
										name="SPE_5Rnd_792x57";
										count=13;
										ammoLeft=5;
									};
									class Item1
									{
										name="SPE_Shg24";
										count=2;
										ammoLeft=1;
									};
								};
								class ItemCargo
								{
									items=1;
									class Item0
									{
										name="SPE_US_FirstAidKit";
										count=1;
									};
								};
							};
							class vest
							{
								typeName="V_SPE_FFI_Vest_rifle_frag";
								isBackpack=0;
								class MagazineCargo
								{
									items=1;
									class Item0
									{
										name="SPE_Shg24_Frag";
										count=2;
										ammoLeft=1;
									};
								};
								class ItemCargo
								{
									items=1;
									class Item0
									{
										name="SPE_US_FirstAidKit";
										count=3;
									};
								};
							};
							class backpack
							{
								typeName="B_SPE_CIV_satchel";
								isBackpack=1;
							};
							map="ItemMap";
							compass="SPE_US_ItemCompass";
							watch="SPE_US_ItemWatch";
							goggles="G_SPE_Cigarette_Strike_Outs";
							headgear="H_SPE_CIV_Fedora_Cap_2";
						};
					};
					id=345;
					type="SPE_FFI_Sniper";
					class CustomAttributes
					{
						class Attribute0
						{
							property="ENH_spotDistance";
							expression="if (_value == 0.5) exitWith {}; [_this, ['spotDistance', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute1
						{
							property="ENH_reloadingSpeed";
							expression="if (_value == 0.5) exitWith {}; [_this, ['reloadSpeed', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute2
						{
							property="ENH_aimingSpeed";
							expression="if (_value == 0.5) exitWith {}; [_this, ['aimingSpeed', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute3
						{
							property="ENH_unitTraits_engineer";
							expression="[_this, ['Engineer', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=1;
								};
							};
						};
						class Attribute4
						{
							property="ENH_aimingAccuracy";
							expression="if (_value == 0.5) exitWith {}; [_this, ['aimingAccuracy', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=0.69;
								};
							};
						};
						class Attribute5
						{
							property="ENH_unitTraits_audibleCoef";
							expression="[_this, ['AudibleCoef', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=0.40000001;
								};
							};
						};
						class Attribute6
						{
							property="enableStamina";
							expression="_this enablestamina _value;";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=0;
								};
							};
						};
						class Attribute7
						{
							property="ENH_unitTraits_medic";
							expression="[_this, ['Medic', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=1;
								};
							};
						};
						class Attribute8
						{
							property="speaker";
							expression="_this setspeaker _value;";
							class Value
							{
								class data
								{
									singleType="STRING";
									value="Male01FRE";
								};
							};
						};
						class Attribute9
						{
							property="ENH_commanding";
							expression="if (_value == 0.5) exitWith {}; [_this, ['commanding', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute10
						{
							property="ENH_unitTrait_UAVHacker";
							expression="[_this, ['UAVHacker', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=1;
								};
							};
						};
						class Attribute11
						{
							property="ENH_unitTraits_loadCoef";
							expression="[_this, ['LoadCoef', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=0.1;
								};
							};
						};
						class Attribute12
						{
							property="ENH_courage";
							expression="if (_value == 0.5) exitWith {}; [_this, ['courage', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute13
						{
							property="pitch";
							expression="_this setpitch _value;";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1.04;
								};
							};
						};
						class Attribute14
						{
							property="ENH_unitTraits_camouflage";
							expression="[_this, ['CamouflageCoef', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=0.40000001;
								};
							};
						};
						class Attribute15
						{
							property="ENH_spotTime";
							expression="if (_value == 0.5) exitWith {}; [_this, ['spotTime', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute16
						{
							property="enh_general";
							expression="if (_value == 0.5) exitWith {}; [_this, ['general', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute17
						{
							property="ENH_unitTrait_explosiveSpecialist";
							expression="[_this, ['ExplosiveSpecialist', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=1;
								};
							};
						};
						class Attribute18
						{
							property="ENH_aimingShake";
							expression="if (_value == 0.5) exitWith {}; [_this, ['aimingShake', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=0.80000001;
								};
							};
						};
						nAttributes=19;
					};
				};
				class Item7
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={11939.341,46.705357,2382.5842};
						angles[]={0,2.1995161,-0};
					};
					side="West";
					flags=5;
					class Attributes
					{
						skill=1;
						init="this disableAI ""PATH"";";
						stance="Middle";
					};
					id=346;
					type="SPE_FFI_Sniper";
					atlOffset=3.8146973e-006;
					class CustomAttributes
					{
						class Attribute0
						{
							property="ENH_spotDistance";
							expression="if (_value == 0.5) exitWith {}; [_this, ['spotDistance', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute1
						{
							property="ENH_reloadingSpeed";
							expression="if (_value == 0.5) exitWith {}; [_this, ['reloadSpeed', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute2
						{
							property="ENH_aimingSpeed";
							expression="if (_value == 0.5) exitWith {}; [_this, ['aimingSpeed', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute3
						{
							property="ENH_unitTraits_engineer";
							expression="[_this, ['Engineer', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=1;
								};
							};
						};
						class Attribute4
						{
							property="ENH_aimingAccuracy";
							expression="if (_value == 0.5) exitWith {}; [_this, ['aimingAccuracy', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=0.69;
								};
							};
						};
						class Attribute5
						{
							property="ENH_unitTraits_audibleCoef";
							expression="[_this, ['AudibleCoef', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=0.40000001;
								};
							};
						};
						class Attribute6
						{
							property="enableStamina";
							expression="_this enablestamina _value;";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=0;
								};
							};
						};
						class Attribute7
						{
							property="ENH_unitTraits_medic";
							expression="[_this, ['Medic', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=1;
								};
							};
						};
						class Attribute8
						{
							property="speaker";
							expression="_this setspeaker _value;";
							class Value
							{
								class data
								{
									singleType="STRING";
									value="Male01FRE";
								};
							};
						};
						class Attribute9
						{
							property="ENH_commanding";
							expression="if (_value == 0.5) exitWith {}; [_this, ['commanding', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute10
						{
							property="ENH_unitTrait_UAVHacker";
							expression="[_this, ['UAVHacker', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=1;
								};
							};
						};
						class Attribute11
						{
							property="ENH_unitTraits_loadCoef";
							expression="[_this, ['LoadCoef', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=0.1;
								};
							};
						};
						class Attribute12
						{
							property="ENH_courage";
							expression="if (_value == 0.5) exitWith {}; [_this, ['courage', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute13
						{
							property="ENH_unitTraits_camouflage";
							expression="[_this, ['CamouflageCoef', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=0.40000001;
								};
							};
						};
						class Attribute14
						{
							property="ENH_spotTime";
							expression="if (_value == 0.5) exitWith {}; [_this, ['spotTime', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute15
						{
							property="enh_general";
							expression="if (_value == 0.5) exitWith {}; [_this, ['general', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute16
						{
							property="ENH_unitTrait_explosiveSpecialist";
							expression="[_this, ['ExplosiveSpecialist', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=1;
								};
							};
						};
						class Attribute17
						{
							property="ENH_aimingShake";
							expression="if (_value == 0.5) exitWith {}; [_this, ['aimingShake', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=0.80000001;
								};
							};
						};
						nAttributes=18;
					};
				};
				class Item8
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={11937.806,47.302044,2417.7922};
						angles[]={0,0.25900581,-0};
					};
					side="West";
					flags=5;
					class Attributes
					{
						skill=1;
						rank="SERGEANT";
						stance="Up";
						class Inventory
						{
							class primaryWeapon
							{
								name="SPE_MP40";
								class primaryMuzzleMag
								{
									name="SPE_32Rnd_9x19";
									ammoLeft=32;
								};
							};
							class uniform
							{
								typeName="U_SPE_FFI_Worker_4";
								isBackpack=0;
								class MagazineCargo
								{
									items=1;
									class Item0
									{
										name="SPE_32Rnd_9x19";
										count=7;
										ammoLeft=32;
									};
								};
								class ItemCargo
								{
									items=1;
									class Item0
									{
										name="SPE_US_FirstAidKit";
										count=1;
									};
								};
							};
							class vest
							{
								typeName="V_SPE_FFI_Vest_SMG_pouch";
								isBackpack=0;
								class MagazineCargo
								{
									items=2;
									class Item0
									{
										name="SPE_32Rnd_9x19";
										count=10;
										ammoLeft=32;
									};
									class Item1
									{
										name="SPE_Shg24";
										count=2;
										ammoLeft=1;
									};
								};
							};
							class backpack
							{
								typeName="B_SPE_FFI_Gasbag";
								isBackpack=1;
								class MagazineCargo
								{
									items=1;
									class Item0
									{
										name="SPE_32Rnd_9x19";
										count=2;
										ammoLeft=32;
									};
								};
								class ItemCargo
								{
									items=1;
									class Item0
									{
										name="SPE_US_FirstAidKit";
										count=3;
									};
								};
							};
							map="ItemMap";
							compass="SPE_US_ItemCompass";
							watch="SPE_US_ItemWatch";
							goggles="G_SPE_Cigarette_Strike_Outs";
							headgear="H_SPE_CIV_Worker_Cap_1";
						};
					};
					id=347;
					type="SPE_FFI_Fighter_MP40";
					atlOffset=3.8146973e-006;
					class CustomAttributes
					{
						class Attribute0
						{
							property="ENH_spotDistance";
							expression="if (_value == 0.5) exitWith {}; [_this, ['spotDistance', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute1
						{
							property="ENH_reloadingSpeed";
							expression="if (_value == 0.5) exitWith {}; [_this, ['reloadSpeed', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute2
						{
							property="ENH_aimingSpeed";
							expression="if (_value == 0.5) exitWith {}; [_this, ['aimingSpeed', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute3
						{
							property="ENH_unitTraits_engineer";
							expression="[_this, ['Engineer', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=1;
								};
							};
						};
						class Attribute4
						{
							property="ENH_aimingAccuracy";
							expression="if (_value == 0.5) exitWith {}; [_this, ['aimingAccuracy', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=0.69;
								};
							};
						};
						class Attribute5
						{
							property="ENH_unitTraits_audibleCoef";
							expression="[_this, ['AudibleCoef', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=0.40000001;
								};
							};
						};
						class Attribute6
						{
							property="enableStamina";
							expression="_this enablestamina _value;";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=0;
								};
							};
						};
						class Attribute7
						{
							property="ENH_unitTraits_medic";
							expression="[_this, ['Medic', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=1;
								};
							};
						};
						class Attribute8
						{
							property="speaker";
							expression="_this setspeaker _value;";
							class Value
							{
								class data
								{
									singleType="STRING";
									value="Male01FRE";
								};
							};
						};
						class Attribute9
						{
							property="ENH_commanding";
							expression="if (_value == 0.5) exitWith {}; [_this, ['commanding', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute10
						{
							property="ENH_unitTrait_UAVHacker";
							expression="[_this, ['UAVHacker', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=1;
								};
							};
						};
						class Attribute11
						{
							property="ENH_unitTraits_loadCoef";
							expression="[_this, ['LoadCoef', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=0.1;
								};
							};
						};
						class Attribute12
						{
							property="ENH_courage";
							expression="if (_value == 0.5) exitWith {}; [_this, ['courage', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute13
						{
							property="pitch";
							expression="_this setpitch _value;";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute14
						{
							property="ENH_unitTraits_camouflage";
							expression="[_this, ['CamouflageCoef', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=0.40000001;
								};
							};
						};
						class Attribute15
						{
							property="ENH_spotTime";
							expression="if (_value == 0.5) exitWith {}; [_this, ['spotTime', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute16
						{
							property="enh_general";
							expression="if (_value == 0.5) exitWith {}; [_this, ['general', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute17
						{
							property="ENH_unitTrait_explosiveSpecialist";
							expression="[_this, ['ExplosiveSpecialist', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=1;
								};
							};
						};
						class Attribute18
						{
							property="ENH_aimingShake";
							expression="if (_value == 0.5) exitWith {}; [_this, ['aimingShake', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=0.80000001;
								};
							};
						};
						nAttributes=19;
					};
				};
				class Item9
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={11917.558,45.828739,2381.8499};
						angles[]={0,3.8052375,-0};
					};
					side="West";
					flags=5;
					class Attributes
					{
						skill=1;
						init="this disableAI ""PATH"";";
						stance="Up";
						class Inventory
						{
							class primaryWeapon
							{
								name="SPE_MG34";
								class primaryMuzzleMag
								{
									name="SPE_50Rnd_792x57";
									ammoLeft=50;
								};
							};
							class uniform
							{
								typeName="U_SPE_FFI_Casual_2";
								isBackpack=0;
								class MagazineCargo
								{
									items=2;
									class Item0
									{
										name="SPE_Shg24";
										count=2;
										ammoLeft=1;
									};
									class Item1
									{
										name="SPE_50Rnd_792x57";
										count=1;
										ammoLeft=50;
									};
								};
								class ItemCargo
								{
									items=1;
									class Item0
									{
										name="SPE_US_FirstAidKit";
										count=1;
									};
								};
							};
							class vest
							{
								typeName="V_SPE_GER_VestMG";
								isBackpack=0;
								class MagazineCargo
								{
									items=1;
									class Item0
									{
										name="SPE_50Rnd_792x57";
										count=6;
										ammoLeft=50;
									};
								};
							};
							class backpack
							{
								typeName="B_SPE_GER_Tonister34_canvas";
								isBackpack=1;
								class MagazineCargo
								{
									items=1;
									class Item0
									{
										name="SPE_50Rnd_792x57";
										count=6;
										ammoLeft=50;
									};
								};
							};
							map="ItemMap";
							compass="SPE_US_ItemCompass";
							watch="SPE_US_ItemWatch";
							goggles="G_SPE_Cigarette_Grundstein";
							headgear="H_SPE_CIV_Worker_Cap_1";
						};
					};
					id=348;
					type="SPE_FFI_Fighter";
					atlOffset=3.8146973e-006;
					class CustomAttributes
					{
						class Attribute0
						{
							property="ENH_spotDistance";
							expression="if (_value == 0.5) exitWith {}; [_this, ['spotDistance', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute1
						{
							property="ENH_reloadingSpeed";
							expression="if (_value == 0.5) exitWith {}; [_this, ['reloadSpeed', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute2
						{
							property="ENH_aimingSpeed";
							expression="if (_value == 0.5) exitWith {}; [_this, ['aimingSpeed', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute3
						{
							property="ENH_unitTraits_engineer";
							expression="[_this, ['Engineer', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=1;
								};
							};
						};
						class Attribute4
						{
							property="ENH_aimingAccuracy";
							expression="if (_value == 0.5) exitWith {}; [_this, ['aimingAccuracy', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=0.69;
								};
							};
						};
						class Attribute5
						{
							property="ENH_unitTraits_audibleCoef";
							expression="[_this, ['AudibleCoef', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=0.40000001;
								};
							};
						};
						class Attribute6
						{
							property="enableStamina";
							expression="_this enablestamina _value;";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=0;
								};
							};
						};
						class Attribute7
						{
							property="ENH_unitTraits_medic";
							expression="[_this, ['Medic', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=1;
								};
							};
						};
						class Attribute8
						{
							property="speaker";
							expression="_this setspeaker _value;";
							class Value
							{
								class data
								{
									singleType="STRING";
									value="Male01FRE";
								};
							};
						};
						class Attribute9
						{
							property="ENH_commanding";
							expression="if (_value == 0.5) exitWith {}; [_this, ['commanding', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute10
						{
							property="ENH_unitTrait_UAVHacker";
							expression="[_this, ['UAVHacker', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=1;
								};
							};
						};
						class Attribute11
						{
							property="ENH_unitTraits_loadCoef";
							expression="[_this, ['LoadCoef', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=0.1;
								};
							};
						};
						class Attribute12
						{
							property="ENH_courage";
							expression="if (_value == 0.5) exitWith {}; [_this, ['courage', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute13
						{
							property="pitch";
							expression="_this setpitch _value;";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1.03;
								};
							};
						};
						class Attribute14
						{
							property="ENH_unitTraits_camouflage";
							expression="[_this, ['CamouflageCoef', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=0.40000001;
								};
							};
						};
						class Attribute15
						{
							property="ENH_spotTime";
							expression="if (_value == 0.5) exitWith {}; [_this, ['spotTime', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute16
						{
							property="enh_general";
							expression="if (_value == 0.5) exitWith {}; [_this, ['general', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute17
						{
							property="ENH_unitTrait_explosiveSpecialist";
							expression="[_this, ['ExplosiveSpecialist', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=1;
								};
							};
						};
						class Attribute18
						{
							property="ENH_aimingShake";
							expression="if (_value == 0.5) exitWith {}; [_this, ['aimingShake', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=0.80000001;
								};
							};
						};
						nAttributes=19;
					};
				};
			};
			class Attributes
			{
			};
			id=338;
			atlOffset=3.8146973e-006;
		};
		class Item115
		{
			dataType="Object";
			class PositionInfo
			{
				position[]={11937.452,50.702072,2403.6543};
			};
			side="Empty";
			flags=5;
			class Attributes
			{
			};
			id=349;
			type="SPE_FlagCarrier_FFF";
			class CustomAttributes
			{
				class Attribute0
				{
					property="allowDamage";
					expression="_this allowdamage _value;";
					class Value
					{
						class data
						{
							singleType="BOOL";
							value=0;
						};
					};
				};
				nAttributes=1;
			};
		};
		class Item116
		{
			dataType="Marker";
			position[]={6453.7705,56.097034,5225.6743};
			name="supply_officer_initial_2";
			text="Supply Officer";
			type="Empty";
			angle=172.89491;
			id=350;
		};
		class Item117
		{
			dataType="Marker";
			position[]={6460.0947,56.301968,5204.5698};
			name="supply_drop_initial_2";
			text="Initial Supply Drop 2";
			type="Empty";
			colorName="ColorOrange";
			angle=141.34198;
			id=351;
		};
		class Item118
		{
			dataType="Object";
			class PositionInfo
			{
				position[]={6460.0986,56.301914,5204.5674};
				angles[]={0.036650803,0,6.2432065};
			};
			side="Empty";
			flags=4;
			class Attributes
			{
			};
			id=352;
			type="Land_JumpTarget_F";
		};
		class Item119
		{
			dataType="Marker";
			position[]={6480.2749,55.60675,5275.1211};
			name="marker_0";
			text="French Resistance Supply Stash";
			type="SPE_n_Icon_Flag_FFI";
			id=353;
		};
		class Item120
		{
			dataType="Group";
			side="West";
			class Entities
			{
				items=10;
				class Item0
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={6479.0288,56.184479,5197.2051};
						angles[]={0,1.6739082,-0};
					};
					side="West";
					flags=5;
					class Attributes
					{
						skill=1;
						rank="CORPORAL";
						init="this disableAI ""PATH"";";
						stance="Middle";
						class Inventory
						{
							class primaryWeapon
							{
								name="vn_m36";
								class primaryMuzzleMag
								{
									name="vn_m36_mag";
									ammoLeft=5;
								};
							};
							class binocular
							{
								name="SPE_Binocular_GER";
							};
							class uniform
							{
								typeName="U_SPE_CIV_pak2_zwart_swetr";
								isBackpack=0;
								class MagazineCargo
								{
									items=1;
									class Item0
									{
										name="vn_m36_mag";
										count=1;
										ammoLeft=5;
									};
								};
								class ItemCargo
								{
									items=1;
									class Item0
									{
										name="SPE_US_FirstAidKit";
										count=3;
									};
								};
							};
							class vest
							{
								typeName="V_SPE_FFI_Vest_rifle_pouch";
								isBackpack=0;
								class MagazineCargo
								{
									items=5;
									class Item0
									{
										name="SPE_M39";
										count=2;
										ammoLeft=1;
									};
									class Item1
									{
										name="SPE_US_M18";
										count=2;
										ammoLeft=1;
									};
									class Item2
									{
										name="SPE_US_M18_Violet";
										count=1;
										ammoLeft=1;
									};
									class Item3
									{
										name="SPE_US_M18_Red";
										count=1;
										ammoLeft=1;
									};
									class Item4
									{
										name="vn_m36_mag";
										count=7;
										ammoLeft=5;
									};
								};
							};
							class backpack
							{
								typeName="B_SPE_CIV_musette";
								isBackpack=1;
								class MagazineCargo
								{
									items=1;
									class Item0
									{
										name="vn_m36_mag";
										count=3;
										ammoLeft=5;
									};
								};
							};
							map="ItemMap";
							compass="SPE_US_ItemCompass";
							watch="SPE_US_ItemWatch";
							goggles="G_SPE_Ful_Vue";
							headgear="H_SPE_CIV_Worker_Cap_3";
						};
					};
					id=355;
					type="SPE_FFI_TeamLeader";
					class CustomAttributes
					{
						class Attribute0
						{
							property="ENH_spotDistance";
							expression="if (_value == 0.5) exitWith {}; [_this, ['spotDistance', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute1
						{
							property="ENH_reloadingSpeed";
							expression="if (_value == 0.5) exitWith {}; [_this, ['reloadSpeed', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute2
						{
							property="ENH_aimingSpeed";
							expression="if (_value == 0.5) exitWith {}; [_this, ['aimingSpeed', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute3
						{
							property="ENH_unitTraits_engineer";
							expression="[_this, ['Engineer', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=1;
								};
							};
						};
						class Attribute4
						{
							property="ENH_aimingAccuracy";
							expression="if (_value == 0.5) exitWith {}; [_this, ['aimingAccuracy', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=0.69;
								};
							};
						};
						class Attribute5
						{
							property="ENH_unitTraits_audibleCoef";
							expression="[_this, ['AudibleCoef', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=0.40000001;
								};
							};
						};
						class Attribute6
						{
							property="enableStamina";
							expression="_this enablestamina _value;";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=0;
								};
							};
						};
						class Attribute7
						{
							property="ENH_unitTraits_medic";
							expression="[_this, ['Medic', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=1;
								};
							};
						};
						class Attribute8
						{
							property="speaker";
							expression="_this setspeaker _value;";
							class Value
							{
								class data
								{
									singleType="STRING";
									value="Male01FRE";
								};
							};
						};
						class Attribute9
						{
							property="ENH_commanding";
							expression="if (_value == 0.5) exitWith {}; [_this, ['commanding', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute10
						{
							property="ENH_unitTrait_UAVHacker";
							expression="[_this, ['UAVHacker', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=1;
								};
							};
						};
						class Attribute11
						{
							property="ENH_unitTraits_loadCoef";
							expression="[_this, ['LoadCoef', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=0.1;
								};
							};
						};
						class Attribute12
						{
							property="ENH_courage";
							expression="if (_value == 0.5) exitWith {}; [_this, ['courage', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute13
						{
							property="ENH_unitTraits_camouflage";
							expression="[_this, ['CamouflageCoef', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=0.40000001;
								};
							};
						};
						class Attribute14
						{
							property="ENH_spotTime";
							expression="if (_value == 0.5) exitWith {}; [_this, ['spotTime', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute15
						{
							property="enh_general";
							expression="if (_value == 0.5) exitWith {}; [_this, ['general', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute16
						{
							property="ENH_unitTrait_explosiveSpecialist";
							expression="[_this, ['ExplosiveSpecialist', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=1;
								};
							};
						};
						class Attribute17
						{
							property="ENH_aimingShake";
							expression="if (_value == 0.5) exitWith {}; [_this, ['aimingShake', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=0.80000001;
								};
							};
						};
						nAttributes=18;
					};
				};
				class Item1
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={6453.4097,56.119011,5221.5039};
						angles[]={0,2.9732239,-0};
					};
					side="West";
					flags=7;
					class Attributes
					{
						skill=1;
						init="this disableAI ""PATH"";";
						stance="Up";
						class Inventory
						{
							class primaryWeapon
							{
								name="SPE_M1_Carbine";
								class primaryMuzzleMag
								{
									name="SPE_15Rnd_762x33";
									ammoLeft=15;
								};
							};
							class uniform
							{
								typeName="U_SPE_FFI_Jacket_bruin";
								isBackpack=0;
								class ItemCargo
								{
									items=1;
									class Item0
									{
										name="SPE_US_FirstAidKit";
										count=7;
									};
								};
							};
							class vest
							{
								typeName="V_SPE_US_Vest_Carbine";
								isBackpack=0;
								class MagazineCargo
								{
									items=2;
									class Item0
									{
										name="SPE_15Rnd_762x33";
										count=20;
										ammoLeft=15;
									};
									class Item1
									{
										name="vn_f1_grenade_mag";
										count=3;
										ammoLeft=1;
									};
								};
							};
							class backpack
							{
								typeName="B_SPE_GER_Radio";
								isBackpack=1;
							};
							map="ItemMap";
							compass="SPE_US_ItemCompass";
							watch="SPE_US_ItemWatch";
							goggles="G_SPE_Pipe_Sir_Winston";
							hmd="SPE_GER_Headset";
							headgear="H_SPE_CIV_Worker_Cap_1";
						};
					};
					id=356;
					type="SPE_FFI_Militia";
					class CustomAttributes
					{
						class Attribute0
						{
							property="ENH_spotDistance";
							expression="if (_value == 0.5) exitWith {}; [_this, ['spotDistance', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute1
						{
							property="ENH_reloadingSpeed";
							expression="if (_value == 0.5) exitWith {}; [_this, ['reloadSpeed', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute2
						{
							property="ENH_aimingSpeed";
							expression="if (_value == 0.5) exitWith {}; [_this, ['aimingSpeed', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute3
						{
							property="ENH_unitTraits_engineer";
							expression="[_this, ['Engineer', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=1;
								};
							};
						};
						class Attribute4
						{
							property="ENH_aimingAccuracy";
							expression="if (_value == 0.5) exitWith {}; [_this, ['aimingAccuracy', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=0.69;
								};
							};
						};
						class Attribute5
						{
							property="ENH_unitTraits_audibleCoef";
							expression="[_this, ['AudibleCoef', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=0.40000001;
								};
							};
						};
						class Attribute6
						{
							property="enableStamina";
							expression="_this enablestamina _value;";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=0;
								};
							};
						};
						class Attribute7
						{
							property="ENH_unitTraits_medic";
							expression="[_this, ['Medic', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=1;
								};
							};
						};
						class Attribute8
						{
							property="speaker";
							expression="_this setspeaker _value;";
							class Value
							{
								class data
								{
									singleType="STRING";
									value="Male01FRE";
								};
							};
						};
						class Attribute9
						{
							property="ENH_commanding";
							expression="if (_value == 0.5) exitWith {}; [_this, ['commanding', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute10
						{
							property="ENH_unitTrait_UAVHacker";
							expression="[_this, ['UAVHacker', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=1;
								};
							};
						};
						class Attribute11
						{
							property="ENH_unitTraits_loadCoef";
							expression="[_this, ['LoadCoef', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=0.1;
								};
							};
						};
						class Attribute12
						{
							property="ENH_courage";
							expression="if (_value == 0.5) exitWith {}; [_this, ['courage', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute13
						{
							property="pitch";
							expression="_this setpitch _value;";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1.02;
								};
							};
						};
						class Attribute14
						{
							property="ENH_unitTraits_camouflage";
							expression="[_this, ['CamouflageCoef', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=0.40000001;
								};
							};
						};
						class Attribute15
						{
							property="ENH_spotTime";
							expression="if (_value == 0.5) exitWith {}; [_this, ['spotTime', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute16
						{
							property="enh_general";
							expression="if (_value == 0.5) exitWith {}; [_this, ['general', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute17
						{
							property="ENH_unitTrait_explosiveSpecialist";
							expression="[_this, ['ExplosiveSpecialist', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=1;
								};
							};
						};
						class Attribute18
						{
							property="ENH_aimingShake";
							expression="if (_value == 0.5) exitWith {}; [_this, ['aimingShake', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=0.80000001;
								};
							};
						};
						nAttributes=19;
					};
				};
				class Item2
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={6448.1162,56.833145,5209.1152};
						angles[]={0,4.4728251,-0};
					};
					side="West";
					flags=5;
					class Attributes
					{
						skill=1;
						init="this disableAI ""PATH"";";
						stance="Middle";
						class Inventory
						{
							class primaryWeapon
							{
								name="SPE_FM_24_M29";
								class primaryMuzzleMag
								{
									name="SPE_25Rnd_75x54";
									ammoLeft=25;
								};
							};
							class uniform
							{
								typeName="U_SPE_FFI_Casual_6_trop";
								isBackpack=0;
								class ItemCargo
								{
									items=1;
									class Item0
									{
										name="SPE_US_FirstAidKit";
										count=7;
									};
								};
							};
							class vest
							{
								typeName="V_SPE_GER_VestMG";
								isBackpack=0;
								class MagazineCargo
								{
									items=1;
									class Item0
									{
										name="SPE_25Rnd_75x54";
										count=12;
										ammoLeft=25;
									};
								};
							};
							class backpack
							{
								typeName="B_SPE_GER_Belt_bag";
								isBackpack=1;
							};
							map="ItemMap";
							compass="SPE_US_ItemCompass";
							watch="SPE_US_ItemWatch";
							goggles="G_SPE_Ful_Vue_Reinforced";
							headgear="H_SPE_FR_Adrian_ns";
						};
					};
					id=357;
					type="SPE_FFI_Militia";
					class CustomAttributes
					{
						class Attribute0
						{
							property="ENH_spotDistance";
							expression="if (_value == 0.5) exitWith {}; [_this, ['spotDistance', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute1
						{
							property="ENH_reloadingSpeed";
							expression="if (_value == 0.5) exitWith {}; [_this, ['reloadSpeed', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute2
						{
							property="ENH_aimingSpeed";
							expression="if (_value == 0.5) exitWith {}; [_this, ['aimingSpeed', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute3
						{
							property="ENH_unitTraits_engineer";
							expression="[_this, ['Engineer', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=1;
								};
							};
						};
						class Attribute4
						{
							property="ENH_aimingAccuracy";
							expression="if (_value == 0.5) exitWith {}; [_this, ['aimingAccuracy', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=0.69;
								};
							};
						};
						class Attribute5
						{
							property="ENH_unitTraits_audibleCoef";
							expression="[_this, ['AudibleCoef', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=0.40000001;
								};
							};
						};
						class Attribute6
						{
							property="enableStamina";
							expression="_this enablestamina _value;";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=0;
								};
							};
						};
						class Attribute7
						{
							property="ENH_unitTraits_medic";
							expression="[_this, ['Medic', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=1;
								};
							};
						};
						class Attribute8
						{
							property="speaker";
							expression="_this setspeaker _value;";
							class Value
							{
								class data
								{
									singleType="STRING";
									value="Male01FRE";
								};
							};
						};
						class Attribute9
						{
							property="ENH_commanding";
							expression="if (_value == 0.5) exitWith {}; [_this, ['commanding', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute10
						{
							property="ENH_unitTrait_UAVHacker";
							expression="[_this, ['UAVHacker', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=1;
								};
							};
						};
						class Attribute11
						{
							property="ENH_unitTraits_loadCoef";
							expression="[_this, ['LoadCoef', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=0.1;
								};
							};
						};
						class Attribute12
						{
							property="ENH_courage";
							expression="if (_value == 0.5) exitWith {}; [_this, ['courage', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute13
						{
							property="pitch";
							expression="_this setpitch _value;";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1.04;
								};
							};
						};
						class Attribute14
						{
							property="ENH_unitTraits_camouflage";
							expression="[_this, ['CamouflageCoef', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=0.40000001;
								};
							};
						};
						class Attribute15
						{
							property="ENH_spotTime";
							expression="if (_value == 0.5) exitWith {}; [_this, ['spotTime', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute16
						{
							property="enh_general";
							expression="if (_value == 0.5) exitWith {}; [_this, ['general', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute17
						{
							property="ENH_unitTrait_explosiveSpecialist";
							expression="[_this, ['ExplosiveSpecialist', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=1;
								};
							};
						};
						class Attribute18
						{
							property="ENH_aimingShake";
							expression="if (_value == 0.5) exitWith {}; [_this, ['aimingShake', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=0.80000001;
								};
							};
						};
						nAttributes=19;
					};
				};
				class Item3
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={6458.6387,56.120995,5214.543};
						angles[]={0,2.9188759,-0};
					};
					side="West";
					flags=5;
					class Attributes
					{
						skill=1;
						init="this disableAI ""PATH"";";
						stance="Up";
						class Inventory
						{
							class primaryWeapon
							{
								name="SPE_Sten_Mk2";
								class primaryMuzzleMag
								{
									name="SPE_32Rnd_9x19_Sten";
									ammoLeft=32;
								};
							};
							class handgun
							{
								name="vn_p38";
								class primaryMuzzleMag
								{
									name="vn_p38_mag";
									ammoLeft=8;
								};
							};
							class uniform
							{
								typeName="U_SPE_FFI_Casual_6_trop";
								isBackpack=0;
								class ItemCargo
								{
									items=1;
									class Item0
									{
										name="SPE_US_FirstAidKit";
										count=7;
									};
								};
							};
							class vest
							{
								typeName="V_SPE_FFI_Vest_rifle_frag";
								isBackpack=0;
								class MagazineCargo
								{
									items=2;
									class Item0
									{
										name="vn_p38_mag";
										count=6;
										ammoLeft=8;
									};
									class Item1
									{
										name="SPE_32Rnd_9x19_Sten";
										count=8;
										ammoLeft=32;
									};
								};
							};
							class backpack
							{
								typeName="B_SPE_GER_MedicBackpack_Empty";
								isBackpack=1;
								class ItemCargo
								{
									items=2;
									class Item0
									{
										name="SPE_US_Medkit";
										count=1;
									};
									class Item1
									{
										name="SPE_US_FirstAidKit";
										count=3;
									};
								};
							};
							map="ItemMap";
							compass="SPE_US_ItemCompass";
							watch="SPE_US_ItemWatch";
							headgear="H_SPE_FR_Adrian_Medic_ns";
						};
					};
					id=358;
					type="SPE_FFI_Militia";
					class CustomAttributes
					{
						class Attribute0
						{
							property="ENH_spotDistance";
							expression="if (_value == 0.5) exitWith {}; [_this, ['spotDistance', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute1
						{
							property="ENH_reloadingSpeed";
							expression="if (_value == 0.5) exitWith {}; [_this, ['reloadSpeed', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute2
						{
							property="ENH_aimingSpeed";
							expression="if (_value == 0.5) exitWith {}; [_this, ['aimingSpeed', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute3
						{
							property="ENH_unitTraits_engineer";
							expression="[_this, ['Engineer', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=1;
								};
							};
						};
						class Attribute4
						{
							property="ENH_aimingAccuracy";
							expression="if (_value == 0.5) exitWith {}; [_this, ['aimingAccuracy', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=0.69;
								};
							};
						};
						class Attribute5
						{
							property="ENH_unitTraits_audibleCoef";
							expression="[_this, ['AudibleCoef', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=0.40000001;
								};
							};
						};
						class Attribute6
						{
							property="enableStamina";
							expression="_this enablestamina _value;";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=0;
								};
							};
						};
						class Attribute7
						{
							property="ENH_unitTraits_medic";
							expression="[_this, ['Medic', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=1;
								};
							};
						};
						class Attribute8
						{
							property="speaker";
							expression="_this setspeaker _value;";
							class Value
							{
								class data
								{
									singleType="STRING";
									value="Male01FRE";
								};
							};
						};
						class Attribute9
						{
							property="ENH_commanding";
							expression="if (_value == 0.5) exitWith {}; [_this, ['commanding', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute10
						{
							property="ENH_unitTrait_UAVHacker";
							expression="[_this, ['UAVHacker', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=1;
								};
							};
						};
						class Attribute11
						{
							property="ENH_unitTraits_loadCoef";
							expression="[_this, ['LoadCoef', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=0.1;
								};
							};
						};
						class Attribute12
						{
							property="ENH_courage";
							expression="if (_value == 0.5) exitWith {}; [_this, ['courage', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute13
						{
							property="pitch";
							expression="_this setpitch _value;";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1.04;
								};
							};
						};
						class Attribute14
						{
							property="ENH_unitTraits_camouflage";
							expression="[_this, ['CamouflageCoef', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=0.40000001;
								};
							};
						};
						class Attribute15
						{
							property="ENH_spotTime";
							expression="if (_value == 0.5) exitWith {}; [_this, ['spotTime', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute16
						{
							property="enh_general";
							expression="if (_value == 0.5) exitWith {}; [_this, ['general', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute17
						{
							property="ENH_unitTrait_explosiveSpecialist";
							expression="[_this, ['ExplosiveSpecialist', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=1;
								};
							};
						};
						class Attribute18
						{
							property="ENH_aimingShake";
							expression="if (_value == 0.5) exitWith {}; [_this, ['aimingShake', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=0.80000001;
								};
							};
						};
						nAttributes=19;
					};
				};
				class Item4
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={6444.3486,56.153606,5231.707};
						angles[]={6.205832,5.1969624,0.09944886};
					};
					side="West";
					flags=5;
					class Attributes
					{
						skill=1;
						init="this disableAI ""PATH"";";
						stance="Up";
					};
					id=359;
					type="SPE_FFI_Militia_Shotgun";
					class CustomAttributes
					{
						class Attribute0
						{
							property="ENH_spotDistance";
							expression="if (_value == 0.5) exitWith {}; [_this, ['spotDistance', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute1
						{
							property="ENH_reloadingSpeed";
							expression="if (_value == 0.5) exitWith {}; [_this, ['reloadSpeed', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute2
						{
							property="ENH_aimingSpeed";
							expression="if (_value == 0.5) exitWith {}; [_this, ['aimingSpeed', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute3
						{
							property="ENH_unitTraits_engineer";
							expression="[_this, ['Engineer', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=1;
								};
							};
						};
						class Attribute4
						{
							property="ENH_aimingAccuracy";
							expression="if (_value == 0.5) exitWith {}; [_this, ['aimingAccuracy', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=0.69;
								};
							};
						};
						class Attribute5
						{
							property="ENH_unitTraits_audibleCoef";
							expression="[_this, ['AudibleCoef', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=0.40000001;
								};
							};
						};
						class Attribute6
						{
							property="enableStamina";
							expression="_this enablestamina _value;";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=0;
								};
							};
						};
						class Attribute7
						{
							property="ENH_unitTraits_medic";
							expression="[_this, ['Medic', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=1;
								};
							};
						};
						class Attribute8
						{
							property="speaker";
							expression="_this setspeaker _value;";
							class Value
							{
								class data
								{
									singleType="STRING";
									value="Male01FRE";
								};
							};
						};
						class Attribute9
						{
							property="ENH_commanding";
							expression="if (_value == 0.5) exitWith {}; [_this, ['commanding', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute10
						{
							property="ENH_unitTrait_UAVHacker";
							expression="[_this, ['UAVHacker', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=1;
								};
							};
						};
						class Attribute11
						{
							property="ENH_unitTraits_loadCoef";
							expression="[_this, ['LoadCoef', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=0.1;
								};
							};
						};
						class Attribute12
						{
							property="ENH_courage";
							expression="if (_value == 0.5) exitWith {}; [_this, ['courage', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute13
						{
							property="pitch";
							expression="_this setpitch _value;";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1.04;
								};
							};
						};
						class Attribute14
						{
							property="ENH_unitTraits_camouflage";
							expression="[_this, ['CamouflageCoef', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=0.40000001;
								};
							};
						};
						class Attribute15
						{
							property="ENH_spotTime";
							expression="if (_value == 0.5) exitWith {}; [_this, ['spotTime', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute16
						{
							property="enh_general";
							expression="if (_value == 0.5) exitWith {}; [_this, ['general', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute17
						{
							property="ENH_unitTrait_explosiveSpecialist";
							expression="[_this, ['ExplosiveSpecialist', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=1;
								};
							};
						};
						class Attribute18
						{
							property="ENH_aimingShake";
							expression="if (_value == 0.5) exitWith {}; [_this, ['aimingShake', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=0.80000001;
								};
							};
						};
						nAttributes=19;
					};
				};
				class Item5
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={6450.4268,57.598717,5204.4248};
						angles[]={0,4.4974146,-0};
					};
					side="West";
					flags=1;
					class Attributes
					{
						skill=1;
						init="this disableAI ""PATH"";";
						stance="Up";
					};
					id=360;
					type="SPE_FFI_Militia";
					atlOffset=0.59931564;
					class CustomAttributes
					{
						class Attribute0
						{
							property="ENH_spotDistance";
							expression="if (_value == 0.5) exitWith {}; [_this, ['spotDistance', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute1
						{
							property="ENH_reloadingSpeed";
							expression="if (_value == 0.5) exitWith {}; [_this, ['reloadSpeed', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute2
						{
							property="ENH_aimingSpeed";
							expression="if (_value == 0.5) exitWith {}; [_this, ['aimingSpeed', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute3
						{
							property="ENH_unitTraits_engineer";
							expression="[_this, ['Engineer', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=1;
								};
							};
						};
						class Attribute4
						{
							property="ENH_aimingAccuracy";
							expression="if (_value == 0.5) exitWith {}; [_this, ['aimingAccuracy', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=0.69;
								};
							};
						};
						class Attribute5
						{
							property="ENH_unitTraits_audibleCoef";
							expression="[_this, ['AudibleCoef', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=0.40000001;
								};
							};
						};
						class Attribute6
						{
							property="enableStamina";
							expression="_this enablestamina _value;";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=0;
								};
							};
						};
						class Attribute7
						{
							property="ENH_unitTraits_medic";
							expression="[_this, ['Medic', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=1;
								};
							};
						};
						class Attribute8
						{
							property="speaker";
							expression="_this setspeaker _value;";
							class Value
							{
								class data
								{
									singleType="STRING";
									value="Male01FRE";
								};
							};
						};
						class Attribute9
						{
							property="ENH_commanding";
							expression="if (_value == 0.5) exitWith {}; [_this, ['commanding', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute10
						{
							property="ENH_unitTrait_UAVHacker";
							expression="[_this, ['UAVHacker', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=1;
								};
							};
						};
						class Attribute11
						{
							property="ENH_unitTraits_loadCoef";
							expression="[_this, ['LoadCoef', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=0.1;
								};
							};
						};
						class Attribute12
						{
							property="ENH_courage";
							expression="if (_value == 0.5) exitWith {}; [_this, ['courage', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute13
						{
							property="pitch";
							expression="_this setpitch _value;";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=0.95999998;
								};
							};
						};
						class Attribute14
						{
							property="ENH_unitTraits_camouflage";
							expression="[_this, ['CamouflageCoef', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=0.40000001;
								};
							};
						};
						class Attribute15
						{
							property="ENH_spotTime";
							expression="if (_value == 0.5) exitWith {}; [_this, ['spotTime', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute16
						{
							property="enh_general";
							expression="if (_value == 0.5) exitWith {}; [_this, ['general', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute17
						{
							property="ENH_unitTrait_explosiveSpecialist";
							expression="[_this, ['ExplosiveSpecialist', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=1;
								};
							};
						};
						class Attribute18
						{
							property="ENH_aimingShake";
							expression="if (_value == 0.5) exitWith {}; [_this, ['aimingShake', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=0.80000001;
								};
							};
						};
						nAttributes=19;
					};
				};
				class Item6
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={6476.3213,56.118797,5206.5205};
						angles[]={0,2.7701888,-0};
					};
					side="West";
					flags=5;
					class Attributes
					{
						skill=1;
						rank="SERGEANT";
						init="this disableAI ""PATH"";";
						stance="Up";
						class Inventory
						{
							class primaryWeapon
							{
								name="SPE_K98ZF39";
								class primaryMuzzleMag
								{
									name="SPE_5Rnd_792x57";
									ammoLeft=5;
								};
							};
							class uniform
							{
								typeName="U_SPE_FFI_Casual_2_trop";
								isBackpack=0;
								class MagazineCargo
								{
									items=2;
									class Item0
									{
										name="SPE_5Rnd_792x57";
										count=13;
										ammoLeft=5;
									};
									class Item1
									{
										name="SPE_Shg24";
										count=2;
										ammoLeft=1;
									};
								};
								class ItemCargo
								{
									items=1;
									class Item0
									{
										name="SPE_US_FirstAidKit";
										count=1;
									};
								};
							};
							class vest
							{
								typeName="V_SPE_FFI_Vest_rifle_frag";
								isBackpack=0;
								class MagazineCargo
								{
									items=1;
									class Item0
									{
										name="SPE_Shg24_Frag";
										count=2;
										ammoLeft=1;
									};
								};
								class ItemCargo
								{
									items=1;
									class Item0
									{
										name="SPE_US_FirstAidKit";
										count=3;
									};
								};
							};
							class backpack
							{
								typeName="B_SPE_CIV_satchel";
								isBackpack=1;
							};
							map="ItemMap";
							compass="SPE_US_ItemCompass";
							watch="SPE_US_ItemWatch";
							goggles="G_SPE_Cigarette_Strike_Outs";
							headgear="H_SPE_CIV_Fedora_Cap_2";
						};
					};
					id=361;
					type="SPE_FFI_Sniper";
					class CustomAttributes
					{
						class Attribute0
						{
							property="ENH_spotDistance";
							expression="if (_value == 0.5) exitWith {}; [_this, ['spotDistance', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute1
						{
							property="ENH_reloadingSpeed";
							expression="if (_value == 0.5) exitWith {}; [_this, ['reloadSpeed', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute2
						{
							property="ENH_aimingSpeed";
							expression="if (_value == 0.5) exitWith {}; [_this, ['aimingSpeed', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute3
						{
							property="ENH_unitTraits_engineer";
							expression="[_this, ['Engineer', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=1;
								};
							};
						};
						class Attribute4
						{
							property="ENH_aimingAccuracy";
							expression="if (_value == 0.5) exitWith {}; [_this, ['aimingAccuracy', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=0.69;
								};
							};
						};
						class Attribute5
						{
							property="ENH_unitTraits_audibleCoef";
							expression="[_this, ['AudibleCoef', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=0.40000001;
								};
							};
						};
						class Attribute6
						{
							property="enableStamina";
							expression="_this enablestamina _value;";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=0;
								};
							};
						};
						class Attribute7
						{
							property="ENH_unitTraits_medic";
							expression="[_this, ['Medic', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=1;
								};
							};
						};
						class Attribute8
						{
							property="speaker";
							expression="_this setspeaker _value;";
							class Value
							{
								class data
								{
									singleType="STRING";
									value="Male01FRE";
								};
							};
						};
						class Attribute9
						{
							property="ENH_commanding";
							expression="if (_value == 0.5) exitWith {}; [_this, ['commanding', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute10
						{
							property="ENH_unitTrait_UAVHacker";
							expression="[_this, ['UAVHacker', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=1;
								};
							};
						};
						class Attribute11
						{
							property="ENH_unitTraits_loadCoef";
							expression="[_this, ['LoadCoef', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=0.1;
								};
							};
						};
						class Attribute12
						{
							property="ENH_courage";
							expression="if (_value == 0.5) exitWith {}; [_this, ['courage', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute13
						{
							property="pitch";
							expression="_this setpitch _value;";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=0.99000001;
								};
							};
						};
						class Attribute14
						{
							property="ENH_unitTraits_camouflage";
							expression="[_this, ['CamouflageCoef', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=0.40000001;
								};
							};
						};
						class Attribute15
						{
							property="ENH_spotTime";
							expression="if (_value == 0.5) exitWith {}; [_this, ['spotTime', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute16
						{
							property="enh_general";
							expression="if (_value == 0.5) exitWith {}; [_this, ['general', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute17
						{
							property="ENH_unitTrait_explosiveSpecialist";
							expression="[_this, ['ExplosiveSpecialist', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=1;
								};
							};
						};
						class Attribute18
						{
							property="ENH_aimingShake";
							expression="if (_value == 0.5) exitWith {}; [_this, ['aimingShake', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=0.80000001;
								};
							};
						};
						nAttributes=19;
					};
				};
				class Item7
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={6452.9277,57.706318,5196.8828};
						angles[]={0,3.2308431,-0};
					};
					side="West";
					flags=5;
					class Attributes
					{
						skill=1;
						init="this disableAI ""PATH"";";
						stance="Up";
					};
					id=362;
					type="SPE_FFI_Sniper";
					class CustomAttributes
					{
						class Attribute0
						{
							property="ENH_spotDistance";
							expression="if (_value == 0.5) exitWith {}; [_this, ['spotDistance', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute1
						{
							property="ENH_reloadingSpeed";
							expression="if (_value == 0.5) exitWith {}; [_this, ['reloadSpeed', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute2
						{
							property="ENH_aimingSpeed";
							expression="if (_value == 0.5) exitWith {}; [_this, ['aimingSpeed', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute3
						{
							property="ENH_unitTraits_engineer";
							expression="[_this, ['Engineer', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=1;
								};
							};
						};
						class Attribute4
						{
							property="ENH_aimingAccuracy";
							expression="if (_value == 0.5) exitWith {}; [_this, ['aimingAccuracy', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=0.69;
								};
							};
						};
						class Attribute5
						{
							property="ENH_unitTraits_audibleCoef";
							expression="[_this, ['AudibleCoef', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=0.40000001;
								};
							};
						};
						class Attribute6
						{
							property="enableStamina";
							expression="_this enablestamina _value;";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=0;
								};
							};
						};
						class Attribute7
						{
							property="ENH_unitTraits_medic";
							expression="[_this, ['Medic', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=1;
								};
							};
						};
						class Attribute8
						{
							property="speaker";
							expression="_this setspeaker _value;";
							class Value
							{
								class data
								{
									singleType="STRING";
									value="Male01FRE";
								};
							};
						};
						class Attribute9
						{
							property="ENH_commanding";
							expression="if (_value == 0.5) exitWith {}; [_this, ['commanding', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute10
						{
							property="ENH_unitTrait_UAVHacker";
							expression="[_this, ['UAVHacker', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=1;
								};
							};
						};
						class Attribute11
						{
							property="ENH_unitTraits_loadCoef";
							expression="[_this, ['LoadCoef', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=0.1;
								};
							};
						};
						class Attribute12
						{
							property="ENH_courage";
							expression="if (_value == 0.5) exitWith {}; [_this, ['courage', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute13
						{
							property="pitch";
							expression="_this setpitch _value;";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=0.94999999;
								};
							};
						};
						class Attribute14
						{
							property="ENH_unitTraits_camouflage";
							expression="[_this, ['CamouflageCoef', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=0.40000001;
								};
							};
						};
						class Attribute15
						{
							property="ENH_spotTime";
							expression="if (_value == 0.5) exitWith {}; [_this, ['spotTime', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute16
						{
							property="enh_general";
							expression="if (_value == 0.5) exitWith {}; [_this, ['general', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute17
						{
							property="ENH_unitTrait_explosiveSpecialist";
							expression="[_this, ['ExplosiveSpecialist', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=1;
								};
							};
						};
						class Attribute18
						{
							property="ENH_aimingShake";
							expression="if (_value == 0.5) exitWith {}; [_this, ['aimingShake', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=0.80000001;
								};
							};
						};
						nAttributes=19;
					};
				};
				class Item8
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={6471.7236,56.515091,5183.5166};
						angles[]={0,3.7807338,-0};
					};
					side="West";
					flags=5;
					class Attributes
					{
						skill=1;
						rank="SERGEANT";
						stance="Middle";
						class Inventory
						{
							class primaryWeapon
							{
								name="SPE_MP40";
								class primaryMuzzleMag
								{
									name="SPE_32Rnd_9x19";
									ammoLeft=32;
								};
							};
							class uniform
							{
								typeName="U_SPE_FFI_Worker_4";
								isBackpack=0;
								class MagazineCargo
								{
									items=1;
									class Item0
									{
										name="SPE_32Rnd_9x19";
										count=7;
										ammoLeft=32;
									};
								};
								class ItemCargo
								{
									items=1;
									class Item0
									{
										name="SPE_US_FirstAidKit";
										count=1;
									};
								};
							};
							class vest
							{
								typeName="V_SPE_FFI_Vest_SMG_pouch";
								isBackpack=0;
								class MagazineCargo
								{
									items=2;
									class Item0
									{
										name="SPE_32Rnd_9x19";
										count=10;
										ammoLeft=32;
									};
									class Item1
									{
										name="SPE_Shg24";
										count=2;
										ammoLeft=1;
									};
								};
							};
							class backpack
							{
								typeName="B_SPE_FFI_Gasbag";
								isBackpack=1;
								class MagazineCargo
								{
									items=1;
									class Item0
									{
										name="SPE_32Rnd_9x19";
										count=2;
										ammoLeft=32;
									};
								};
								class ItemCargo
								{
									items=1;
									class Item0
									{
										name="SPE_US_FirstAidKit";
										count=3;
									};
								};
							};
							map="ItemMap";
							compass="SPE_US_ItemCompass";
							watch="SPE_US_ItemWatch";
							goggles="G_SPE_Cigarette_Strike_Outs";
							headgear="H_SPE_CIV_Worker_Cap_1";
						};
					};
					id=363;
					type="SPE_FFI_Fighter_MP40";
					class CustomAttributes
					{
						class Attribute0
						{
							property="ENH_spotDistance";
							expression="if (_value == 0.5) exitWith {}; [_this, ['spotDistance', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute1
						{
							property="ENH_reloadingSpeed";
							expression="if (_value == 0.5) exitWith {}; [_this, ['reloadSpeed', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute2
						{
							property="ENH_aimingSpeed";
							expression="if (_value == 0.5) exitWith {}; [_this, ['aimingSpeed', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute3
						{
							property="ENH_unitTraits_engineer";
							expression="[_this, ['Engineer', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=1;
								};
							};
						};
						class Attribute4
						{
							property="ENH_aimingAccuracy";
							expression="if (_value == 0.5) exitWith {}; [_this, ['aimingAccuracy', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=0.69;
								};
							};
						};
						class Attribute5
						{
							property="ENH_unitTraits_audibleCoef";
							expression="[_this, ['AudibleCoef', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=0.40000001;
								};
							};
						};
						class Attribute6
						{
							property="enableStamina";
							expression="_this enablestamina _value;";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=0;
								};
							};
						};
						class Attribute7
						{
							property="ENH_unitTraits_medic";
							expression="[_this, ['Medic', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=1;
								};
							};
						};
						class Attribute8
						{
							property="speaker";
							expression="_this setspeaker _value;";
							class Value
							{
								class data
								{
									singleType="STRING";
									value="Male01FRE";
								};
							};
						};
						class Attribute9
						{
							property="ENH_commanding";
							expression="if (_value == 0.5) exitWith {}; [_this, ['commanding', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute10
						{
							property="ENH_unitTrait_UAVHacker";
							expression="[_this, ['UAVHacker', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=1;
								};
							};
						};
						class Attribute11
						{
							property="ENH_unitTraits_loadCoef";
							expression="[_this, ['LoadCoef', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=0.1;
								};
							};
						};
						class Attribute12
						{
							property="ENH_courage";
							expression="if (_value == 0.5) exitWith {}; [_this, ['courage', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute13
						{
							property="ENH_unitTraits_camouflage";
							expression="[_this, ['CamouflageCoef', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=0.40000001;
								};
							};
						};
						class Attribute14
						{
							property="ENH_spotTime";
							expression="if (_value == 0.5) exitWith {}; [_this, ['spotTime', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute15
						{
							property="enh_general";
							expression="if (_value == 0.5) exitWith {}; [_this, ['general', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute16
						{
							property="ENH_unitTrait_explosiveSpecialist";
							expression="[_this, ['ExplosiveSpecialist', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=1;
								};
							};
						};
						class Attribute17
						{
							property="ENH_aimingShake";
							expression="if (_value == 0.5) exitWith {}; [_this, ['aimingShake', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=0.80000001;
								};
							};
						};
						nAttributes=18;
					};
				};
				class Item9
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={6468.3838,56.12764,5205.8057};
						angles[]={0,1.6503129,-0};
					};
					side="West";
					flags=5;
					class Attributes
					{
						skill=1;
						init="this disableAI ""PATH"";";
						stance="Middle";
						class Inventory
						{
							class primaryWeapon
							{
								name="SPE_MG34";
								class primaryMuzzleMag
								{
									name="SPE_50Rnd_792x57";
									ammoLeft=50;
								};
							};
							class uniform
							{
								typeName="U_SPE_FFI_Casual_2";
								isBackpack=0;
								class MagazineCargo
								{
									items=2;
									class Item0
									{
										name="SPE_Shg24";
										count=2;
										ammoLeft=1;
									};
									class Item1
									{
										name="SPE_50Rnd_792x57";
										count=1;
										ammoLeft=50;
									};
								};
								class ItemCargo
								{
									items=1;
									class Item0
									{
										name="SPE_US_FirstAidKit";
										count=1;
									};
								};
							};
							class vest
							{
								typeName="V_SPE_GER_VestMG";
								isBackpack=0;
								class MagazineCargo
								{
									items=1;
									class Item0
									{
										name="SPE_50Rnd_792x57";
										count=6;
										ammoLeft=50;
									};
								};
							};
							class backpack
							{
								typeName="B_SPE_GER_Tonister34_canvas";
								isBackpack=1;
								class MagazineCargo
								{
									items=1;
									class Item0
									{
										name="SPE_50Rnd_792x57";
										count=6;
										ammoLeft=50;
									};
								};
							};
							map="ItemMap";
							compass="SPE_US_ItemCompass";
							watch="SPE_US_ItemWatch";
							goggles="G_SPE_Cigarette_Grundstein";
							headgear="H_SPE_CIV_Worker_Cap_1";
						};
					};
					id=364;
					type="SPE_FFI_Fighter";
					class CustomAttributes
					{
						class Attribute0
						{
							property="ENH_spotDistance";
							expression="if (_value == 0.5) exitWith {}; [_this, ['spotDistance', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute1
						{
							property="ENH_reloadingSpeed";
							expression="if (_value == 0.5) exitWith {}; [_this, ['reloadSpeed', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute2
						{
							property="ENH_aimingSpeed";
							expression="if (_value == 0.5) exitWith {}; [_this, ['aimingSpeed', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute3
						{
							property="ENH_unitTraits_engineer";
							expression="[_this, ['Engineer', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=1;
								};
							};
						};
						class Attribute4
						{
							property="ENH_aimingAccuracy";
							expression="if (_value == 0.5) exitWith {}; [_this, ['aimingAccuracy', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=0.69;
								};
							};
						};
						class Attribute5
						{
							property="ENH_unitTraits_audibleCoef";
							expression="[_this, ['AudibleCoef', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=0.40000001;
								};
							};
						};
						class Attribute6
						{
							property="enableStamina";
							expression="_this enablestamina _value;";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=0;
								};
							};
						};
						class Attribute7
						{
							property="ENH_unitTraits_medic";
							expression="[_this, ['Medic', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=1;
								};
							};
						};
						class Attribute8
						{
							property="speaker";
							expression="_this setspeaker _value;";
							class Value
							{
								class data
								{
									singleType="STRING";
									value="Male01FRE";
								};
							};
						};
						class Attribute9
						{
							property="ENH_commanding";
							expression="if (_value == 0.5) exitWith {}; [_this, ['commanding', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute10
						{
							property="ENH_unitTrait_UAVHacker";
							expression="[_this, ['UAVHacker', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=1;
								};
							};
						};
						class Attribute11
						{
							property="ENH_unitTraits_loadCoef";
							expression="[_this, ['LoadCoef', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=0.1;
								};
							};
						};
						class Attribute12
						{
							property="ENH_courage";
							expression="if (_value == 0.5) exitWith {}; [_this, ['courage', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute13
						{
							property="ENH_unitTraits_camouflage";
							expression="[_this, ['CamouflageCoef', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=0.40000001;
								};
							};
						};
						class Attribute14
						{
							property="ENH_spotTime";
							expression="if (_value == 0.5) exitWith {}; [_this, ['spotTime', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute15
						{
							property="enh_general";
							expression="if (_value == 0.5) exitWith {}; [_this, ['general', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute16
						{
							property="ENH_unitTrait_explosiveSpecialist";
							expression="[_this, ['ExplosiveSpecialist', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=1;
								};
							};
						};
						class Attribute17
						{
							property="ENH_aimingShake";
							expression="if (_value == 0.5) exitWith {}; [_this, ['aimingShake', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=0.80000001;
								};
							};
						};
						nAttributes=18;
					};
				};
			};
			class Attributes
			{
				speedMode="LIMITED";
			};
			id=354;
		};
		class Item121
		{
			dataType="Object";
			class PositionInfo
			{
				position[]={6461.9531,60.086853,5214.0332};
			};
			side="Empty";
			flags=5;
			class Attributes
			{
			};
			id=365;
			type="SPE_FlagCarrier_FFF";
		};
		class Item122
		{
			dataType="Marker";
			position[]={5346.7632,59.57235,11250.807};
			name="supply_officer_initial_3";
			text="Supply Officer";
			type="Empty";
			angle=210.87965;
			id=366;
			atlOffset=12.684921;
		};
		class Item123
		{
			dataType="Marker";
			position[]={5334.2129,59.758701,11265.441};
			name="supply_drop_initial_3";
			text="Initial Supply Drop 3";
			type="Empty";
			colorName="ColorOrange";
			angle=141.34198;
			id=367;
			atlOffset=12.473621;
		};
		class Item124
		{
			dataType="Object";
			class PositionInfo
			{
				position[]={5334.1646,47.28643,11265.412};
				angles[]={6.2798557,2.2174153,6.2531958};
			};
			side="Empty";
			flags=4;
			class Attributes
			{
			};
			id=368;
			type="Land_JumpTarget_F";
		};
		class Item125
		{
			dataType="Marker";
			position[]={5344.2583,46.625549,11290.076};
			name="marker_1";
			text="French Resistance Supply Stash";
			type="SPE_n_Icon_Flag_FFI";
			id=369;
		};
		class Item126
		{
			dataType="Group";
			side="West";
			class Entities
			{
				items=10;
				class Item0
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={5341.8203,47.724888,11254.952};
						angles[]={0,5.1968832,-0};
					};
					side="West";
					flags=1;
					class Attributes
					{
						skill=1;
						rank="CORPORAL";
						init="this disableAI ""PATH"";";
						stance="Up";
						class Inventory
						{
							class primaryWeapon
							{
								name="vn_m36";
								class primaryMuzzleMag
								{
									name="vn_m36_mag";
									ammoLeft=5;
								};
							};
							class binocular
							{
								name="SPE_Binocular_GER";
							};
							class uniform
							{
								typeName="U_SPE_CIV_pak2_zwart_swetr";
								isBackpack=0;
								class MagazineCargo
								{
									items=1;
									class Item0
									{
										name="vn_m36_mag";
										count=1;
										ammoLeft=5;
									};
								};
								class ItemCargo
								{
									items=1;
									class Item0
									{
										name="SPE_US_FirstAidKit";
										count=3;
									};
								};
							};
							class vest
							{
								typeName="V_SPE_FFI_Vest_rifle_pouch";
								isBackpack=0;
								class MagazineCargo
								{
									items=5;
									class Item0
									{
										name="SPE_M39";
										count=2;
										ammoLeft=1;
									};
									class Item1
									{
										name="SPE_US_M18";
										count=2;
										ammoLeft=1;
									};
									class Item2
									{
										name="SPE_US_M18_Violet";
										count=1;
										ammoLeft=1;
									};
									class Item3
									{
										name="SPE_US_M18_Red";
										count=1;
										ammoLeft=1;
									};
									class Item4
									{
										name="vn_m36_mag";
										count=7;
										ammoLeft=5;
									};
								};
							};
							class backpack
							{
								typeName="B_SPE_CIV_musette";
								isBackpack=1;
								class MagazineCargo
								{
									items=1;
									class Item0
									{
										name="vn_m36_mag";
										count=3;
										ammoLeft=5;
									};
								};
							};
							map="ItemMap";
							compass="SPE_US_ItemCompass";
							watch="SPE_US_ItemWatch";
							goggles="G_SPE_Ful_Vue";
							headgear="H_SPE_CIV_Worker_Cap_3";
						};
					};
					id=371;
					type="SPE_FFI_TeamLeader";
					atlOffset=0.6741333;
					class CustomAttributes
					{
						class Attribute0
						{
							property="ENH_spotDistance";
							expression="if (_value == 0.5) exitWith {}; [_this, ['spotDistance', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute1
						{
							property="ENH_reloadingSpeed";
							expression="if (_value == 0.5) exitWith {}; [_this, ['reloadSpeed', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute2
						{
							property="ENH_aimingSpeed";
							expression="if (_value == 0.5) exitWith {}; [_this, ['aimingSpeed', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute3
						{
							property="ENH_unitTraits_engineer";
							expression="[_this, ['Engineer', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=1;
								};
							};
						};
						class Attribute4
						{
							property="ENH_aimingAccuracy";
							expression="if (_value == 0.5) exitWith {}; [_this, ['aimingAccuracy', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=0.69;
								};
							};
						};
						class Attribute5
						{
							property="ENH_unitTraits_audibleCoef";
							expression="[_this, ['AudibleCoef', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=0.40000001;
								};
							};
						};
						class Attribute6
						{
							property="enableStamina";
							expression="_this enablestamina _value;";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=0;
								};
							};
						};
						class Attribute7
						{
							property="ENH_unitTraits_medic";
							expression="[_this, ['Medic', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=1;
								};
							};
						};
						class Attribute8
						{
							property="speaker";
							expression="_this setspeaker _value;";
							class Value
							{
								class data
								{
									singleType="STRING";
									value="Male01FRE";
								};
							};
						};
						class Attribute9
						{
							property="ENH_commanding";
							expression="if (_value == 0.5) exitWith {}; [_this, ['commanding', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute10
						{
							property="ENH_unitTrait_UAVHacker";
							expression="[_this, ['UAVHacker', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=1;
								};
							};
						};
						class Attribute11
						{
							property="ENH_unitTraits_loadCoef";
							expression="[_this, ['LoadCoef', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=0.1;
								};
							};
						};
						class Attribute12
						{
							property="ENH_courage";
							expression="if (_value == 0.5) exitWith {}; [_this, ['courage', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute13
						{
							property="pitch";
							expression="_this setpitch _value;";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute14
						{
							property="ENH_unitTraits_camouflage";
							expression="[_this, ['CamouflageCoef', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=0.40000001;
								};
							};
						};
						class Attribute15
						{
							property="ENH_spotTime";
							expression="if (_value == 0.5) exitWith {}; [_this, ['spotTime', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute16
						{
							property="enh_general";
							expression="if (_value == 0.5) exitWith {}; [_this, ['general', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute17
						{
							property="ENH_unitTrait_explosiveSpecialist";
							expression="[_this, ['ExplosiveSpecialist', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=1;
								};
							};
						};
						class Attribute18
						{
							property="ENH_aimingShake";
							expression="if (_value == 0.5) exitWith {}; [_this, ['aimingShake', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=0.80000001;
								};
							};
						};
						nAttributes=19;
					};
				};
				class Item1
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={5348.1279,46.879093,11246.501};
						angles[]={0,3.7659512,-0};
					};
					side="West";
					flags=7;
					class Attributes
					{
						skill=1;
						init="this disableAI ""PATH"";";
						stance="Up";
						class Inventory
						{
							class primaryWeapon
							{
								name="SPE_M1_Carbine";
								class primaryMuzzleMag
								{
									name="SPE_15Rnd_762x33";
									ammoLeft=15;
								};
							};
							class uniform
							{
								typeName="U_SPE_FFI_Jacket_bruin";
								isBackpack=0;
								class ItemCargo
								{
									items=1;
									class Item0
									{
										name="SPE_US_FirstAidKit";
										count=7;
									};
								};
							};
							class vest
							{
								typeName="V_SPE_US_Vest_Carbine";
								isBackpack=0;
								class MagazineCargo
								{
									items=2;
									class Item0
									{
										name="SPE_15Rnd_762x33";
										count=20;
										ammoLeft=15;
									};
									class Item1
									{
										name="vn_f1_grenade_mag";
										count=3;
										ammoLeft=1;
									};
								};
							};
							class backpack
							{
								typeName="B_SPE_GER_Radio";
								isBackpack=1;
							};
							map="ItemMap";
							compass="SPE_US_ItemCompass";
							watch="SPE_US_ItemWatch";
							goggles="G_SPE_Pipe_Sir_Winston";
							hmd="SPE_GER_Headset";
							headgear="H_SPE_CIV_Worker_Cap_1";
						};
					};
					id=372;
					type="SPE_FFI_Militia";
					class CustomAttributes
					{
						class Attribute0
						{
							property="ENH_spotDistance";
							expression="if (_value == 0.5) exitWith {}; [_this, ['spotDistance', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute1
						{
							property="ENH_reloadingSpeed";
							expression="if (_value == 0.5) exitWith {}; [_this, ['reloadSpeed', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute2
						{
							property="ENH_aimingSpeed";
							expression="if (_value == 0.5) exitWith {}; [_this, ['aimingSpeed', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute3
						{
							property="ENH_unitTraits_engineer";
							expression="[_this, ['Engineer', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=1;
								};
							};
						};
						class Attribute4
						{
							property="ENH_aimingAccuracy";
							expression="if (_value == 0.5) exitWith {}; [_this, ['aimingAccuracy', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=0.69;
								};
							};
						};
						class Attribute5
						{
							property="ENH_unitTraits_audibleCoef";
							expression="[_this, ['AudibleCoef', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=0.40000001;
								};
							};
						};
						class Attribute6
						{
							property="enableStamina";
							expression="_this enablestamina _value;";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=0;
								};
							};
						};
						class Attribute7
						{
							property="ENH_unitTraits_medic";
							expression="[_this, ['Medic', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=1;
								};
							};
						};
						class Attribute8
						{
							property="speaker";
							expression="_this setspeaker _value;";
							class Value
							{
								class data
								{
									singleType="STRING";
									value="Male01FRE";
								};
							};
						};
						class Attribute9
						{
							property="ENH_commanding";
							expression="if (_value == 0.5) exitWith {}; [_this, ['commanding', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute10
						{
							property="ENH_unitTrait_UAVHacker";
							expression="[_this, ['UAVHacker', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=1;
								};
							};
						};
						class Attribute11
						{
							property="ENH_unitTraits_loadCoef";
							expression="[_this, ['LoadCoef', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=0.1;
								};
							};
						};
						class Attribute12
						{
							property="ENH_courage";
							expression="if (_value == 0.5) exitWith {}; [_this, ['courage', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute13
						{
							property="pitch";
							expression="_this setpitch _value;";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1.02;
								};
							};
						};
						class Attribute14
						{
							property="ENH_unitTraits_camouflage";
							expression="[_this, ['CamouflageCoef', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=0.40000001;
								};
							};
						};
						class Attribute15
						{
							property="ENH_spotTime";
							expression="if (_value == 0.5) exitWith {}; [_this, ['spotTime', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute16
						{
							property="enh_general";
							expression="if (_value == 0.5) exitWith {}; [_this, ['general', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute17
						{
							property="ENH_unitTrait_explosiveSpecialist";
							expression="[_this, ['ExplosiveSpecialist', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=1;
								};
							};
						};
						class Attribute18
						{
							property="ENH_aimingShake";
							expression="if (_value == 0.5) exitWith {}; [_this, ['aimingShake', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=0.80000001;
								};
							};
						};
						nAttributes=19;
					};
				};
				class Item2
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={5336.3467,47.278847,11250.704};
						angles[]={0,5.127274,-0};
					};
					side="West";
					flags=5;
					class Attributes
					{
						skill=1;
						init="this disableAI ""PATH"";";
						stance="Middle";
						class Inventory
						{
							class primaryWeapon
							{
								name="SPE_FM_24_M29";
								class primaryMuzzleMag
								{
									name="SPE_25Rnd_75x54";
									ammoLeft=25;
								};
							};
							class uniform
							{
								typeName="U_SPE_FFI_Casual_6_trop";
								isBackpack=0;
								class ItemCargo
								{
									items=1;
									class Item0
									{
										name="SPE_US_FirstAidKit";
										count=7;
									};
								};
							};
							class vest
							{
								typeName="V_SPE_GER_VestMG";
								isBackpack=0;
								class MagazineCargo
								{
									items=1;
									class Item0
									{
										name="SPE_25Rnd_75x54";
										count=12;
										ammoLeft=25;
									};
								};
							};
							class backpack
							{
								typeName="B_SPE_GER_Belt_bag";
								isBackpack=1;
							};
							map="ItemMap";
							compass="SPE_US_ItemCompass";
							watch="SPE_US_ItemWatch";
							goggles="G_SPE_Ful_Vue_Reinforced";
							headgear="H_SPE_FR_Adrian_ns";
						};
					};
					id=373;
					type="SPE_FFI_Militia";
					class CustomAttributes
					{
						class Attribute0
						{
							property="ENH_spotDistance";
							expression="if (_value == 0.5) exitWith {}; [_this, ['spotDistance', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute1
						{
							property="ENH_reloadingSpeed";
							expression="if (_value == 0.5) exitWith {}; [_this, ['reloadSpeed', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute2
						{
							property="ENH_aimingSpeed";
							expression="if (_value == 0.5) exitWith {}; [_this, ['aimingSpeed', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute3
						{
							property="ENH_unitTraits_engineer";
							expression="[_this, ['Engineer', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=1;
								};
							};
						};
						class Attribute4
						{
							property="ENH_aimingAccuracy";
							expression="if (_value == 0.5) exitWith {}; [_this, ['aimingAccuracy', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=0.69;
								};
							};
						};
						class Attribute5
						{
							property="ENH_unitTraits_audibleCoef";
							expression="[_this, ['AudibleCoef', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=0.40000001;
								};
							};
						};
						class Attribute6
						{
							property="enableStamina";
							expression="_this enablestamina _value;";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=0;
								};
							};
						};
						class Attribute7
						{
							property="ENH_unitTraits_medic";
							expression="[_this, ['Medic', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=1;
								};
							};
						};
						class Attribute8
						{
							property="speaker";
							expression="_this setspeaker _value;";
							class Value
							{
								class data
								{
									singleType="STRING";
									value="Male01FRE";
								};
							};
						};
						class Attribute9
						{
							property="ENH_commanding";
							expression="if (_value == 0.5) exitWith {}; [_this, ['commanding', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute10
						{
							property="ENH_unitTrait_UAVHacker";
							expression="[_this, ['UAVHacker', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=1;
								};
							};
						};
						class Attribute11
						{
							property="ENH_unitTraits_loadCoef";
							expression="[_this, ['LoadCoef', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=0.1;
								};
							};
						};
						class Attribute12
						{
							property="ENH_courage";
							expression="if (_value == 0.5) exitWith {}; [_this, ['courage', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute13
						{
							property="ENH_unitTraits_camouflage";
							expression="[_this, ['CamouflageCoef', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=0.40000001;
								};
							};
						};
						class Attribute14
						{
							property="ENH_spotTime";
							expression="if (_value == 0.5) exitWith {}; [_this, ['spotTime', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute15
						{
							property="enh_general";
							expression="if (_value == 0.5) exitWith {}; [_this, ['general', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute16
						{
							property="ENH_unitTrait_explosiveSpecialist";
							expression="[_this, ['ExplosiveSpecialist', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=1;
								};
							};
						};
						class Attribute17
						{
							property="ENH_aimingShake";
							expression="if (_value == 0.5) exitWith {}; [_this, ['aimingShake', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=0.80000001;
								};
							};
						};
						nAttributes=18;
					};
				};
				class Item3
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={5365.9844,46.884769,11232.394};
						angles[]={0,2.2804921,-0};
					};
					side="West";
					flags=5;
					class Attributes
					{
						skill=1;
						init="this disableAI ""PATH"";";
						stance="Middle";
						class Inventory
						{
							class primaryWeapon
							{
								name="SPE_Sten_Mk2";
								class primaryMuzzleMag
								{
									name="SPE_32Rnd_9x19_Sten";
									ammoLeft=32;
								};
							};
							class handgun
							{
								name="vn_p38";
								class primaryMuzzleMag
								{
									name="vn_p38_mag";
									ammoLeft=8;
								};
							};
							class uniform
							{
								typeName="U_SPE_FFI_Casual_6_trop";
								isBackpack=0;
								class ItemCargo
								{
									items=1;
									class Item0
									{
										name="SPE_US_FirstAidKit";
										count=7;
									};
								};
							};
							class vest
							{
								typeName="V_SPE_FFI_Vest_rifle_frag";
								isBackpack=0;
								class MagazineCargo
								{
									items=2;
									class Item0
									{
										name="vn_p38_mag";
										count=6;
										ammoLeft=8;
									};
									class Item1
									{
										name="SPE_32Rnd_9x19_Sten";
										count=8;
										ammoLeft=32;
									};
								};
							};
							class backpack
							{
								typeName="B_SPE_GER_MedicBackpack_Empty";
								isBackpack=1;
								class ItemCargo
								{
									items=2;
									class Item0
									{
										name="SPE_US_Medkit";
										count=1;
									};
									class Item1
									{
										name="SPE_US_FirstAidKit";
										count=3;
									};
								};
							};
							map="ItemMap";
							compass="SPE_US_ItemCompass";
							watch="SPE_US_ItemWatch";
							headgear="H_SPE_FR_Adrian_Medic_ns";
						};
					};
					id=374;
					type="SPE_FFI_Militia";
					class CustomAttributes
					{
						class Attribute0
						{
							property="ENH_spotDistance";
							expression="if (_value == 0.5) exitWith {}; [_this, ['spotDistance', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute1
						{
							property="ENH_reloadingSpeed";
							expression="if (_value == 0.5) exitWith {}; [_this, ['reloadSpeed', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute2
						{
							property="ENH_aimingSpeed";
							expression="if (_value == 0.5) exitWith {}; [_this, ['aimingSpeed', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute3
						{
							property="ENH_unitTraits_engineer";
							expression="[_this, ['Engineer', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=1;
								};
							};
						};
						class Attribute4
						{
							property="ENH_aimingAccuracy";
							expression="if (_value == 0.5) exitWith {}; [_this, ['aimingAccuracy', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=0.69;
								};
							};
						};
						class Attribute5
						{
							property="ENH_unitTraits_audibleCoef";
							expression="[_this, ['AudibleCoef', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=0.40000001;
								};
							};
						};
						class Attribute6
						{
							property="enableStamina";
							expression="_this enablestamina _value;";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=0;
								};
							};
						};
						class Attribute7
						{
							property="ENH_unitTraits_medic";
							expression="[_this, ['Medic', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=1;
								};
							};
						};
						class Attribute8
						{
							property="speaker";
							expression="_this setspeaker _value;";
							class Value
							{
								class data
								{
									singleType="STRING";
									value="Male01FRE";
								};
							};
						};
						class Attribute9
						{
							property="ENH_commanding";
							expression="if (_value == 0.5) exitWith {}; [_this, ['commanding', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute10
						{
							property="ENH_unitTrait_UAVHacker";
							expression="[_this, ['UAVHacker', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=1;
								};
							};
						};
						class Attribute11
						{
							property="ENH_unitTraits_loadCoef";
							expression="[_this, ['LoadCoef', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=0.1;
								};
							};
						};
						class Attribute12
						{
							property="ENH_courage";
							expression="if (_value == 0.5) exitWith {}; [_this, ['courage', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute13
						{
							property="ENH_unitTraits_camouflage";
							expression="[_this, ['CamouflageCoef', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=0.40000001;
								};
							};
						};
						class Attribute14
						{
							property="ENH_spotTime";
							expression="if (_value == 0.5) exitWith {}; [_this, ['spotTime', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute15
						{
							property="enh_general";
							expression="if (_value == 0.5) exitWith {}; [_this, ['general', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute16
						{
							property="ENH_unitTrait_explosiveSpecialist";
							expression="[_this, ['ExplosiveSpecialist', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=1;
								};
							};
						};
						class Attribute17
						{
							property="ENH_aimingShake";
							expression="if (_value == 0.5) exitWith {}; [_this, ['aimingShake', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=0.80000001;
								};
							};
						};
						nAttributes=18;
					};
				};
				class Item4
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={6418.6104,58.44994,9289.3408};
						angles[]={0.019999012,4.610549,6.2465348};
					};
					side="West";
					flags=5;
					class Attributes
					{
						skill=1;
						init="this disableAI ""PATH"";";
						stance="Middle";
					};
					id=375;
					type="SPE_FFI_Militia_Shotgun";
					class CustomAttributes
					{
						class Attribute0
						{
							property="ENH_spotDistance";
							expression="if (_value == 0.5) exitWith {}; [_this, ['spotDistance', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute1
						{
							property="ENH_reloadingSpeed";
							expression="if (_value == 0.5) exitWith {}; [_this, ['reloadSpeed', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute2
						{
							property="ENH_aimingSpeed";
							expression="if (_value == 0.5) exitWith {}; [_this, ['aimingSpeed', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute3
						{
							property="ENH_unitTraits_engineer";
							expression="[_this, ['Engineer', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=1;
								};
							};
						};
						class Attribute4
						{
							property="ENH_aimingAccuracy";
							expression="if (_value == 0.5) exitWith {}; [_this, ['aimingAccuracy', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=0.69;
								};
							};
						};
						class Attribute5
						{
							property="ENH_unitTraits_audibleCoef";
							expression="[_this, ['AudibleCoef', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=0.40000001;
								};
							};
						};
						class Attribute6
						{
							property="enableStamina";
							expression="_this enablestamina _value;";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=0;
								};
							};
						};
						class Attribute7
						{
							property="ENH_unitTraits_medic";
							expression="[_this, ['Medic', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=1;
								};
							};
						};
						class Attribute8
						{
							property="speaker";
							expression="_this setspeaker _value;";
							class Value
							{
								class data
								{
									singleType="STRING";
									value="Male01FRE";
								};
							};
						};
						class Attribute9
						{
							property="ENH_commanding";
							expression="if (_value == 0.5) exitWith {}; [_this, ['commanding', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute10
						{
							property="ENH_unitTrait_UAVHacker";
							expression="[_this, ['UAVHacker', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=1;
								};
							};
						};
						class Attribute11
						{
							property="ENH_unitTraits_loadCoef";
							expression="[_this, ['LoadCoef', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=0.1;
								};
							};
						};
						class Attribute12
						{
							property="ENH_courage";
							expression="if (_value == 0.5) exitWith {}; [_this, ['courage', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute13
						{
							property="ENH_unitTraits_camouflage";
							expression="[_this, ['CamouflageCoef', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=0.40000001;
								};
							};
						};
						class Attribute14
						{
							property="ENH_spotTime";
							expression="if (_value == 0.5) exitWith {}; [_this, ['spotTime', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute15
						{
							property="enh_general";
							expression="if (_value == 0.5) exitWith {}; [_this, ['general', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute16
						{
							property="ENH_unitTrait_explosiveSpecialist";
							expression="[_this, ['ExplosiveSpecialist', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=1;
								};
							};
						};
						class Attribute17
						{
							property="ENH_aimingShake";
							expression="if (_value == 0.5) exitWith {}; [_this, ['aimingShake', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=0.80000001;
								};
							};
						};
						nAttributes=18;
					};
				};
				class Item5
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={5339.6836,47.369198,11236.827};
						angles[]={0,3.5476263,0};
					};
					side="West";
					flags=5;
					class Attributes
					{
						skill=1;
						init="this disableAI ""PATH"";";
						stance="Up";
					};
					id=376;
					type="SPE_FFI_Militia";
					atlOffset=3.8146973e-006;
					class CustomAttributes
					{
						class Attribute0
						{
							property="ENH_spotDistance";
							expression="if (_value == 0.5) exitWith {}; [_this, ['spotDistance', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute1
						{
							property="ENH_reloadingSpeed";
							expression="if (_value == 0.5) exitWith {}; [_this, ['reloadSpeed', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute2
						{
							property="ENH_aimingSpeed";
							expression="if (_value == 0.5) exitWith {}; [_this, ['aimingSpeed', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute3
						{
							property="ENH_unitTraits_engineer";
							expression="[_this, ['Engineer', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=1;
								};
							};
						};
						class Attribute4
						{
							property="ENH_aimingAccuracy";
							expression="if (_value == 0.5) exitWith {}; [_this, ['aimingAccuracy', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=0.69;
								};
							};
						};
						class Attribute5
						{
							property="ENH_unitTraits_audibleCoef";
							expression="[_this, ['AudibleCoef', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=0.40000001;
								};
							};
						};
						class Attribute6
						{
							property="enableStamina";
							expression="_this enablestamina _value;";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=0;
								};
							};
						};
						class Attribute7
						{
							property="ENH_unitTraits_medic";
							expression="[_this, ['Medic', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=1;
								};
							};
						};
						class Attribute8
						{
							property="speaker";
							expression="_this setspeaker _value;";
							class Value
							{
								class data
								{
									singleType="STRING";
									value="Male01FRE";
								};
							};
						};
						class Attribute9
						{
							property="ENH_commanding";
							expression="if (_value == 0.5) exitWith {}; [_this, ['commanding', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute10
						{
							property="ENH_unitTrait_UAVHacker";
							expression="[_this, ['UAVHacker', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=1;
								};
							};
						};
						class Attribute11
						{
							property="ENH_unitTraits_loadCoef";
							expression="[_this, ['LoadCoef', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=0.1;
								};
							};
						};
						class Attribute12
						{
							property="ENH_courage";
							expression="if (_value == 0.5) exitWith {}; [_this, ['courage', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute13
						{
							property="pitch";
							expression="_this setpitch _value;";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=0.95999998;
								};
							};
						};
						class Attribute14
						{
							property="ENH_unitTraits_camouflage";
							expression="[_this, ['CamouflageCoef', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=0.40000001;
								};
							};
						};
						class Attribute15
						{
							property="ENH_spotTime";
							expression="if (_value == 0.5) exitWith {}; [_this, ['spotTime', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute16
						{
							property="enh_general";
							expression="if (_value == 0.5) exitWith {}; [_this, ['general', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute17
						{
							property="ENH_unitTrait_explosiveSpecialist";
							expression="[_this, ['ExplosiveSpecialist', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=1;
								};
							};
						};
						class Attribute18
						{
							property="ENH_aimingShake";
							expression="if (_value == 0.5) exitWith {}; [_this, ['aimingShake', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=0.80000001;
								};
							};
						};
						nAttributes=19;
					};
				};
				class Item6
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={5383.9873,46.841438,11255.821};
						angles[]={0,2.146606,-0};
					};
					side="West";
					flags=5;
					class Attributes
					{
						skill=1;
						rank="SERGEANT";
						init="this disableAI ""PATH"";";
						stance="Middle";
						class Inventory
						{
							class primaryWeapon
							{
								name="SPE_K98ZF39";
								class primaryMuzzleMag
								{
									name="SPE_5Rnd_792x57";
									ammoLeft=5;
								};
							};
							class uniform
							{
								typeName="U_SPE_FFI_Casual_2_trop";
								isBackpack=0;
								class MagazineCargo
								{
									items=2;
									class Item0
									{
										name="SPE_5Rnd_792x57";
										count=13;
										ammoLeft=5;
									};
									class Item1
									{
										name="SPE_Shg24";
										count=2;
										ammoLeft=1;
									};
								};
								class ItemCargo
								{
									items=1;
									class Item0
									{
										name="SPE_US_FirstAidKit";
										count=1;
									};
								};
							};
							class vest
							{
								typeName="V_SPE_FFI_Vest_rifle_frag";
								isBackpack=0;
								class MagazineCargo
								{
									items=1;
									class Item0
									{
										name="SPE_Shg24_Frag";
										count=2;
										ammoLeft=1;
									};
								};
								class ItemCargo
								{
									items=1;
									class Item0
									{
										name="SPE_US_FirstAidKit";
										count=3;
									};
								};
							};
							class backpack
							{
								typeName="B_SPE_CIV_satchel";
								isBackpack=1;
							};
							map="ItemMap";
							compass="SPE_US_ItemCompass";
							watch="SPE_US_ItemWatch";
							goggles="G_SPE_Cigarette_Strike_Outs";
							headgear="H_SPE_CIV_Fedora_Cap_2";
						};
					};
					id=377;
					type="SPE_FFI_Sniper";
					class CustomAttributes
					{
						class Attribute0
						{
							property="ENH_spotDistance";
							expression="if (_value == 0.5) exitWith {}; [_this, ['spotDistance', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute1
						{
							property="ENH_reloadingSpeed";
							expression="if (_value == 0.5) exitWith {}; [_this, ['reloadSpeed', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute2
						{
							property="ENH_aimingSpeed";
							expression="if (_value == 0.5) exitWith {}; [_this, ['aimingSpeed', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute3
						{
							property="ENH_unitTraits_engineer";
							expression="[_this, ['Engineer', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=1;
								};
							};
						};
						class Attribute4
						{
							property="ENH_aimingAccuracy";
							expression="if (_value == 0.5) exitWith {}; [_this, ['aimingAccuracy', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=0.69;
								};
							};
						};
						class Attribute5
						{
							property="ENH_unitTraits_audibleCoef";
							expression="[_this, ['AudibleCoef', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=0.40000001;
								};
							};
						};
						class Attribute6
						{
							property="enableStamina";
							expression="_this enablestamina _value;";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=0;
								};
							};
						};
						class Attribute7
						{
							property="ENH_unitTraits_medic";
							expression="[_this, ['Medic', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=1;
								};
							};
						};
						class Attribute8
						{
							property="speaker";
							expression="_this setspeaker _value;";
							class Value
							{
								class data
								{
									singleType="STRING";
									value="Male01FRE";
								};
							};
						};
						class Attribute9
						{
							property="ENH_commanding";
							expression="if (_value == 0.5) exitWith {}; [_this, ['commanding', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute10
						{
							property="ENH_unitTrait_UAVHacker";
							expression="[_this, ['UAVHacker', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=1;
								};
							};
						};
						class Attribute11
						{
							property="ENH_unitTraits_loadCoef";
							expression="[_this, ['LoadCoef', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=0.1;
								};
							};
						};
						class Attribute12
						{
							property="ENH_courage";
							expression="if (_value == 0.5) exitWith {}; [_this, ['courage', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute13
						{
							property="ENH_unitTraits_camouflage";
							expression="[_this, ['CamouflageCoef', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=0.40000001;
								};
							};
						};
						class Attribute14
						{
							property="ENH_spotTime";
							expression="if (_value == 0.5) exitWith {}; [_this, ['spotTime', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute15
						{
							property="enh_general";
							expression="if (_value == 0.5) exitWith {}; [_this, ['general', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute16
						{
							property="ENH_unitTrait_explosiveSpecialist";
							expression="[_this, ['ExplosiveSpecialist', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=1;
								};
							};
						};
						class Attribute17
						{
							property="ENH_aimingShake";
							expression="if (_value == 0.5) exitWith {}; [_this, ['aimingShake', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=0.80000001;
								};
							};
						};
						nAttributes=18;
					};
				};
				class Item7
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={5363.0708,46.841438,11262.169};
						angles[]={0,0.38882664,-0};
					};
					side="West";
					flags=5;
					class Attributes
					{
						skill=1;
						init="this disableAI ""PATH"";";
						stance="Up";
					};
					id=378;
					type="SPE_FFI_Sniper";
					class CustomAttributes
					{
						class Attribute0
						{
							property="ENH_spotDistance";
							expression="if (_value == 0.5) exitWith {}; [_this, ['spotDistance', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute1
						{
							property="ENH_reloadingSpeed";
							expression="if (_value == 0.5) exitWith {}; [_this, ['reloadSpeed', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute2
						{
							property="ENH_aimingSpeed";
							expression="if (_value == 0.5) exitWith {}; [_this, ['aimingSpeed', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute3
						{
							property="ENH_unitTraits_engineer";
							expression="[_this, ['Engineer', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=1;
								};
							};
						};
						class Attribute4
						{
							property="ENH_aimingAccuracy";
							expression="if (_value == 0.5) exitWith {}; [_this, ['aimingAccuracy', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=0.69;
								};
							};
						};
						class Attribute5
						{
							property="ENH_unitTraits_audibleCoef";
							expression="[_this, ['AudibleCoef', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=0.40000001;
								};
							};
						};
						class Attribute6
						{
							property="enableStamina";
							expression="_this enablestamina _value;";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=0;
								};
							};
						};
						class Attribute7
						{
							property="ENH_unitTraits_medic";
							expression="[_this, ['Medic', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=1;
								};
							};
						};
						class Attribute8
						{
							property="speaker";
							expression="_this setspeaker _value;";
							class Value
							{
								class data
								{
									singleType="STRING";
									value="Male01FRE";
								};
							};
						};
						class Attribute9
						{
							property="ENH_commanding";
							expression="if (_value == 0.5) exitWith {}; [_this, ['commanding', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute10
						{
							property="ENH_unitTrait_UAVHacker";
							expression="[_this, ['UAVHacker', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=1;
								};
							};
						};
						class Attribute11
						{
							property="ENH_unitTraits_loadCoef";
							expression="[_this, ['LoadCoef', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=0.1;
								};
							};
						};
						class Attribute12
						{
							property="ENH_courage";
							expression="if (_value == 0.5) exitWith {}; [_this, ['courage', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute13
						{
							property="pitch";
							expression="_this setpitch _value;";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=0.97000003;
								};
							};
						};
						class Attribute14
						{
							property="ENH_unitTraits_camouflage";
							expression="[_this, ['CamouflageCoef', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=0.40000001;
								};
							};
						};
						class Attribute15
						{
							property="ENH_spotTime";
							expression="if (_value == 0.5) exitWith {}; [_this, ['spotTime', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute16
						{
							property="enh_general";
							expression="if (_value == 0.5) exitWith {}; [_this, ['general', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute17
						{
							property="ENH_unitTrait_explosiveSpecialist";
							expression="[_this, ['ExplosiveSpecialist', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=1;
								};
							};
						};
						class Attribute18
						{
							property="ENH_aimingShake";
							expression="if (_value == 0.5) exitWith {}; [_this, ['aimingShake', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=0.80000001;
								};
							};
						};
						nAttributes=19;
					};
				};
				class Item8
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={5356.0474,46.841438,11241.405};
						angles[]={0,3.7399201,-0};
					};
					side="West";
					flags=5;
					class Attributes
					{
						skill=1;
						rank="SERGEANT";
						stance="Up";
						class Inventory
						{
							class primaryWeapon
							{
								name="SPE_MP40";
								class primaryMuzzleMag
								{
									name="SPE_32Rnd_9x19";
									ammoLeft=32;
								};
							};
							class uniform
							{
								typeName="U_SPE_FFI_Worker_4";
								isBackpack=0;
								class MagazineCargo
								{
									items=1;
									class Item0
									{
										name="SPE_32Rnd_9x19";
										count=7;
										ammoLeft=32;
									};
								};
								class ItemCargo
								{
									items=1;
									class Item0
									{
										name="SPE_US_FirstAidKit";
										count=1;
									};
								};
							};
							class vest
							{
								typeName="V_SPE_FFI_Vest_SMG_pouch";
								isBackpack=0;
								class MagazineCargo
								{
									items=2;
									class Item0
									{
										name="SPE_32Rnd_9x19";
										count=10;
										ammoLeft=32;
									};
									class Item1
									{
										name="SPE_Shg24";
										count=2;
										ammoLeft=1;
									};
								};
							};
							class backpack
							{
								typeName="B_SPE_FFI_Gasbag";
								isBackpack=1;
								class MagazineCargo
								{
									items=1;
									class Item0
									{
										name="SPE_32Rnd_9x19";
										count=2;
										ammoLeft=32;
									};
								};
								class ItemCargo
								{
									items=1;
									class Item0
									{
										name="SPE_US_FirstAidKit";
										count=3;
									};
								};
							};
							map="ItemMap";
							compass="SPE_US_ItemCompass";
							watch="SPE_US_ItemWatch";
							goggles="G_SPE_Cigarette_Strike_Outs";
							headgear="H_SPE_CIV_Worker_Cap_1";
						};
					};
					id=379;
					type="SPE_FFI_Fighter_MP40";
					class CustomAttributes
					{
						class Attribute0
						{
							property="ENH_spotDistance";
							expression="if (_value == 0.5) exitWith {}; [_this, ['spotDistance', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute1
						{
							property="ENH_reloadingSpeed";
							expression="if (_value == 0.5) exitWith {}; [_this, ['reloadSpeed', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute2
						{
							property="ENH_aimingSpeed";
							expression="if (_value == 0.5) exitWith {}; [_this, ['aimingSpeed', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute3
						{
							property="ENH_unitTraits_engineer";
							expression="[_this, ['Engineer', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=1;
								};
							};
						};
						class Attribute4
						{
							property="ENH_aimingAccuracy";
							expression="if (_value == 0.5) exitWith {}; [_this, ['aimingAccuracy', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=0.69;
								};
							};
						};
						class Attribute5
						{
							property="ENH_unitTraits_audibleCoef";
							expression="[_this, ['AudibleCoef', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=0.40000001;
								};
							};
						};
						class Attribute6
						{
							property="enableStamina";
							expression="_this enablestamina _value;";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=0;
								};
							};
						};
						class Attribute7
						{
							property="ENH_unitTraits_medic";
							expression="[_this, ['Medic', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=1;
								};
							};
						};
						class Attribute8
						{
							property="speaker";
							expression="_this setspeaker _value;";
							class Value
							{
								class data
								{
									singleType="STRING";
									value="Male01FRE";
								};
							};
						};
						class Attribute9
						{
							property="ENH_commanding";
							expression="if (_value == 0.5) exitWith {}; [_this, ['commanding', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute10
						{
							property="ENH_unitTrait_UAVHacker";
							expression="[_this, ['UAVHacker', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=1;
								};
							};
						};
						class Attribute11
						{
							property="ENH_unitTraits_loadCoef";
							expression="[_this, ['LoadCoef', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=0.1;
								};
							};
						};
						class Attribute12
						{
							property="ENH_courage";
							expression="if (_value == 0.5) exitWith {}; [_this, ['courage', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute13
						{
							property="pitch";
							expression="_this setpitch _value;";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1.04;
								};
							};
						};
						class Attribute14
						{
							property="ENH_unitTraits_camouflage";
							expression="[_this, ['CamouflageCoef', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=0.40000001;
								};
							};
						};
						class Attribute15
						{
							property="ENH_spotTime";
							expression="if (_value == 0.5) exitWith {}; [_this, ['spotTime', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute16
						{
							property="enh_general";
							expression="if (_value == 0.5) exitWith {}; [_this, ['general', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute17
						{
							property="ENH_unitTrait_explosiveSpecialist";
							expression="[_this, ['ExplosiveSpecialist', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=1;
								};
							};
						};
						class Attribute18
						{
							property="ENH_aimingShake";
							expression="if (_value == 0.5) exitWith {}; [_this, ['aimingShake', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=0.80000001;
								};
							};
						};
						nAttributes=19;
					};
				};
				class Item9
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={5382.9893,46.841438,11254.112};
						angles[]={0,2.020736,-0};
					};
					side="West";
					flags=5;
					class Attributes
					{
						skill=1;
						init="this disableAI ""PATH"";";
						stance="Up";
						class Inventory
						{
							class primaryWeapon
							{
								name="SPE_MG34";
								class primaryMuzzleMag
								{
									name="SPE_50Rnd_792x57";
									ammoLeft=50;
								};
							};
							class uniform
							{
								typeName="U_SPE_FFI_Casual_2";
								isBackpack=0;
								class MagazineCargo
								{
									items=2;
									class Item0
									{
										name="SPE_Shg24";
										count=2;
										ammoLeft=1;
									};
									class Item1
									{
										name="SPE_50Rnd_792x57";
										count=1;
										ammoLeft=50;
									};
								};
								class ItemCargo
								{
									items=1;
									class Item0
									{
										name="SPE_US_FirstAidKit";
										count=1;
									};
								};
							};
							class vest
							{
								typeName="V_SPE_GER_VestMG";
								isBackpack=0;
								class MagazineCargo
								{
									items=1;
									class Item0
									{
										name="SPE_50Rnd_792x57";
										count=6;
										ammoLeft=50;
									};
								};
							};
							class backpack
							{
								typeName="B_SPE_GER_Tonister34_canvas";
								isBackpack=1;
								class MagazineCargo
								{
									items=1;
									class Item0
									{
										name="SPE_50Rnd_792x57";
										count=6;
										ammoLeft=50;
									};
								};
							};
							map="ItemMap";
							compass="SPE_US_ItemCompass";
							watch="SPE_US_ItemWatch";
							goggles="G_SPE_Cigarette_Grundstein";
							headgear="H_SPE_CIV_Worker_Cap_1";
						};
					};
					id=380;
					type="SPE_FFI_Fighter";
					class CustomAttributes
					{
						class Attribute0
						{
							property="ENH_spotDistance";
							expression="if (_value == 0.5) exitWith {}; [_this, ['spotDistance', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute1
						{
							property="ENH_reloadingSpeed";
							expression="if (_value == 0.5) exitWith {}; [_this, ['reloadSpeed', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute2
						{
							property="ENH_aimingSpeed";
							expression="if (_value == 0.5) exitWith {}; [_this, ['aimingSpeed', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute3
						{
							property="ENH_unitTraits_engineer";
							expression="[_this, ['Engineer', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=1;
								};
							};
						};
						class Attribute4
						{
							property="ENH_aimingAccuracy";
							expression="if (_value == 0.5) exitWith {}; [_this, ['aimingAccuracy', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=0.69;
								};
							};
						};
						class Attribute5
						{
							property="ENH_unitTraits_audibleCoef";
							expression="[_this, ['AudibleCoef', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=0.40000001;
								};
							};
						};
						class Attribute6
						{
							property="enableStamina";
							expression="_this enablestamina _value;";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=0;
								};
							};
						};
						class Attribute7
						{
							property="ENH_unitTraits_medic";
							expression="[_this, ['Medic', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=1;
								};
							};
						};
						class Attribute8
						{
							property="speaker";
							expression="_this setspeaker _value;";
							class Value
							{
								class data
								{
									singleType="STRING";
									value="Male01FRE";
								};
							};
						};
						class Attribute9
						{
							property="ENH_commanding";
							expression="if (_value == 0.5) exitWith {}; [_this, ['commanding', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute10
						{
							property="ENH_unitTrait_UAVHacker";
							expression="[_this, ['UAVHacker', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=1;
								};
							};
						};
						class Attribute11
						{
							property="ENH_unitTraits_loadCoef";
							expression="[_this, ['LoadCoef', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=0.1;
								};
							};
						};
						class Attribute12
						{
							property="ENH_courage";
							expression="if (_value == 0.5) exitWith {}; [_this, ['courage', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute13
						{
							property="pitch";
							expression="_this setpitch _value;";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute14
						{
							property="ENH_unitTraits_camouflage";
							expression="[_this, ['CamouflageCoef', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=0.40000001;
								};
							};
						};
						class Attribute15
						{
							property="ENH_spotTime";
							expression="if (_value == 0.5) exitWith {}; [_this, ['spotTime', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute16
						{
							property="enh_general";
							expression="if (_value == 0.5) exitWith {}; [_this, ['general', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute17
						{
							property="ENH_unitTrait_explosiveSpecialist";
							expression="[_this, ['ExplosiveSpecialist', _value]] remoteExec ['setUnitTrait', _this]";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=1;
								};
							};
						};
						class Attribute18
						{
							property="ENH_aimingShake";
							expression="if (_value == 0.5) exitWith {}; [_this, ['aimingShake', _value]] remoteExec ['setSkill', _this]";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=0.80000001;
								};
							};
						};
						nAttributes=19;
					};
				};
			};
			class Attributes
			{
			};
			class CrewLinks
			{
				class LinkIDProvider
				{
					nextID=1;
				};
				class Links
				{
					items=1;
					class Item0
					{
						linkID=0;
						item0=375;
						item1=381;
						class CustomData
						{
							role=2;
							turretPath[]={0};
						};
					};
				};
			};
			id=370;
		};
		class Item127
		{
			dataType="Object";
			class PositionInfo
			{
				position[]={5341.3809,49.130054,11238.403};
				angles[]={0.019999012,4.610549,6.2465348};
			};
			side="West";
			flags=4;
			class Attributes
			{
				lock="LOCKEDPLAYER";
				fuel=0;
				init="this disableAI ""PATH"";";
				textures="Panzergrau_Flag";
				dynamicSimulation=1;
			};
			id=381;
			type="SPE_FFI_SdKfz250_1";
			class CustomAttributes
			{
				class Attribute0
				{
					property="VehicleCustomization";
					expression="if (local _this) then {([_this] + _value + [true]) call (uinamespace getvariable 'BIS_fnc_initVehicle')};";
					class Value
					{
						class data
						{
							singleType="ARRAY";
							class value
							{
								items=2;
								class Item0
								{
									class data
									{
										singleType="ARRAY";
										class value
										{
											items=2;
											class Item0
											{
												class data
												{
													singleType="STRING";
													value="Panzergrau_Flag";
												};
											};
											class Item1
											{
												class data
												{
													singleType="SCALAR";
													value=1;
												};
											};
										};
									};
								};
								class Item1
								{
									class data
									{
										singleType="ARRAY";
										class value
										{
											items=2;
											class Item0
											{
												class data
												{
													singleType="STRING";
													value="stowage_hide_source";
												};
											};
											class Item1
											{
												class data
												{
													singleType="SCALAR";
													value=0;
												};
											};
										};
									};
								};
							};
						};
					};
				};
				class Attribute1
				{
					property="SPE_Unit_Number_attribute";
					expression="[_this,_value,'SPE_numbers'] spawn SPE_Fnc_System_Vehicle_Numbers_update;";
					class Value
					{
						class data
						{
							singleType="STRING";
							value="-1";
						};
					};
				};
				class Attribute2
				{
					property="ammoBox";
					expression="[_this,_value] call bis_fnc_initAmmoBox;";
					class Value
					{
						class data
						{
							singleType="STRING";
							value="[[[[],[]],[[],[]],[[],[]],[[],[]]],false]";
						};
					};
				};
				nAttributes=3;
			};
		};
		class Item128
		{
			dataType="Object";
			class PositionInfo
			{
				position[]={5354.5444,50.816803,11259.23};
			};
			side="Empty";
			flags=5;
			class Attributes
			{
			};
			id=382;
			type="SPE_FlagCarrier_FFF";
			class CustomAttributes
			{
				class Attribute0
				{
					property="allowDamage";
					expression="_this allowdamage _value;";
					class Value
					{
						class data
						{
							singleType="BOOL";
							value=0;
						};
					};
				};
				nAttributes=1;
			};
		};
		class Item129
		{
			dataType="Logic";
			class PositionInfo
			{
				position[]={1869.3074,32.39616,-158.84033};
				angles[]={0.0054591573,0,6.260016};
			};
			id=383;
			type="SPE_AmbientWarSounds_ModuleGlobal_3DEN";
			class CustomAttributes
			{
				class Attribute0
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_maxwait";
					expression="_this setVariable ['SPE_AmbientWarSounds_maxwait',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=15;
						};
					};
				};
				class Attribute1
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_minwait";
					expression="_this setVariable ['SPE_AmbientWarSounds_minwait',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=1;
						};
					};
				};
				class Attribute2
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_switchranges";
					expression="_this setVariable ['SPE_AmbientWarSounds_switchranges',_value,true];";
					class Value
					{
						class data
						{
							singleType="STRING";
							value="[175,600]";
						};
					};
				};
				class Attribute3
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_condition";
					expression="_this setVariable ['SPE_AmbientWarSounds_condition',_value,true];";
					class Value
					{
						class data
						{
							singleType="STRING";
							value="true";
						};
					};
				};
				class Attribute4
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_customratio";
					expression="_this setVariable ['SPE_AmbientWarSounds_customratio',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=0;
						};
					};
				};
				class Attribute5
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_mg42ratio";
					expression="_this setVariable ['SPE_AmbientWarSounds_mg42ratio',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=25;
						};
					};
				};
				class Attribute6
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_cannonratio";
					expression="_this setVariable ['SPE_AmbientWarSounds_cannonratio',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=25;
						};
					};
				};
				class Attribute7
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_mgratio";
					expression="_this setVariable ['SPE_AmbientWarSounds_mgratio',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=25;
						};
					};
				};
				class Attribute8
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_maxdist";
					expression="_this setVariable ['SPE_AmbientWarSounds_maxdist',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=4000;
						};
					};
				};
				class Attribute9
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_rifleratio";
					expression="_this setVariable ['SPE_AmbientWarSounds_rifleratio',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=25;
						};
					};
				};
				class Attribute10
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_mindist";
					expression="_this setVariable ['SPE_AmbientWarSounds_mindist',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=2000;
						};
					};
				};
				nAttributes=11;
			};
		};
		class Item130
		{
			dataType="Logic";
			class PositionInfo
			{
				position[]={1845.5889,33.15649,-200.03577};
				angles[]={0.013291756,0,6.1980143};
			};
			id=384;
			type="SPE_AmbientWarSounds_ModuleGlobal_3DEN";
			class CustomAttributes
			{
				class Attribute0
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_maxwait";
					expression="_this setVariable ['SPE_AmbientWarSounds_maxwait',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=15;
						};
					};
				};
				class Attribute1
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_minwait";
					expression="_this setVariable ['SPE_AmbientWarSounds_minwait',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=1;
						};
					};
				};
				class Attribute2
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_switchranges";
					expression="_this setVariable ['SPE_AmbientWarSounds_switchranges',_value,true];";
					class Value
					{
						class data
						{
							singleType="STRING";
							value="[175,600]";
						};
					};
				};
				class Attribute3
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_condition";
					expression="_this setVariable ['SPE_AmbientWarSounds_condition',_value,true];";
					class Value
					{
						class data
						{
							singleType="STRING";
							value="true";
						};
					};
				};
				class Attribute4
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_customratio";
					expression="_this setVariable ['SPE_AmbientWarSounds_customratio',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=0;
						};
					};
				};
				class Attribute5
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_mg42ratio";
					expression="_this setVariable ['SPE_AmbientWarSounds_mg42ratio',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=25;
						};
					};
				};
				class Attribute6
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_cannonratio";
					expression="_this setVariable ['SPE_AmbientWarSounds_cannonratio',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=25;
						};
					};
				};
				class Attribute7
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_mgratio";
					expression="_this setVariable ['SPE_AmbientWarSounds_mgratio',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=25;
						};
					};
				};
				class Attribute8
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_maxdist";
					expression="_this setVariable ['SPE_AmbientWarSounds_maxdist',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=4000;
						};
					};
				};
				class Attribute9
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_rifleratio";
					expression="_this setVariable ['SPE_AmbientWarSounds_rifleratio',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=25;
						};
					};
				};
				class Attribute10
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_mindist";
					expression="_this setVariable ['SPE_AmbientWarSounds_mindist',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=2000;
						};
					};
				};
				nAttributes=11;
			};
		};
		class Item131
		{
			dataType="Logic";
			class PositionInfo
			{
				position[]={1898.0193,31.349997,-200.03613};
				angles[]={6.2535195,0,6.2391567};
			};
			id=385;
			type="SPE_AmbientWarSounds_ModuleGlobal_3DEN";
			class CustomAttributes
			{
				class Attribute0
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_maxwait";
					expression="_this setVariable ['SPE_AmbientWarSounds_maxwait',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=15;
						};
					};
				};
				class Attribute1
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_minwait";
					expression="_this setVariable ['SPE_AmbientWarSounds_minwait',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=1;
						};
					};
				};
				class Attribute2
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_switchranges";
					expression="_this setVariable ['SPE_AmbientWarSounds_switchranges',_value,true];";
					class Value
					{
						class data
						{
							singleType="STRING";
							value="[175,600]";
						};
					};
				};
				class Attribute3
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_condition";
					expression="_this setVariable ['SPE_AmbientWarSounds_condition',_value,true];";
					class Value
					{
						class data
						{
							singleType="STRING";
							value="true";
						};
					};
				};
				class Attribute4
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_customratio";
					expression="_this setVariable ['SPE_AmbientWarSounds_customratio',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=0;
						};
					};
				};
				class Attribute5
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_mg42ratio";
					expression="_this setVariable ['SPE_AmbientWarSounds_mg42ratio',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=25;
						};
					};
				};
				class Attribute6
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_cannonratio";
					expression="_this setVariable ['SPE_AmbientWarSounds_cannonratio',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=25;
						};
					};
				};
				class Attribute7
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_mgratio";
					expression="_this setVariable ['SPE_AmbientWarSounds_mgratio',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=25;
						};
					};
				};
				class Attribute8
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_maxdist";
					expression="_this setVariable ['SPE_AmbientWarSounds_maxdist',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=4000;
						};
					};
				};
				class Attribute9
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_rifleratio";
					expression="_this setVariable ['SPE_AmbientWarSounds_rifleratio',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=25;
						};
					};
				};
				class Attribute10
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_mindist";
					expression="_this setVariable ['SPE_AmbientWarSounds_mindist',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=2000;
						};
					};
				};
				nAttributes=11;
			};
		};
		class Item132
		{
			dataType="Logic";
			class PositionInfo
			{
				position[]={1740.7281,39.515663,-203.77994};
				angles[]={0.013443363,0,6.2141485};
			};
			id=386;
			type="SPE_AmbientWarSounds_ModuleGlobal_3DEN";
			class CustomAttributes
			{
				class Attribute0
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_maxwait";
					expression="_this setVariable ['SPE_AmbientWarSounds_maxwait',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=15;
						};
					};
				};
				class Attribute1
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_minwait";
					expression="_this setVariable ['SPE_AmbientWarSounds_minwait',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=1;
						};
					};
				};
				class Attribute2
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_switchranges";
					expression="_this setVariable ['SPE_AmbientWarSounds_switchranges',_value,true];";
					class Value
					{
						class data
						{
							singleType="STRING";
							value="[175,600]";
						};
					};
				};
				class Attribute3
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_condition";
					expression="_this setVariable ['SPE_AmbientWarSounds_condition',_value,true];";
					class Value
					{
						class data
						{
							singleType="STRING";
							value="true";
						};
					};
				};
				class Attribute4
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_customratio";
					expression="_this setVariable ['SPE_AmbientWarSounds_customratio',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=0;
						};
					};
				};
				class Attribute5
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_mg42ratio";
					expression="_this setVariable ['SPE_AmbientWarSounds_mg42ratio',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=25;
						};
					};
				};
				class Attribute6
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_cannonratio";
					expression="_this setVariable ['SPE_AmbientWarSounds_cannonratio',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=25;
						};
					};
				};
				class Attribute7
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_mgratio";
					expression="_this setVariable ['SPE_AmbientWarSounds_mgratio',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=25;
						};
					};
				};
				class Attribute8
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_maxdist";
					expression="_this setVariable ['SPE_AmbientWarSounds_maxdist',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=4000;
						};
					};
				};
				class Attribute9
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_rifleratio";
					expression="_this setVariable ['SPE_AmbientWarSounds_rifleratio',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=25;
						};
					};
				};
				class Attribute10
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_mindist";
					expression="_this setVariable ['SPE_AmbientWarSounds_mindist',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=2000;
						};
					};
				};
				nAttributes=11;
			};
		};
		class Item133
		{
			dataType="Logic";
			class PositionInfo
			{
				position[]={1793.1586,35.627052,-203.78027};
				angles[]={6.2720137,0,6.2489691};
			};
			id=387;
			type="SPE_AmbientWarSounds_ModuleGlobal_3DEN";
			class CustomAttributes
			{
				class Attribute0
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_maxwait";
					expression="_this setVariable ['SPE_AmbientWarSounds_maxwait',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=15;
						};
					};
				};
				class Attribute1
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_minwait";
					expression="_this setVariable ['SPE_AmbientWarSounds_minwait',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=1;
						};
					};
				};
				class Attribute2
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_switchranges";
					expression="_this setVariable ['SPE_AmbientWarSounds_switchranges',_value,true];";
					class Value
					{
						class data
						{
							singleType="STRING";
							value="[175,600]";
						};
					};
				};
				class Attribute3
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_condition";
					expression="_this setVariable ['SPE_AmbientWarSounds_condition',_value,true];";
					class Value
					{
						class data
						{
							singleType="STRING";
							value="true";
						};
					};
				};
				class Attribute4
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_customratio";
					expression="_this setVariable ['SPE_AmbientWarSounds_customratio',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=0;
						};
					};
				};
				class Attribute5
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_mg42ratio";
					expression="_this setVariable ['SPE_AmbientWarSounds_mg42ratio',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=25;
						};
					};
				};
				class Attribute6
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_cannonratio";
					expression="_this setVariable ['SPE_AmbientWarSounds_cannonratio',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=25;
						};
					};
				};
				class Attribute7
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_mgratio";
					expression="_this setVariable ['SPE_AmbientWarSounds_mgratio',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=25;
						};
					};
				};
				class Attribute8
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_maxdist";
					expression="_this setVariable ['SPE_AmbientWarSounds_maxdist',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=4000;
						};
					};
				};
				class Attribute9
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_rifleratio";
					expression="_this setVariable ['SPE_AmbientWarSounds_rifleratio',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=25;
						};
					};
				};
				class Attribute10
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_mindist";
					expression="_this setVariable ['SPE_AmbientWarSounds_mindist',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=2000;
						};
					};
				};
				nAttributes=11;
			};
		};
		class Item134
		{
			dataType="Logic";
			class PositionInfo
			{
				position[]={1769.4401,36.903263,-244.97571};
				angles[]={0.023688486,0,6.1685095};
			};
			id=388;
			type="SPE_AmbientWarSounds_ModuleGlobal_3DEN";
			atlOffset=3.8146973e-006;
			class CustomAttributes
			{
				class Attribute0
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_maxwait";
					expression="_this setVariable ['SPE_AmbientWarSounds_maxwait',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=15;
						};
					};
				};
				class Attribute1
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_minwait";
					expression="_this setVariable ['SPE_AmbientWarSounds_minwait',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=1;
						};
					};
				};
				class Attribute2
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_switchranges";
					expression="_this setVariable ['SPE_AmbientWarSounds_switchranges',_value,true];";
					class Value
					{
						class data
						{
							singleType="STRING";
							value="[175,600]";
						};
					};
				};
				class Attribute3
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_condition";
					expression="_this setVariable ['SPE_AmbientWarSounds_condition',_value,true];";
					class Value
					{
						class data
						{
							singleType="STRING";
							value="true";
						};
					};
				};
				class Attribute4
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_customratio";
					expression="_this setVariable ['SPE_AmbientWarSounds_customratio',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=0;
						};
					};
				};
				class Attribute5
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_mg42ratio";
					expression="_this setVariable ['SPE_AmbientWarSounds_mg42ratio',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=25;
						};
					};
				};
				class Attribute6
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_cannonratio";
					expression="_this setVariable ['SPE_AmbientWarSounds_cannonratio',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=25;
						};
					};
				};
				class Attribute7
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_mgratio";
					expression="_this setVariable ['SPE_AmbientWarSounds_mgratio',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=25;
						};
					};
				};
				class Attribute8
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_maxdist";
					expression="_this setVariable ['SPE_AmbientWarSounds_maxdist',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=4000;
						};
					};
				};
				class Attribute9
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_rifleratio";
					expression="_this setVariable ['SPE_AmbientWarSounds_rifleratio',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=25;
						};
					};
				};
				class Attribute10
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_mindist";
					expression="_this setVariable ['SPE_AmbientWarSounds_mindist',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=2000;
						};
					};
				};
				nAttributes=11;
			};
		};
		class Item135
		{
			dataType="Logic";
			class PositionInfo
			{
				position[]={1821.8705,35.575672,-244.97607};
				angles[]={0.02471316,0,6.2621183};
			};
			id=389;
			type="SPE_AmbientWarSounds_ModuleGlobal_3DEN";
			class CustomAttributes
			{
				class Attribute0
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_maxwait";
					expression="_this setVariable ['SPE_AmbientWarSounds_maxwait',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=15;
						};
					};
				};
				class Attribute1
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_minwait";
					expression="_this setVariable ['SPE_AmbientWarSounds_minwait',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=1;
						};
					};
				};
				class Attribute2
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_switchranges";
					expression="_this setVariable ['SPE_AmbientWarSounds_switchranges',_value,true];";
					class Value
					{
						class data
						{
							singleType="STRING";
							value="[175,600]";
						};
					};
				};
				class Attribute3
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_condition";
					expression="_this setVariable ['SPE_AmbientWarSounds_condition',_value,true];";
					class Value
					{
						class data
						{
							singleType="STRING";
							value="true";
						};
					};
				};
				class Attribute4
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_customratio";
					expression="_this setVariable ['SPE_AmbientWarSounds_customratio',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=0;
						};
					};
				};
				class Attribute5
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_mg42ratio";
					expression="_this setVariable ['SPE_AmbientWarSounds_mg42ratio',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=25;
						};
					};
				};
				class Attribute6
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_cannonratio";
					expression="_this setVariable ['SPE_AmbientWarSounds_cannonratio',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=25;
						};
					};
				};
				class Attribute7
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_mgratio";
					expression="_this setVariable ['SPE_AmbientWarSounds_mgratio',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=25;
						};
					};
				};
				class Attribute8
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_maxdist";
					expression="_this setVariable ['SPE_AmbientWarSounds_maxdist',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=4000;
						};
					};
				};
				class Attribute9
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_rifleratio";
					expression="_this setVariable ['SPE_AmbientWarSounds_rifleratio',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=25;
						};
					};
				};
				class Attribute10
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_mindist";
					expression="_this setVariable ['SPE_AmbientWarSounds_mindist',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=2000;
						};
					};
				};
				nAttributes=11;
			};
		};
		class Item136
		{
			dataType="Logic";
			class PositionInfo
			{
				position[]={1871.8038,32.526489,-242.47964};
				angles[]={0.078644164,0,6.2551603};
			};
			id=390;
			type="SPE_AmbientWarSounds_ModuleGlobal_3DEN";
			atlOffset=3.8146973e-006;
			class CustomAttributes
			{
				class Attribute0
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_maxwait";
					expression="_this setVariable ['SPE_AmbientWarSounds_maxwait',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=15;
						};
					};
				};
				class Attribute1
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_minwait";
					expression="_this setVariable ['SPE_AmbientWarSounds_minwait',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=1;
						};
					};
				};
				class Attribute2
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_switchranges";
					expression="_this setVariable ['SPE_AmbientWarSounds_switchranges',_value,true];";
					class Value
					{
						class data
						{
							singleType="STRING";
							value="[175,600]";
						};
					};
				};
				class Attribute3
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_condition";
					expression="_this setVariable ['SPE_AmbientWarSounds_condition',_value,true];";
					class Value
					{
						class data
						{
							singleType="STRING";
							value="true";
						};
					};
				};
				class Attribute4
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_customratio";
					expression="_this setVariable ['SPE_AmbientWarSounds_customratio',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=0;
						};
					};
				};
				class Attribute5
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_mg42ratio";
					expression="_this setVariable ['SPE_AmbientWarSounds_mg42ratio',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=25;
						};
					};
				};
				class Attribute6
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_cannonratio";
					expression="_this setVariable ['SPE_AmbientWarSounds_cannonratio',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=25;
						};
					};
				};
				class Attribute7
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_mgratio";
					expression="_this setVariable ['SPE_AmbientWarSounds_mgratio',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=25;
						};
					};
				};
				class Attribute8
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_maxdist";
					expression="_this setVariable ['SPE_AmbientWarSounds_maxdist',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=4000;
						};
					};
				};
				class Attribute9
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_rifleratio";
					expression="_this setVariable ['SPE_AmbientWarSounds_rifleratio',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=25;
						};
					};
				};
				class Attribute10
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_mindist";
					expression="_this setVariable ['SPE_AmbientWarSounds_mindist',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=2000;
						};
					};
				};
				nAttributes=11;
			};
		};
		class Item137
		{
			dataType="Logic";
			class PositionInfo
			{
				position[]={1924.2343,34.248642,-242.47998};
				angles[]={0.047352601,0,0.0068620592};
			};
			id=391;
			type="SPE_AmbientWarSounds_ModuleGlobal_3DEN";
			atlOffset=3.8146973e-006;
			class CustomAttributes
			{
				class Attribute0
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_maxwait";
					expression="_this setVariable ['SPE_AmbientWarSounds_maxwait',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=15;
						};
					};
				};
				class Attribute1
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_minwait";
					expression="_this setVariable ['SPE_AmbientWarSounds_minwait',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=1;
						};
					};
				};
				class Attribute2
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_switchranges";
					expression="_this setVariable ['SPE_AmbientWarSounds_switchranges',_value,true];";
					class Value
					{
						class data
						{
							singleType="STRING";
							value="[175,600]";
						};
					};
				};
				class Attribute3
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_condition";
					expression="_this setVariable ['SPE_AmbientWarSounds_condition',_value,true];";
					class Value
					{
						class data
						{
							singleType="STRING";
							value="true";
						};
					};
				};
				class Attribute4
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_customratio";
					expression="_this setVariable ['SPE_AmbientWarSounds_customratio',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=0;
						};
					};
				};
				class Attribute5
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_mg42ratio";
					expression="_this setVariable ['SPE_AmbientWarSounds_mg42ratio',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=25;
						};
					};
				};
				class Attribute6
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_cannonratio";
					expression="_this setVariable ['SPE_AmbientWarSounds_cannonratio',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=25;
						};
					};
				};
				class Attribute7
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_mgratio";
					expression="_this setVariable ['SPE_AmbientWarSounds_mgratio',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=25;
						};
					};
				};
				class Attribute8
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_maxdist";
					expression="_this setVariable ['SPE_AmbientWarSounds_maxdist',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=4000;
						};
					};
				};
				class Attribute9
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_rifleratio";
					expression="_this setVariable ['SPE_AmbientWarSounds_rifleratio',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=25;
						};
					};
				};
				class Attribute10
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_mindist";
					expression="_this setVariable ['SPE_AmbientWarSounds_mindist',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=2000;
						};
					};
				};
				nAttributes=11;
			};
		};
		class Item138
		{
			dataType="Logic";
			class PositionInfo
			{
				position[]={1900.5157,35.33305,-283.67542};
				angles[]={6.281002,0,6.2127585};
			};
			id=392;
			type="SPE_AmbientWarSounds_ModuleGlobal_3DEN";
			class CustomAttributes
			{
				class Attribute0
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_maxwait";
					expression="_this setVariable ['SPE_AmbientWarSounds_maxwait',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=15;
						};
					};
				};
				class Attribute1
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_minwait";
					expression="_this setVariable ['SPE_AmbientWarSounds_minwait',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=1;
						};
					};
				};
				class Attribute2
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_switchranges";
					expression="_this setVariable ['SPE_AmbientWarSounds_switchranges',_value,true];";
					class Value
					{
						class data
						{
							singleType="STRING";
							value="[175,600]";
						};
					};
				};
				class Attribute3
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_condition";
					expression="_this setVariable ['SPE_AmbientWarSounds_condition',_value,true];";
					class Value
					{
						class data
						{
							singleType="STRING";
							value="true";
						};
					};
				};
				class Attribute4
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_customratio";
					expression="_this setVariable ['SPE_AmbientWarSounds_customratio',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=0;
						};
					};
				};
				class Attribute5
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_mg42ratio";
					expression="_this setVariable ['SPE_AmbientWarSounds_mg42ratio',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=25;
						};
					};
				};
				class Attribute6
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_cannonratio";
					expression="_this setVariable ['SPE_AmbientWarSounds_cannonratio',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=25;
						};
					};
				};
				class Attribute7
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_mgratio";
					expression="_this setVariable ['SPE_AmbientWarSounds_mgratio',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=25;
						};
					};
				};
				class Attribute8
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_maxdist";
					expression="_this setVariable ['SPE_AmbientWarSounds_maxdist',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=4000;
						};
					};
				};
				class Attribute9
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_rifleratio";
					expression="_this setVariable ['SPE_AmbientWarSounds_rifleratio',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=25;
						};
					};
				};
				class Attribute10
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_mindist";
					expression="_this setVariable ['SPE_AmbientWarSounds_mindist',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=2000;
						};
					};
				};
				nAttributes=11;
			};
		};
		class Item139
		{
			dataType="Logic";
			class PositionInfo
			{
				position[]={1952.9462,35.394043,-283.67578};
				angles[]={0.0019223655,0,0.005258956};
			};
			id=393;
			type="SPE_AmbientWarSounds_ModuleGlobal_3DEN";
			class CustomAttributes
			{
				class Attribute0
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_maxwait";
					expression="_this setVariable ['SPE_AmbientWarSounds_maxwait',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=15;
						};
					};
				};
				class Attribute1
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_minwait";
					expression="_this setVariable ['SPE_AmbientWarSounds_minwait',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=1;
						};
					};
				};
				class Attribute2
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_switchranges";
					expression="_this setVariable ['SPE_AmbientWarSounds_switchranges',_value,true];";
					class Value
					{
						class data
						{
							singleType="STRING";
							value="[175,600]";
						};
					};
				};
				class Attribute3
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_condition";
					expression="_this setVariable ['SPE_AmbientWarSounds_condition',_value,true];";
					class Value
					{
						class data
						{
							singleType="STRING";
							value="true";
						};
					};
				};
				class Attribute4
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_customratio";
					expression="_this setVariable ['SPE_AmbientWarSounds_customratio',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=0;
						};
					};
				};
				class Attribute5
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_mg42ratio";
					expression="_this setVariable ['SPE_AmbientWarSounds_mg42ratio',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=25;
						};
					};
				};
				class Attribute6
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_cannonratio";
					expression="_this setVariable ['SPE_AmbientWarSounds_cannonratio',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=25;
						};
					};
				};
				class Attribute7
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_mgratio";
					expression="_this setVariable ['SPE_AmbientWarSounds_mgratio',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=25;
						};
					};
				};
				class Attribute8
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_maxdist";
					expression="_this setVariable ['SPE_AmbientWarSounds_maxdist',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=4000;
						};
					};
				};
				class Attribute9
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_rifleratio";
					expression="_this setVariable ['SPE_AmbientWarSounds_rifleratio',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=25;
						};
					};
				};
				class Attribute10
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_mindist";
					expression="_this setVariable ['SPE_AmbientWarSounds_mindist',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=2000;
						};
					};
				};
				nAttributes=11;
			};
		};
		class Item140
		{
			dataType="Logic";
			class PositionInfo
			{
				position[]={1795.655,37.508568,-287.41959};
				angles[]={0.017977349,0,6.2787504};
			};
			id=394;
			type="SPE_AmbientWarSounds_ModuleGlobal_3DEN";
			class CustomAttributes
			{
				class Attribute0
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_maxwait";
					expression="_this setVariable ['SPE_AmbientWarSounds_maxwait',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=15;
						};
					};
				};
				class Attribute1
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_minwait";
					expression="_this setVariable ['SPE_AmbientWarSounds_minwait',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=1;
						};
					};
				};
				class Attribute2
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_switchranges";
					expression="_this setVariable ['SPE_AmbientWarSounds_switchranges',_value,true];";
					class Value
					{
						class data
						{
							singleType="STRING";
							value="[175,600]";
						};
					};
				};
				class Attribute3
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_condition";
					expression="_this setVariable ['SPE_AmbientWarSounds_condition',_value,true];";
					class Value
					{
						class data
						{
							singleType="STRING";
							value="true";
						};
					};
				};
				class Attribute4
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_customratio";
					expression="_this setVariable ['SPE_AmbientWarSounds_customratio',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=0;
						};
					};
				};
				class Attribute5
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_mg42ratio";
					expression="_this setVariable ['SPE_AmbientWarSounds_mg42ratio',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=25;
						};
					};
				};
				class Attribute6
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_cannonratio";
					expression="_this setVariable ['SPE_AmbientWarSounds_cannonratio',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=25;
						};
					};
				};
				class Attribute7
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_mgratio";
					expression="_this setVariable ['SPE_AmbientWarSounds_mgratio',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=25;
						};
					};
				};
				class Attribute8
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_maxdist";
					expression="_this setVariable ['SPE_AmbientWarSounds_maxdist',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=4000;
						};
					};
				};
				class Attribute9
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_rifleratio";
					expression="_this setVariable ['SPE_AmbientWarSounds_rifleratio',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=25;
						};
					};
				};
				class Attribute10
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_mindist";
					expression="_this setVariable ['SPE_AmbientWarSounds_mindist',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=2000;
						};
					};
				};
				nAttributes=11;
			};
		};
		class Item141
		{
			dataType="Logic";
			class PositionInfo
			{
				position[]={1848.0854,36.614964,-287.41992};
				angles[]={0.042883165,0,0.00034526698};
			};
			id=395;
			type="SPE_AmbientWarSounds_ModuleGlobal_3DEN";
			class CustomAttributes
			{
				class Attribute0
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_maxwait";
					expression="_this setVariable ['SPE_AmbientWarSounds_maxwait',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=15;
						};
					};
				};
				class Attribute1
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_minwait";
					expression="_this setVariable ['SPE_AmbientWarSounds_minwait',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=1;
						};
					};
				};
				class Attribute2
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_switchranges";
					expression="_this setVariable ['SPE_AmbientWarSounds_switchranges',_value,true];";
					class Value
					{
						class data
						{
							singleType="STRING";
							value="[175,600]";
						};
					};
				};
				class Attribute3
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_condition";
					expression="_this setVariable ['SPE_AmbientWarSounds_condition',_value,true];";
					class Value
					{
						class data
						{
							singleType="STRING";
							value="true";
						};
					};
				};
				class Attribute4
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_customratio";
					expression="_this setVariable ['SPE_AmbientWarSounds_customratio',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=0;
						};
					};
				};
				class Attribute5
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_mg42ratio";
					expression="_this setVariable ['SPE_AmbientWarSounds_mg42ratio',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=25;
						};
					};
				};
				class Attribute6
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_cannonratio";
					expression="_this setVariable ['SPE_AmbientWarSounds_cannonratio',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=25;
						};
					};
				};
				class Attribute7
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_mgratio";
					expression="_this setVariable ['SPE_AmbientWarSounds_mgratio',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=25;
						};
					};
				};
				class Attribute8
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_maxdist";
					expression="_this setVariable ['SPE_AmbientWarSounds_maxdist',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=4000;
						};
					};
				};
				class Attribute9
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_rifleratio";
					expression="_this setVariable ['SPE_AmbientWarSounds_rifleratio',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=25;
						};
					};
				};
				class Attribute10
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_mindist";
					expression="_this setVariable ['SPE_AmbientWarSounds_mindist',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=2000;
						};
					};
				};
				nAttributes=11;
			};
		};
		class Item142
		{
			dataType="Logic";
			class PositionInfo
			{
				position[]={1824.3669,35.903629,-328.61536};
				angles[]={6.2802353,0,6.2417088};
			};
			id=396;
			type="SPE_AmbientWarSounds_ModuleGlobal_3DEN";
			class CustomAttributes
			{
				class Attribute0
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_maxwait";
					expression="_this setVariable ['SPE_AmbientWarSounds_maxwait',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=15;
						};
					};
				};
				class Attribute1
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_minwait";
					expression="_this setVariable ['SPE_AmbientWarSounds_minwait',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=1;
						};
					};
				};
				class Attribute2
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_switchranges";
					expression="_this setVariable ['SPE_AmbientWarSounds_switchranges',_value,true];";
					class Value
					{
						class data
						{
							singleType="STRING";
							value="[175,600]";
						};
					};
				};
				class Attribute3
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_condition";
					expression="_this setVariable ['SPE_AmbientWarSounds_condition',_value,true];";
					class Value
					{
						class data
						{
							singleType="STRING";
							value="true";
						};
					};
				};
				class Attribute4
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_customratio";
					expression="_this setVariable ['SPE_AmbientWarSounds_customratio',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=0;
						};
					};
				};
				class Attribute5
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_mg42ratio";
					expression="_this setVariable ['SPE_AmbientWarSounds_mg42ratio',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=25;
						};
					};
				};
				class Attribute6
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_cannonratio";
					expression="_this setVariable ['SPE_AmbientWarSounds_cannonratio',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=25;
						};
					};
				};
				class Attribute7
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_mgratio";
					expression="_this setVariable ['SPE_AmbientWarSounds_mgratio',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=25;
						};
					};
				};
				class Attribute8
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_maxdist";
					expression="_this setVariable ['SPE_AmbientWarSounds_maxdist',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=4000;
						};
					};
				};
				class Attribute9
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_rifleratio";
					expression="_this setVariable ['SPE_AmbientWarSounds_rifleratio',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=25;
						};
					};
				};
				class Attribute10
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_mindist";
					expression="_this setVariable ['SPE_AmbientWarSounds_mindist',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=2000;
						};
					};
				};
				nAttributes=11;
			};
		};
		class Item143
		{
			dataType="Logic";
			class PositionInfo
			{
				position[]={1876.7974,34.274673,-328.61572};
				angles[]={6.2710271,0,6.268013};
			};
			id=397;
			type="SPE_AmbientWarSounds_ModuleGlobal_3DEN";
			class CustomAttributes
			{
				class Attribute0
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_maxwait";
					expression="_this setVariable ['SPE_AmbientWarSounds_maxwait',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=15;
						};
					};
				};
				class Attribute1
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_minwait";
					expression="_this setVariable ['SPE_AmbientWarSounds_minwait',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=1;
						};
					};
				};
				class Attribute2
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_switchranges";
					expression="_this setVariable ['SPE_AmbientWarSounds_switchranges',_value,true];";
					class Value
					{
						class data
						{
							singleType="STRING";
							value="[175,600]";
						};
					};
				};
				class Attribute3
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_condition";
					expression="_this setVariable ['SPE_AmbientWarSounds_condition',_value,true];";
					class Value
					{
						class data
						{
							singleType="STRING";
							value="true";
						};
					};
				};
				class Attribute4
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_customratio";
					expression="_this setVariable ['SPE_AmbientWarSounds_customratio',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=0;
						};
					};
				};
				class Attribute5
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_mg42ratio";
					expression="_this setVariable ['SPE_AmbientWarSounds_mg42ratio',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=25;
						};
					};
				};
				class Attribute6
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_cannonratio";
					expression="_this setVariable ['SPE_AmbientWarSounds_cannonratio',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=25;
						};
					};
				};
				class Attribute7
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_mgratio";
					expression="_this setVariable ['SPE_AmbientWarSounds_mgratio',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=25;
						};
					};
				};
				class Attribute8
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_maxdist";
					expression="_this setVariable ['SPE_AmbientWarSounds_maxdist',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=4000;
						};
					};
				};
				class Attribute9
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_rifleratio";
					expression="_this setVariable ['SPE_AmbientWarSounds_rifleratio',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=25;
						};
					};
				};
				class Attribute10
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_mindist";
					expression="_this setVariable ['SPE_AmbientWarSounds_mindist',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=2000;
						};
					};
				};
				nAttributes=11;
			};
		};
		class Item144
		{
			dataType="Logic";
			class PositionInfo
			{
				position[]={1765.6948,36.382652,-160.08984};
				angles[]={0.043872811,0,6.2354078};
			};
			id=398;
			type="SPE_AmbientWarSounds_ModuleGlobal_3DEN";
			class CustomAttributes
			{
				class Attribute0
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_maxwait";
					expression="_this setVariable ['SPE_AmbientWarSounds_maxwait',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=15;
						};
					};
				};
				class Attribute1
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_minwait";
					expression="_this setVariable ['SPE_AmbientWarSounds_minwait',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=1;
						};
					};
				};
				class Attribute2
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_switchranges";
					expression="_this setVariable ['SPE_AmbientWarSounds_switchranges',_value,true];";
					class Value
					{
						class data
						{
							singleType="STRING";
							value="[175,600]";
						};
					};
				};
				class Attribute3
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_condition";
					expression="_this setVariable ['SPE_AmbientWarSounds_condition',_value,true];";
					class Value
					{
						class data
						{
							singleType="STRING";
							value="true";
						};
					};
				};
				class Attribute4
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_customratio";
					expression="_this setVariable ['SPE_AmbientWarSounds_customratio',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=0;
						};
					};
				};
				class Attribute5
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_mg42ratio";
					expression="_this setVariable ['SPE_AmbientWarSounds_mg42ratio',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=25;
						};
					};
				};
				class Attribute6
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_cannonratio";
					expression="_this setVariable ['SPE_AmbientWarSounds_cannonratio',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=25;
						};
					};
				};
				class Attribute7
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_mgratio";
					expression="_this setVariable ['SPE_AmbientWarSounds_mgratio',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=25;
						};
					};
				};
				class Attribute8
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_maxdist";
					expression="_this setVariable ['SPE_AmbientWarSounds_maxdist',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=4000;
						};
					};
				};
				class Attribute9
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_rifleratio";
					expression="_this setVariable ['SPE_AmbientWarSounds_rifleratio',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=25;
						};
					};
				};
				class Attribute10
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_mindist";
					expression="_this setVariable ['SPE_AmbientWarSounds_mindist',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=2000;
						};
					};
				};
				nAttributes=11;
			};
		};
		class Item145
		{
			dataType="Logic";
			class PositionInfo
			{
				position[]={1929.228,33.56496,-328.61572};
				angles[]={6.2509594,0,6.2814941};
			};
			id=399;
			type="SPE_AmbientWarSounds_ModuleGlobal_3DEN";
			class CustomAttributes
			{
				class Attribute0
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_maxwait";
					expression="_this setVariable ['SPE_AmbientWarSounds_maxwait',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=15;
						};
					};
				};
				class Attribute1
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_minwait";
					expression="_this setVariable ['SPE_AmbientWarSounds_minwait',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=1;
						};
					};
				};
				class Attribute2
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_switchranges";
					expression="_this setVariable ['SPE_AmbientWarSounds_switchranges',_value,true];";
					class Value
					{
						class data
						{
							singleType="STRING";
							value="[175,600]";
						};
					};
				};
				class Attribute3
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_condition";
					expression="_this setVariable ['SPE_AmbientWarSounds_condition',_value,true];";
					class Value
					{
						class data
						{
							singleType="STRING";
							value="true";
						};
					};
				};
				class Attribute4
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_customratio";
					expression="_this setVariable ['SPE_AmbientWarSounds_customratio',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=0;
						};
					};
				};
				class Attribute5
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_mg42ratio";
					expression="_this setVariable ['SPE_AmbientWarSounds_mg42ratio',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=25;
						};
					};
				};
				class Attribute6
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_cannonratio";
					expression="_this setVariable ['SPE_AmbientWarSounds_cannonratio',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=25;
						};
					};
				};
				class Attribute7
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_mgratio";
					expression="_this setVariable ['SPE_AmbientWarSounds_mgratio',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=25;
						};
					};
				};
				class Attribute8
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_maxdist";
					expression="_this setVariable ['SPE_AmbientWarSounds_maxdist',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=4000;
						};
					};
				};
				class Attribute9
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_rifleratio";
					expression="_this setVariable ['SPE_AmbientWarSounds_rifleratio',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=25;
						};
					};
				};
				class Attribute10
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_mindist";
					expression="_this setVariable ['SPE_AmbientWarSounds_mindist',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=2000;
						};
					};
				};
				nAttributes=11;
			};
		};
		class Item146
		{
			dataType="Logic";
			class PositionInfo
			{
				position[]={1977.9136,34.018177,-328.61572};
				angles[]={6.2483768,0,0.086411275};
			};
			id=400;
			type="SPE_AmbientWarSounds_ModuleGlobal_3DEN";
			class CustomAttributes
			{
				class Attribute0
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_maxwait";
					expression="_this setVariable ['SPE_AmbientWarSounds_maxwait',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=15;
						};
					};
				};
				class Attribute1
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_minwait";
					expression="_this setVariable ['SPE_AmbientWarSounds_minwait',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=1;
						};
					};
				};
				class Attribute2
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_switchranges";
					expression="_this setVariable ['SPE_AmbientWarSounds_switchranges',_value,true];";
					class Value
					{
						class data
						{
							singleType="STRING";
							value="[175,600]";
						};
					};
				};
				class Attribute3
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_condition";
					expression="_this setVariable ['SPE_AmbientWarSounds_condition',_value,true];";
					class Value
					{
						class data
						{
							singleType="STRING";
							value="true";
						};
					};
				};
				class Attribute4
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_customratio";
					expression="_this setVariable ['SPE_AmbientWarSounds_customratio',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=0;
						};
					};
				};
				class Attribute5
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_mg42ratio";
					expression="_this setVariable ['SPE_AmbientWarSounds_mg42ratio',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=25;
						};
					};
				};
				class Attribute6
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_cannonratio";
					expression="_this setVariable ['SPE_AmbientWarSounds_cannonratio',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=25;
						};
					};
				};
				class Attribute7
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_mgratio";
					expression="_this setVariable ['SPE_AmbientWarSounds_mgratio',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=25;
						};
					};
				};
				class Attribute8
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_maxdist";
					expression="_this setVariable ['SPE_AmbientWarSounds_maxdist',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=4000;
						};
					};
				};
				class Attribute9
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_rifleratio";
					expression="_this setVariable ['SPE_AmbientWarSounds_rifleratio',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=25;
						};
					};
				};
				class Attribute10
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_mindist";
					expression="_this setVariable ['SPE_AmbientWarSounds_mindist',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=2000;
						};
					};
				};
				nAttributes=11;
			};
		};
		class Item147
		{
			dataType="Logic";
			class PositionInfo
			{
				position[]={1714.5127,37.981304,-161.33789};
				angles[]={0.073735043,0,6.270216};
			};
			id=401;
			type="SPE_AmbientWarSounds_ModuleGlobal_3DEN";
			class CustomAttributes
			{
				class Attribute0
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_maxwait";
					expression="_this setVariable ['SPE_AmbientWarSounds_maxwait',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=15;
						};
					};
				};
				class Attribute1
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_minwait";
					expression="_this setVariable ['SPE_AmbientWarSounds_minwait',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=1;
						};
					};
				};
				class Attribute2
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_switchranges";
					expression="_this setVariable ['SPE_AmbientWarSounds_switchranges',_value,true];";
					class Value
					{
						class data
						{
							singleType="STRING";
							value="[175,600]";
						};
					};
				};
				class Attribute3
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_condition";
					expression="_this setVariable ['SPE_AmbientWarSounds_condition',_value,true];";
					class Value
					{
						class data
						{
							singleType="STRING";
							value="true";
						};
					};
				};
				class Attribute4
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_customratio";
					expression="_this setVariable ['SPE_AmbientWarSounds_customratio',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=0;
						};
					};
				};
				class Attribute5
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_mg42ratio";
					expression="_this setVariable ['SPE_AmbientWarSounds_mg42ratio',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=25;
						};
					};
				};
				class Attribute6
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_cannonratio";
					expression="_this setVariable ['SPE_AmbientWarSounds_cannonratio',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=25;
						};
					};
				};
				class Attribute7
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_mgratio";
					expression="_this setVariable ['SPE_AmbientWarSounds_mgratio',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=25;
						};
					};
				};
				class Attribute8
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_maxdist";
					expression="_this setVariable ['SPE_AmbientWarSounds_maxdist',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=4000;
						};
					};
				};
				class Attribute9
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_rifleratio";
					expression="_this setVariable ['SPE_AmbientWarSounds_rifleratio',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=25;
						};
					};
				};
				class Attribute10
				{
					property="SPE_AmbientWarSounds_ModuleGlobal_3DEN_SPE_AmbientWarSounds_mindist";
					expression="_this setVariable ['SPE_AmbientWarSounds_mindist',_value,true];";
					class Value
					{
						class data
						{
							singleType="SCALAR";
							value=2000;
						};
					};
				};
				nAttributes=11;
			};
		};
	};
	class Connections
	{
		class LinkIDProvider
		{
			nextID=66;
		};
		class Links
		{
			items=66;
			class Item0
			{
				linkID=0;
				item0=49;
				item1=10;
				class CustomData
				{
					type="Sync";
				};
			};
			class Item1
			{
				linkID=1;
				item0=50;
				item1=10;
				class CustomData
				{
					type="Sync";
				};
			};
			class Item2
			{
				linkID=2;
				item0=51;
				item1=10;
				class CustomData
				{
					type="Sync";
				};
			};
			class Item3
			{
				linkID=3;
				item0=69;
				item1=2;
				class CustomData
				{
					type="Sync";
				};
			};
			class Item4
			{
				linkID=4;
				item0=70;
				item1=2;
				class CustomData
				{
					type="Sync";
				};
			};
			class Item5
			{
				linkID=5;
				item0=72;
				item1=2;
				class CustomData
				{
					type="Sync";
				};
			};
			class Item6
			{
				linkID=6;
				item0=74;
				item1=2;
				class CustomData
				{
					type="Sync";
				};
			};
			class Item7
			{
				linkID=7;
				item0=76;
				item1=2;
				class CustomData
				{
					type="Sync";
				};
			};
			class Item8
			{
				linkID=8;
				item0=77;
				item1=2;
				class CustomData
				{
					type="Sync";
				};
			};
			class Item9
			{
				linkID=9;
				item0=71;
				item1=2;
				class CustomData
				{
					type="Sync";
				};
			};
			class Item10
			{
				linkID=10;
				item0=73;
				item1=2;
				class CustomData
				{
					type="Sync";
				};
			};
			class Item11
			{
				linkID=11;
				item0=52;
				item1=10;
				class CustomData
				{
					type="Sync";
				};
			};
			class Item12
			{
				linkID=12;
				item0=211;
				item1=212;
				class CustomData
				{
					type="Sync";
				};
			};
			class Item13
			{
				linkID=13;
				item0=210;
				item1=212;
				class CustomData
				{
					type="Sync";
				};
			};
			class Item14
			{
				linkID=14;
				item0=214;
				item1=215;
				class CustomData
				{
					type="Sync";
				};
			};
			class Item15
			{
				linkID=15;
				item0=216;
				item1=215;
				class CustomData
				{
					type="Sync";
				};
			};
			class Item16
			{
				linkID=16;
				item0=227;
				item1=228;
				class CustomData
				{
					type="Sync";
				};
			};
			class Item17
			{
				linkID=17;
				item0=229;
				item1=228;
				class CustomData
				{
					type="Sync";
				};
			};
			class Item18
			{
				linkID=18;
				item0=218;
				item1=219;
				class CustomData
				{
					type="Sync";
				};
			};
			class Item19
			{
				linkID=19;
				item0=220;
				item1=219;
				class CustomData
				{
					type="Sync";
				};
			};
			class Item20
			{
				linkID=20;
				item0=222;
				item1=223;
				class CustomData
				{
					type="Sync";
				};
			};
			class Item21
			{
				linkID=21;
				item0=224;
				item1=223;
				class CustomData
				{
					type="Sync";
				};
			};
			class Item22
			{
				linkID=22;
				item0=231;
				item1=232;
				class CustomData
				{
					type="Sync";
				};
			};
			class Item23
			{
				linkID=23;
				item0=233;
				item1=232;
				class CustomData
				{
					type="Sync";
				};
			};
			class Item24
			{
				linkID=24;
				item0=179;
				item1=180;
				class CustomData
				{
					type="Sync";
				};
			};
			class Item25
			{
				linkID=25;
				item0=181;
				item1=180;
				class CustomData
				{
					type="Sync";
				};
			};
			class Item26
			{
				linkID=26;
				item0=183;
				item1=184;
				class CustomData
				{
					type="Sync";
				};
			};
			class Item27
			{
				linkID=27;
				item0=185;
				item1=184;
				class CustomData
				{
					type="Sync";
				};
			};
			class Item28
			{
				linkID=28;
				item0=188;
				item1=189;
				class CustomData
				{
					type="Sync";
				};
			};
			class Item29
			{
				linkID=29;
				item0=190;
				item1=189;
				class CustomData
				{
					type="Sync";
				};
			};
			class Item30
			{
				linkID=30;
				item0=236;
				item1=238;
				class CustomData
				{
					type="Sync";
				};
			};
			class Item31
			{
				linkID=31;
				item0=237;
				item1=238;
				class CustomData
				{
					type="Sync";
				};
			};
			class Item32
			{
				linkID=32;
				item0=193;
				item1=194;
				class CustomData
				{
					type="Sync";
				};
			};
			class Item33
			{
				linkID=33;
				item0=195;
				item1=194;
				class CustomData
				{
					type="Sync";
				};
			};
			class Item34
			{
				linkID=34;
				item0=240;
				item1=242;
				class CustomData
				{
					type="Sync";
				};
			};
			class Item35
			{
				linkID=35;
				item0=241;
				item1=242;
				class CustomData
				{
					type="Sync";
				};
			};
			class Item36
			{
				linkID=36;
				item0=244;
				item1=246;
				class CustomData
				{
					type="Sync";
				};
			};
			class Item37
			{
				linkID=37;
				item0=245;
				item1=246;
				class CustomData
				{
					type="Sync";
				};
			};
			class Item38
			{
				linkID=38;
				item0=248;
				item1=250;
				class CustomData
				{
					type="Sync";
				};
			};
			class Item39
			{
				linkID=39;
				item0=249;
				item1=250;
				class CustomData
				{
					type="Sync";
				};
			};
			class Item40
			{
				linkID=40;
				item0=197;
				item1=199;
				class CustomData
				{
					type="Sync";
				};
			};
			class Item41
			{
				linkID=41;
				item0=198;
				item1=199;
				class CustomData
				{
					type="Sync";
				};
			};
			class Item42
			{
				linkID=42;
				item0=201;
				item1=203;
				class CustomData
				{
					type="Sync";
				};
			};
			class Item43
			{
				linkID=43;
				item0=202;
				item1=203;
				class CustomData
				{
					type="Sync";
				};
			};
			class Item44
			{
				linkID=44;
				item0=205;
				item1=207;
				class CustomData
				{
					type="Sync";
				};
			};
			class Item45
			{
				linkID=45;
				item0=206;
				item1=207;
				class CustomData
				{
					type="Sync";
				};
			};
			class Item46
			{
				linkID=46;
				item0=252;
				item1=254;
				class CustomData
				{
					type="Sync";
				};
			};
			class Item47
			{
				linkID=47;
				item0=253;
				item1=254;
				class CustomData
				{
					type="Sync";
				};
			};
			class Item48
			{
				linkID=48;
				item0=255;
				item1=257;
				class CustomData
				{
					type="Sync";
				};
			};
			class Item49
			{
				linkID=49;
				item0=256;
				item1=257;
				class CustomData
				{
					type="Sync";
				};
			};
			class Item50
			{
				linkID=50;
				item0=259;
				item1=261;
				class CustomData
				{
					type="Sync";
				};
			};
			class Item51
			{
				linkID=51;
				item0=260;
				item1=261;
				class CustomData
				{
					type="Sync";
				};
			};
			class Item52
			{
				linkID=52;
				item0=262;
				item1=264;
				class CustomData
				{
					type="Sync";
				};
			};
			class Item53
			{
				linkID=53;
				item0=263;
				item1=264;
				class CustomData
				{
					type="Sync";
				};
			};
			class Item54
			{
				linkID=54;
				item0=268;
				item1=267;
				class CustomData
				{
					type="Sync";
				};
			};
			class Item55
			{
				linkID=55;
				item0=266;
				item1=267;
				class CustomData
				{
					type="Sync";
				};
			};
			class Item56
			{
				linkID=56;
				item0=271;
				item1=270;
				class CustomData
				{
					type="Sync";
				};
			};
			class Item57
			{
				linkID=57;
				item0=269;
				item1=270;
				class CustomData
				{
					type="Sync";
				};
			};
			class Item58
			{
				linkID=58;
				item0=274;
				item1=273;
				class CustomData
				{
					type="Sync";
				};
			};
			class Item59
			{
				linkID=59;
				item0=272;
				item1=273;
				class CustomData
				{
					type="Sync";
				};
			};
			class Item60
			{
				linkID=60;
				item0=276;
				item1=278;
				class CustomData
				{
					type="Sync";
				};
			};
			class Item61
			{
				linkID=61;
				item0=277;
				item1=278;
				class CustomData
				{
					type="Sync";
				};
			};
			class Item62
			{
				linkID=62;
				item0=280;
				item1=282;
				class CustomData
				{
					type="Sync";
				};
			};
			class Item63
			{
				linkID=63;
				item0=281;
				item1=282;
				class CustomData
				{
					type="Sync";
				};
			};
			class Item64
			{
				linkID=64;
				item0=330;
				item1=3;
				class CustomData
				{
					type="Sync";
				};
			};
			class Item65
			{
				linkID=65;
				item0=331;
				item1=3;
				class CustomData
				{
					type="Sync";
				};
			};
		};
	};
};
